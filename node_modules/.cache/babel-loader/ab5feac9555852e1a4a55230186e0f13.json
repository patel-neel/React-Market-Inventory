{"ast":null,"code":"/*!\n * Stylus - Each\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nvar Node = require('./node'),\n    nodes = require('./');\n/**\n * Initialize a new `Each` node with the given `val` name,\n * `key` name, `expr`, and `block`.\n *\n * @param {String} val\n * @param {String} key\n * @param {Expression} expr\n * @param {Block} block\n * @api public\n */\n\n\nvar Each = module.exports = function Each(val, key, expr, block) {\n  Node.call(this);\n  this.val = val;\n  this.key = key;\n  this.expr = expr;\n  this.block = block;\n};\n/**\n * Inherit from `Node.prototype`.\n */\n\n\nEach.prototype.__proto__ = Node.prototype;\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nEach.prototype.clone = function (parent) {\n  var clone = new Each(this.val, this.key);\n  clone.expr = this.expr.clone(parent, clone);\n  clone.block = this.block.clone(parent, clone);\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  return clone;\n};\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\n\nEach.prototype.toJSON = function () {\n  return {\n    __type: 'Each',\n    val: this.val,\n    key: this.key,\n    expr: this.expr,\n    block: this.block,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/nodes/each.js"],"names":["Node","require","nodes","Each","module","exports","val","key","expr","block","call","prototype","__proto__","clone","parent","lineno","column","filename","toJSON","__type"],"mappings":"AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;AAAA,IACIC,KAAK,GAAGD,OAAO,CAAC,IAAD,CADnB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIE,IAAI,GAAGC,MAAM,CAACC,OAAP,GAAiB,SAASF,IAAT,CAAcG,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,KAA9B,EAAoC;AAC9DT,EAAAA,IAAI,CAACU,IAAL,CAAU,IAAV;AACA,OAAKJ,GAAL,GAAWA,GAAX;AACA,OAAKC,GAAL,GAAWA,GAAX;AACA,OAAKC,IAAL,GAAYA,IAAZ;AACA,OAAKC,KAAL,GAAaA,KAAb;AACD,CAND;AAQA;AACA;AACA;;;AAEAN,IAAI,CAACQ,SAAL,CAAeC,SAAf,GAA2BZ,IAAI,CAACW,SAAhC;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAR,IAAI,CAACQ,SAAL,CAAeE,KAAf,GAAuB,UAASC,MAAT,EAAgB;AACrC,MAAID,KAAK,GAAG,IAAIV,IAAJ,CAAS,KAAKG,GAAd,EAAmB,KAAKC,GAAxB,CAAZ;AACAM,EAAAA,KAAK,CAACL,IAAN,GAAa,KAAKA,IAAL,CAAUK,KAAV,CAAgBC,MAAhB,EAAwBD,KAAxB,CAAb;AACAA,EAAAA,KAAK,CAACJ,KAAN,GAAc,KAAKA,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,EAAyBD,KAAzB,CAAd;AACAA,EAAAA,KAAK,CAACE,MAAN,GAAe,KAAKA,MAApB;AACAF,EAAAA,KAAK,CAACG,MAAN,GAAe,KAAKA,MAApB;AACAH,EAAAA,KAAK,CAACI,QAAN,GAAiB,KAAKA,QAAtB;AACA,SAAOJ,KAAP;AACD,CARD;AAUA;AACA;AACA;AACA;AACA;AACA;;;AAEAV,IAAI,CAACQ,SAAL,CAAeO,MAAf,GAAwB,YAAU;AAChC,SAAO;AACLC,IAAAA,MAAM,EAAE,MADH;AAELb,IAAAA,GAAG,EAAE,KAAKA,GAFL;AAGLC,IAAAA,GAAG,EAAE,KAAKA,GAHL;AAILC,IAAAA,IAAI,EAAE,KAAKA,IAJN;AAKLC,IAAAA,KAAK,EAAE,KAAKA,KALP;AAMLM,IAAAA,MAAM,EAAE,KAAKA,MANR;AAOLC,IAAAA,MAAM,EAAE,KAAKA,MAPR;AAQLC,IAAAA,QAAQ,EAAE,KAAKA;AARV,GAAP;AAUD,CAXD","sourcesContent":["\n/*!\n * Stylus - Each\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node')\n  , nodes = require('./');\n\n/**\n * Initialize a new `Each` node with the given `val` name,\n * `key` name, `expr`, and `block`.\n *\n * @param {String} val\n * @param {String} key\n * @param {Expression} expr\n * @param {Block} block\n * @api public\n */\n\nvar Each = module.exports = function Each(val, key, expr, block){\n  Node.call(this);\n  this.val = val;\n  this.key = key;\n  this.expr = expr;\n  this.block = block;\n};\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nEach.prototype.__proto__ = Node.prototype;\n\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nEach.prototype.clone = function(parent){\n  var clone = new Each(this.val, this.key);\n  clone.expr = this.expr.clone(parent, clone);\n  clone.block = this.block.clone(parent, clone);\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  return clone;\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nEach.prototype.toJSON = function(){\n  return {\n    __type: 'Each',\n    val: this.val,\n    key: this.key,\n    expr: this.expr,\n    block: this.block,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n"]},"metadata":{},"sourceType":"script"}