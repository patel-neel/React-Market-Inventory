{"ast":null,"code":"if (typeof fetch === \"function\") {\n  // Web version of reading a wasm file into an array buffer.\n  var mappingsWasmUrl = null;\n\n  module.exports = function readWasm() {\n    if (typeof mappingsWasmUrl !== \"string\") {\n      throw new Error(\"You must provide the URL of lib/mappings.wasm by calling \" + \"SourceMapConsumer.initialize({ 'lib/mappings.wasm': ... }) \" + \"before using SourceMapConsumer\");\n    }\n\n    return fetch(mappingsWasmUrl).then(function (response) {\n      return response.arrayBuffer();\n    });\n  };\n\n  module.exports.initialize = function (url) {\n    return mappingsWasmUrl = url;\n  };\n} else {\n  // Node version of reading a wasm file into an array buffer.\n  var fs = require(\"fs\");\n\n  var path = require(\"path\");\n\n  module.exports = function readWasm() {\n    return new Promise(function (resolve, reject) {\n      var wasmPath = path.join(__dirname, \"mappings.wasm\");\n      fs.readFile(wasmPath, null, function (error, data) {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(data.buffer);\n      });\n    });\n  };\n\n  module.exports.initialize = function (_) {\n    console.debug(\"SourceMapConsumer.initialize is a no-op when running in node.js\");\n  };\n}","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/node_modules/source-map/lib/read-wasm.js"],"names":["fetch","mappingsWasmUrl","module","exports","readWasm","Error","then","response","arrayBuffer","initialize","url","fs","require","path","Promise","resolve","reject","wasmPath","join","__dirname","readFile","error","data","buffer","_","console","debug"],"mappings":"AAAA,IAAI,OAAOA,KAAP,KAAiB,UAArB,EAAiC;AAC/B;AAEA,MAAIC,eAAe,GAAG,IAAtB;;AAEAC,EAAAA,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,GAAoB;AACnC,QAAI,OAAOH,eAAP,KAA2B,QAA/B,EAAyC;AACvC,YAAM,IAAII,KAAJ,CAAU,8DACA,6DADA,GAEA,gCAFV,CAAN;AAGD;;AAED,WAAOL,KAAK,CAACC,eAAD,CAAL,CACJK,IADI,CACC,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,WAAT,EAAJ;AAAA,KADT,CAAP;AAED,GATD;;AAWAN,EAAAA,MAAM,CAACC,OAAP,CAAeM,UAAf,GAA4B,UAAAC,GAAG;AAAA,WAAIT,eAAe,GAAGS,GAAtB;AAAA,GAA/B;AACD,CAjBD,MAiBO;AACL;AACA,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAEAV,EAAAA,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,GAAoB;AACnC,WAAO,IAAIU,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,UAAMC,QAAQ,GAAGJ,IAAI,CAACK,IAAL,CAAUC,SAAV,EAAqB,eAArB,CAAjB;AACAR,MAAAA,EAAE,CAACS,QAAH,CAAYH,QAAZ,EAAsB,IAAtB,EAA4B,UAACI,KAAD,EAAQC,IAAR,EAAiB;AAC3C,YAAID,KAAJ,EAAW;AACTL,UAAAA,MAAM,CAACK,KAAD,CAAN;AACA;AACD;;AAEDN,QAAAA,OAAO,CAACO,IAAI,CAACC,MAAN,CAAP;AACD,OAPD;AAQD,KAVM,CAAP;AAWD,GAZD;;AAcArB,EAAAA,MAAM,CAACC,OAAP,CAAeM,UAAf,GAA4B,UAAAe,CAAC,EAAI;AAC/BC,IAAAA,OAAO,CAACC,KAAR,CAAc,iEAAd;AACD,GAFD;AAGD","sourcesContent":["if (typeof fetch === \"function\") {\n  // Web version of reading a wasm file into an array buffer.\n\n  let mappingsWasmUrl = null;\n\n  module.exports = function readWasm() {\n    if (typeof mappingsWasmUrl !== \"string\") {\n      throw new Error(\"You must provide the URL of lib/mappings.wasm by calling \" +\n                      \"SourceMapConsumer.initialize({ 'lib/mappings.wasm': ... }) \" +\n                      \"before using SourceMapConsumer\");\n    }\n\n    return fetch(mappingsWasmUrl)\n      .then(response => response.arrayBuffer());\n  };\n\n  module.exports.initialize = url => mappingsWasmUrl = url;\n} else {\n  // Node version of reading a wasm file into an array buffer.\n  const fs = require(\"fs\");\n  const path = require(\"path\");\n\n  module.exports = function readWasm() {\n    return new Promise((resolve, reject) => {\n      const wasmPath = path.join(__dirname, \"mappings.wasm\");\n      fs.readFile(wasmPath, null, (error, data) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(data.buffer);\n      });\n    });\n  };\n\n  module.exports.initialize = _ => {\n    console.debug(\"SourceMapConsumer.initialize is a no-op when running in node.js\");\n  };\n}\n"]},"metadata":{},"sourceType":"script"}