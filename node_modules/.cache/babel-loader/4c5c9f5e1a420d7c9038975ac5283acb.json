{"ast":null,"code":"var utils = require('../utils'),\n    nodes = require('../nodes'),\n    readFile = require('fs').readFileSync;\n/**\n * Convert a .json file into stylus variables or object.\n * Nested variable object keys are joined with a dash (-)\n *\n * Given this sample media-queries.json file:\n * {\n *   \"small\": \"screen and (max-width:400px)\",\n *   \"tablet\": {\n *     \"landscape\": \"screen and (min-width:600px) and (orientation:landscape)\",\n *     \"portrait\": \"screen and (min-width:600px) and (orientation:portrait)\"\n *   }\n * }\n *\n * Examples:\n *\n *    json('media-queries.json')\n *\n *    @media small\n *    // => @media screen and (max-width:400px)\n *\n *    @media tablet-landscape\n *    // => @media screen and (min-width:600px) and (orientation:landscape)\n *\n *    vars = json('vars.json', { hash: true })\n *    body\n *      width: vars.width\n *\n * @param {String} path\n * @param {Boolean} [local]\n * @param {String} [namePrefix]\n * @api public\n*/\n\n\nfunction json(path, local, namePrefix) {\n  utils.assertString(path, 'path'); // lookup\n\n  path = path.string;\n  var found = utils.lookup(path, this.options.paths, this.options.filename),\n      options = local && 'object' == local.nodeName && local;\n\n  if (!found) {\n    // optional JSON file\n    if (options && options.get('optional').toBoolean().isTrue) {\n      return nodes.null;\n    }\n\n    throw new Error('failed to locate .json file ' + path);\n  } // read\n\n\n  var json = JSON.parse(readFile(found, 'utf8'));\n\n  if (options) {\n    return convert(json, options);\n  } else {\n    oldJson.call(this, json, local, namePrefix);\n  }\n\n  function convert(obj, options) {\n    var ret = new nodes.Object(),\n        leaveStrings = options.get('leave-strings').toBoolean();\n\n    for (var key in obj) {\n      var val = obj[key];\n\n      if ('object' == typeof val) {\n        ret.set(key, convert(val, options));\n      } else {\n        val = utils.coerce(val);\n\n        if ('string' == val.nodeName && leaveStrings.isFalse) {\n          val = utils.parseString(val.string);\n        }\n\n        ret.set(key, val);\n      }\n    }\n\n    return ret;\n  }\n}\n\n;\njson.params = ['path', 'local', 'namePrefix'];\nmodule.exports = json;\n/**\n * Old `json` BIF.\n *\n * @api private\n */\n\nfunction oldJson(json, local, namePrefix) {\n  if (namePrefix) {\n    utils.assertString(namePrefix, 'namePrefix');\n    namePrefix = namePrefix.val;\n  } else {\n    namePrefix = '';\n  }\n\n  local = local ? local.toBoolean() : new nodes.Boolean(local);\n  var scope = local.isTrue ? this.currentScope : this.global.scope;\n  convert(json);\n  return;\n\n  function convert(obj, prefix) {\n    prefix = prefix ? prefix + '-' : '';\n\n    for (var key in obj) {\n      var val = obj[key];\n      var name = prefix + key;\n\n      if ('object' == typeof val) {\n        convert(val, name);\n      } else {\n        val = utils.coerce(val);\n        if ('string' == val.nodeName) val = utils.parseString(val.string);\n        scope.add({\n          name: namePrefix + name,\n          val: val\n        });\n      }\n    }\n  }\n}\n\n;","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/functions/json.js"],"names":["utils","require","nodes","readFile","readFileSync","json","path","local","namePrefix","assertString","string","found","lookup","options","paths","filename","nodeName","get","toBoolean","isTrue","null","Error","JSON","parse","convert","oldJson","call","obj","ret","Object","leaveStrings","key","val","set","coerce","isFalse","parseString","params","module","exports","Boolean","scope","currentScope","global","prefix","name","add"],"mappings":"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","sourcesContent":["var utils = require('../utils')\n  , nodes = require('../nodes')\n  , readFile = require('fs').readFileSync;\n\n/**\n * Convert a .json file into stylus variables or object.\n * Nested variable object keys are joined with a dash (-)\n *\n * Given this sample media-queries.json file:\n * {\n *   \"small\": \"screen and (max-width:400px)\",\n *   \"tablet\": {\n *     \"landscape\": \"screen and (min-width:600px) and (orientation:landscape)\",\n *     \"portrait\": \"screen and (min-width:600px) and (orientation:portrait)\"\n *   }\n * }\n *\n * Examples:\n *\n *    json('media-queries.json')\n *\n *    @media small\n *    // => @media screen and (max-width:400px)\n *\n *    @media tablet-landscape\n *    // => @media screen and (min-width:600px) and (orientation:landscape)\n *\n *    vars = json('vars.json', { hash: true })\n *    body\n *      width: vars.width\n *\n * @param {String} path\n * @param {Boolean} [local]\n * @param {String} [namePrefix]\n * @api public\n*/\n\nfunction json(path, local, namePrefix){\n  utils.assertString(path, 'path');\n\n  // lookup\n  path = path.string;\n  var found = utils.lookup(path, this.options.paths, this.options.filename)\n    , options = (local && 'object' == local.nodeName) && local;\n\n  if (!found) {\n    // optional JSON file\n    if (options && options.get('optional').toBoolean().isTrue) {\n      return nodes.null;\n    }\n    throw new Error('failed to locate .json file ' + path);\n  }\n\n  // read\n  var json = JSON.parse(readFile(found, 'utf8'));\n\n  if (options) {\n    return convert(json, options);\n  } else {\n    oldJson.call(this, json, local, namePrefix);\n  }\n\n  function convert(obj, options){\n    var ret = new nodes.Object()\n      , leaveStrings = options.get('leave-strings').toBoolean();\n\n    for (var key in obj) {\n      var val = obj[key];\n      if ('object' == typeof val) {\n        ret.set(key, convert(val, options));\n      } else {\n        val = utils.coerce(val);\n        if ('string' == val.nodeName && leaveStrings.isFalse) {\n          val = utils.parseString(val.string);\n        }\n        ret.set(key, val);\n      }\n    }\n    return ret;\n  }\n};\njson.params = ['path', 'local', 'namePrefix'];\nmodule.exports = json;\n\n/**\n * Old `json` BIF.\n *\n * @api private\n */\n\nfunction oldJson(json, local, namePrefix){\n  if (namePrefix) {\n    utils.assertString(namePrefix, 'namePrefix');\n    namePrefix = namePrefix.val;\n  } else {\n    namePrefix = '';\n  }\n  local = local ? local.toBoolean() : new nodes.Boolean(local);\n  var scope = local.isTrue ? this.currentScope : this.global.scope;\n\n  convert(json);\n  return;\n\n  function convert(obj, prefix){\n    prefix = prefix ? prefix + '-' : '';\n    for (var key in obj){\n      var val = obj[key];\n      var name = prefix + key;\n      if ('object' == typeof val) {\n        convert(val, name);\n      } else {\n        val = utils.coerce(val);\n        if ('string' == val.nodeName) val = utils.parseString(val.string);\n        scope.add({ name: namePrefix + name, val: val });\n      }\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}