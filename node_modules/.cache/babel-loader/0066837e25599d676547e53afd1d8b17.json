{"ast":null,"code":"var utils = require('../utils'),\n    nodes = require('../nodes');\n/**\n * Returns substring of the given `val`.\n *\n * @param {String|Ident} val\n * @param {Number} start\n * @param {Number} [length]\n * @return {String|Ident}\n * @api public\n */\n\n\nfunction substr(val, start, length) {\n  utils.assertString(val, 'val');\n  utils.assertType(start, 'unit', 'start');\n  length = length && length.val;\n  var res = val.string.substr(start.val, length);\n  return val instanceof nodes.Ident ? new nodes.Ident(res) : new nodes.String(res);\n}\n\nsubstr.params = ['val', 'start', 'length'];\nmodule.exports = substr;","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/functions/substr.js"],"names":["utils","require","nodes","substr","val","start","length","assertString","assertType","res","string","Ident","String","params","module","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAAnB;AAAA,IACIC,KAAK,GAAGD,OAAO,CAAC,UAAD,CADnB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASE,MAAT,CAAgBC,GAAhB,EAAqBC,KAArB,EAA4BC,MAA5B,EAAmC;AACjCN,EAAAA,KAAK,CAACO,YAAN,CAAmBH,GAAnB,EAAwB,KAAxB;AACAJ,EAAAA,KAAK,CAACQ,UAAN,CAAiBH,KAAjB,EAAwB,MAAxB,EAAgC,OAAhC;AACAC,EAAAA,MAAM,GAAGA,MAAM,IAAIA,MAAM,CAACF,GAA1B;AACA,MAAIK,GAAG,GAAGL,GAAG,CAACM,MAAJ,CAAWP,MAAX,CAAkBE,KAAK,CAACD,GAAxB,EAA6BE,MAA7B,CAAV;AACA,SAAOF,GAAG,YAAYF,KAAK,CAACS,KAArB,GACD,IAAIT,KAAK,CAACS,KAAV,CAAgBF,GAAhB,CADC,GAED,IAAIP,KAAK,CAACU,MAAV,CAAiBH,GAAjB,CAFN;AAGD;;AACDN,MAAM,CAACU,MAAP,GAAgB,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,CAAhB;AACAC,MAAM,CAACC,OAAP,GAAiBZ,MAAjB","sourcesContent":["var utils = require('../utils')\n  , nodes = require('../nodes');\n\n/**\n * Returns substring of the given `val`.\n *\n * @param {String|Ident} val\n * @param {Number} start\n * @param {Number} [length]\n * @return {String|Ident}\n * @api public\n */\n\nfunction substr(val, start, length){\n  utils.assertString(val, 'val');\n  utils.assertType(start, 'unit', 'start');\n  length = length && length.val;\n  var res = val.string.substr(start.val, length);\n  return val instanceof nodes.Ident\n      ? new nodes.Ident(res)\n      : new nodes.String(res);\n}\nsubstr.params = ['val', 'start', 'length'];\nmodule.exports = substr;\n"]},"metadata":{},"sourceType":"script"}