{"ast":null,"code":"/*!\n * Stylus - Lexer\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nvar Token = require('./token'),\n    nodes = require('./nodes'),\n    errors = require('./errors');\n/**\n * Expose `Lexer`.\n */\n\n\nexports = module.exports = Lexer;\n/**\n * Operator aliases.\n */\n\nvar alias = {\n  'and': '&&',\n  'or': '||',\n  'is': '==',\n  'isnt': '!=',\n  'is not': '!=',\n  ':=': '?='\n};\n/**\n * Initialize a new `Lexer` with the given `str` and `options`.\n *\n * @param {String} str\n * @param {Object} options\n * @api private\n */\n\nfunction Lexer(str, options) {\n  options = options || {};\n  this.stash = [];\n  this.indentStack = [];\n  this.indentRe = null;\n  this.lineno = 1;\n  this.column = 1; // HACK!\n\n  function comment(str, val, offset, s) {\n    var inComment = s.lastIndexOf('/*', offset) > s.lastIndexOf('*/', offset),\n        commentIdx = s.lastIndexOf('//', offset),\n        i = s.lastIndexOf('\\n', offset),\n        double = 0,\n        single = 0;\n\n    if (~commentIdx && commentIdx > i) {\n      while (i != offset) {\n        if (\"'\" == s[i]) single ? single-- : single++;\n        if ('\"' == s[i]) double ? double-- : double++;\n\n        if ('/' == s[i] && '/' == s[i + 1]) {\n          inComment = !single && !double;\n          break;\n        }\n\n        ++i;\n      }\n    }\n\n    return inComment ? str : val === ',' && /^[,\\t\\n]+$/.test(str) ? str.replace(/\\n/, '\\r') : val + '\\r';\n  }\n\n  ; // Remove UTF-8 BOM.\n\n  if ('\\uFEFF' == str.charAt(0)) str = str.slice(1);\n  this.str = str.replace(/\\s+$/, '\\n').replace(/\\r\\n?/g, '\\n').replace(/\\\\ *\\n/g, '\\r').replace(/([,(:](?!\\/\\/[^ ])) *(?:\\/\\/[^\\n]*|\\/\\*.*?\\*\\/)?\\n\\s*/g, comment).replace(/\\s*\\n[ \\t]*([,)])/g, comment);\n}\n\n;\n/**\n * Lexer prototype.\n */\n\nLexer.prototype = {\n  /**\n   * Custom inspect.\n   */\n  inspect: function inspect() {\n    var tok,\n        tmp = this.str,\n        buf = [];\n\n    while ('eos' != (tok = this.next()).type) {\n      buf.push(tok.inspect());\n    }\n\n    this.str = tmp;\n    return buf.concat(tok.inspect()).join('\\n');\n  },\n\n  /**\n   * Lookahead `n` tokens.\n   *\n   * @param {Number} n\n   * @return {Object}\n   * @api private\n   */\n  lookahead: function lookahead(n) {\n    var fetch = n - this.stash.length;\n\n    while (fetch-- > 0) {\n      this.stash.push(this.advance());\n    }\n\n    return this.stash[--n];\n  },\n\n  /**\n   * Consume the given `len`.\n   *\n   * @param {Number|Array} len\n   * @api private\n   */\n  skip: function skip(len) {\n    var chunk = len[0];\n    len = chunk ? chunk.length : len;\n    this.str = this.str.substr(len);\n\n    if (chunk) {\n      this.move(chunk);\n    } else {\n      this.column += len;\n    }\n  },\n\n  /**\n   * Move current line and column position.\n   *\n   * @param {String} str\n   * @api private\n   */\n  move: function move(str) {\n    var lines = str.match(/\\n/g),\n        idx = str.lastIndexOf('\\n');\n    if (lines) this.lineno += lines.length;\n    this.column = ~idx ? str.length - idx : this.column + str.length;\n  },\n\n  /**\n   * Fetch next token including those stashed by peek.\n   *\n   * @return {Token}\n   * @api private\n   */\n  next: function next() {\n    var tok = this.stashed() || this.advance();\n    this.prev = tok;\n    return tok;\n  },\n\n  /**\n   * Check if the current token is a part of selector.\n   *\n   * @return {Boolean}\n   * @api private\n   */\n  isPartOfSelector: function isPartOfSelector() {\n    var tok = this.stash[this.stash.length - 1] || this.prev;\n\n    switch (tok && tok.type) {\n      // #for\n      case 'color':\n        return 2 == tok.val.raw.length;\n      // .or\n\n      case '.': // [is]\n\n      case '[':\n        return true;\n    }\n\n    return false;\n  },\n\n  /**\n   * Fetch next token.\n   *\n   * @return {Token}\n   * @api private\n   */\n  advance: function advance() {\n    var column = this.column,\n        line = this.lineno,\n        tok = this.eos() || this.null() || this.sep() || this.keyword() || this.urlchars() || this.comment() || this.newline() || this.escaped() || this.important() || this.literal() || this.anonFunc() || this.atrule() || this.function() || this.brace() || this.paren() || this.color() || this.string() || this.unit() || this.namedop() || this.boolean() || this.unicode() || this.ident() || this.op() || function () {\n      var token = this.eol();\n\n      if (token) {\n        column = token.column;\n        line = token.lineno;\n      }\n\n      return token;\n    }.call(this) || this.space() || this.selector();\n\n    tok.lineno = line;\n    tok.column = column;\n    return tok;\n  },\n\n  /**\n   * Lookahead a single token.\n   *\n   * @return {Token}\n   * @api private\n   */\n  peek: function peek() {\n    return this.lookahead(1);\n  },\n\n  /**\n   * Return the next possibly stashed token.\n   *\n   * @return {Token}\n   * @api private\n   */\n  stashed: function stashed() {\n    return this.stash.shift();\n  },\n\n  /**\n   * EOS | trailing outdents.\n   */\n  eos: function eos() {\n    if (this.str.length) return;\n\n    if (this.indentStack.length) {\n      this.indentStack.shift();\n      return new Token('outdent');\n    } else {\n      return new Token('eos');\n    }\n  },\n\n  /**\n   * url char\n   */\n  urlchars: function urlchars() {\n    var captures;\n    if (!this.isURL) return;\n\n    if (captures = /^[\\/:@.;?&=*!,<>#%0-9]+/.exec(this.str)) {\n      this.skip(captures);\n      return new Token('literal', new nodes.Literal(captures[0]));\n    }\n  },\n\n  /**\n   * ';' [ \\t]*\n   */\n  sep: function sep() {\n    var captures;\n\n    if (captures = /^;[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      return new Token(';');\n    }\n  },\n\n  /**\n   * '\\r'\n   */\n  eol: function eol() {\n    if ('\\r' == this.str[0]) {\n      ++this.lineno;\n      this.skip(1);\n      this.column = 1;\n\n      while (this.space()) {\n        ;\n      }\n\n      return this.advance();\n    }\n  },\n\n  /**\n   * ' '+\n   */\n  space: function space() {\n    var captures;\n\n    if (captures = /^([ \\t]+)/.exec(this.str)) {\n      this.skip(captures);\n      return new Token('space');\n    }\n  },\n\n  /**\n   * '\\\\' . ' '*\n   */\n  escaped: function escaped() {\n    var captures;\n\n    if (captures = /^\\\\(.)[ \\t]*/.exec(this.str)) {\n      var c = captures[1];\n      this.skip(captures);\n      return new Token('ident', new nodes.Literal(c));\n    }\n  },\n\n  /**\n   * '@css' ' '* '{' .* '}' ' '*\n   */\n  literal: function literal() {\n    // HACK attack !!!\n    var captures;\n\n    if (captures = /^@css[ \\t]*\\{/.exec(this.str)) {\n      this.skip(captures);\n      var c,\n          braces = 1,\n          css = '',\n          node;\n\n      while (c = this.str[0]) {\n        this.str = this.str.substr(1);\n\n        switch (c) {\n          case '{':\n            ++braces;\n            break;\n\n          case '}':\n            --braces;\n            break;\n\n          case '\\n':\n          case '\\r':\n            ++this.lineno;\n            break;\n        }\n\n        css += c;\n        if (!braces) break;\n      }\n\n      css = css.replace(/\\s*}$/, '');\n      node = new nodes.Literal(css);\n      node.css = true;\n      return new Token('literal', node);\n    }\n  },\n\n  /**\n   * '!important' ' '*\n   */\n  important: function important() {\n    var captures;\n\n    if (captures = /^!important[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      return new Token('ident', new nodes.Literal('!important'));\n    }\n  },\n\n  /**\n   * '{' | '}'\n   */\n  brace: function brace() {\n    var captures;\n\n    if (captures = /^([{}])/.exec(this.str)) {\n      this.skip(1);\n      var brace = captures[1];\n      return new Token(brace, brace);\n    }\n  },\n\n  /**\n   * '(' | ')' ' '*\n   */\n  paren: function paren() {\n    var captures;\n\n    if (captures = /^([()])([ \\t]*)/.exec(this.str)) {\n      var paren = captures[1];\n      this.skip(captures);\n      if (')' == paren) this.isURL = false;\n      var tok = new Token(paren, paren);\n      tok.space = captures[2];\n      return tok;\n    }\n  },\n\n  /**\n   * 'null'\n   */\n  null: function _null() {\n    var captures, tok;\n\n    if (captures = /^(null)\\b[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n\n      if (this.isPartOfSelector()) {\n        tok = new Token('ident', new nodes.Ident(captures[0]));\n      } else {\n        tok = new Token('null', nodes.null);\n      }\n\n      return tok;\n    }\n  },\n\n  /**\n   *   'if'\n   * | 'else'\n   * | 'unless'\n   * | 'return'\n   * | 'for'\n   * | 'in'\n   */\n  keyword: function keyword() {\n    var captures, tok;\n\n    if (captures = /^(return|if|else|unless|for|in)\\b[ \\t]*/.exec(this.str)) {\n      var keyword = captures[1];\n      this.skip(captures);\n\n      if (this.isPartOfSelector()) {\n        tok = new Token('ident', new nodes.Ident(captures[0]));\n      } else {\n        tok = new Token(keyword, keyword);\n      }\n\n      return tok;\n    }\n  },\n\n  /**\n   *   'not'\n   * | 'and'\n   * | 'or'\n   * | 'is'\n   * | 'is not'\n   * | 'isnt'\n   * | 'is a'\n   * | 'is defined'\n   */\n  namedop: function namedop() {\n    var captures, tok;\n\n    if (captures = /^(not|and|or|is a|is defined|isnt|is not|is)(?!-)\\b([ \\t]*)/.exec(this.str)) {\n      var op = captures[1];\n      this.skip(captures);\n\n      if (this.isPartOfSelector()) {\n        tok = new Token('ident', new nodes.Ident(captures[0]));\n      } else {\n        op = alias[op] || op;\n        tok = new Token(op, op);\n      }\n\n      tok.space = captures[2];\n      return tok;\n    }\n  },\n\n  /**\n   *   ','\n   * | '+'\n   * | '+='\n   * | '-'\n   * | '-='\n   * | '*'\n   * | '*='\n   * | '/'\n   * | '/='\n   * | '%'\n   * | '%='\n   * | '**'\n   * | '!'\n   * | '&'\n   * | '&&'\n   * | '||'\n   * | '>'\n   * | '>='\n   * | '<'\n   * | '<='\n   * | '='\n   * | '=='\n   * | '!='\n   * | '!'\n   * | '~'\n   * | '?='\n   * | ':='\n   * | '?'\n   * | ':'\n   * | '['\n   * | ']'\n   * | '.'\n   * | '..'\n   * | '...'\n   */\n  op: function op() {\n    var captures;\n\n    if (captures = /^([.]{1,3}|&&|\\|\\||[!<>=?:]=|\\*\\*|[-+*\\/%]=?|[,=?:!~<>&\\[\\]])([ \\t]*)/.exec(this.str)) {\n      var op = captures[1];\n      this.skip(captures);\n      op = alias[op] || op;\n      var tok = new Token(op, op);\n      tok.space = captures[2];\n      this.isURL = false;\n      return tok;\n    }\n  },\n\n  /**\n   * '@('\n   */\n  anonFunc: function anonFunc() {\n    var tok;\n\n    if ('@' == this.str[0] && '(' == this.str[1]) {\n      this.skip(2);\n      tok = new Token('function', new nodes.Ident('anonymous'));\n      tok.anonymous = true;\n      return tok;\n    }\n  },\n\n  /**\n   * '@' (-(\\w+)-)?[a-zA-Z0-9-_]+\n   */\n  atrule: function atrule() {\n    var captures;\n\n    if (captures = /^@(?!apply)(?:-(\\w+)-)?([a-zA-Z0-9-_]+)[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var vendor = captures[1],\n          type = captures[2],\n          tok;\n\n      switch (type) {\n        case 'require':\n        case 'import':\n        case 'charset':\n        case 'namespace':\n        case 'media':\n        case 'scope':\n        case 'supports':\n          return new Token(type);\n\n        case 'document':\n          return new Token('-moz-document');\n\n        case 'block':\n          return new Token('atblock');\n\n        case 'extend':\n        case 'extends':\n          return new Token('extend');\n\n        case 'keyframes':\n          return new Token(type, vendor);\n\n        default:\n          return new Token('atrule', vendor ? '-' + vendor + '-' + type : type);\n      }\n    }\n  },\n\n  /**\n   * '//' *\n   */\n  comment: function comment() {\n    // Single line\n    if ('/' == this.str[0] && '/' == this.str[1]) {\n      var end = this.str.indexOf('\\n');\n      if (-1 == end) end = this.str.length;\n      this.skip(end);\n      return this.advance();\n    } // Multi-line\n\n\n    if ('/' == this.str[0] && '*' == this.str[1]) {\n      var end = this.str.indexOf('*/');\n      if (-1 == end) end = this.str.length;\n      var str = this.str.substr(0, end + 2),\n          lines = str.split(/\\n|\\r/).length - 1,\n          suppress = true,\n          inline = false;\n      this.lineno += lines;\n      this.skip(end + 2); // output\n\n      if ('!' == str[2]) {\n        str = str.replace('*!', '*');\n        suppress = false;\n      }\n\n      if (this.prev && ';' == this.prev.type) inline = true;\n      return new Token('comment', new nodes.Comment(str, suppress, inline));\n    }\n  },\n\n  /**\n   * 'true' | 'false'\n   */\n  boolean: function boolean() {\n    var captures;\n\n    if (captures = /^(true|false)\\b([ \\t]*)/.exec(this.str)) {\n      var val = nodes.Boolean('true' == captures[1]);\n      this.skip(captures);\n      var tok = new Token('boolean', val);\n      tok.space = captures[2];\n      return tok;\n    }\n  },\n\n  /**\n   * 'U+' [0-9A-Fa-f?]{1,6}(?:-[0-9A-Fa-f]{1,6})?\n   */\n  unicode: function unicode() {\n    var captures;\n\n    if (captures = /^u\\+[0-9a-f?]{1,6}(?:-[0-9a-f]{1,6})?/i.exec(this.str)) {\n      this.skip(captures);\n      return new Token('literal', new nodes.Literal(captures[0]));\n    }\n  },\n\n  /**\n   * -*[_a-zA-Z$] [-\\w\\d$]* '('\n   */\n  function: function _function() {\n    var captures;\n\n    if (captures = /^(-*[_a-zA-Z$][-\\w\\d$]*)\\(([ \\t]*)/.exec(this.str)) {\n      var name = captures[1];\n      this.skip(captures);\n      this.isURL = 'url' == name;\n      var tok = new Token('function', new nodes.Ident(name));\n      tok.space = captures[2];\n      return tok;\n    }\n  },\n\n  /**\n   * -*[_a-zA-Z$] [-\\w\\d$]*\n   */\n  ident: function ident() {\n    var captures;\n\n    if (captures = /^-*([_a-zA-Z$]|@apply)[-\\w\\d$]*/.exec(this.str)) {\n      this.skip(captures);\n      return new Token('ident', new nodes.Ident(captures[0]));\n    }\n  },\n\n  /**\n   * '\\n' ' '+\n   */\n  newline: function newline() {\n    var captures, re; // we have established the indentation regexp\n\n    if (this.indentRe) {\n      captures = this.indentRe.exec(this.str); // figure out if we are using tabs or spaces\n    } else {\n      // try tabs\n      re = /^\\n([\\t]*)[ \\t]*/;\n      captures = re.exec(this.str); // nope, try spaces\n\n      if (captures && !captures[1].length) {\n        re = /^\\n([ \\t]*)/;\n        captures = re.exec(this.str);\n      } // established\n\n\n      if (captures && captures[1].length) this.indentRe = re;\n    }\n\n    if (captures) {\n      var tok,\n          indents = captures[1].length;\n      this.skip(captures);\n\n      if (this.str[0] === ' ' || this.str[0] === '\\t') {\n        throw new errors.SyntaxError('Invalid indentation. You can use tabs or spaces to indent, but not both.');\n      } // Blank line\n\n\n      if ('\\n' == this.str[0]) return this.advance(); // Outdent\n\n      if (this.indentStack.length && indents < this.indentStack[0]) {\n        while (this.indentStack.length && this.indentStack[0] > indents) {\n          this.stash.push(new Token('outdent'));\n          this.indentStack.shift();\n        }\n\n        tok = this.stash.pop(); // Indent\n      } else if (indents && indents != this.indentStack[0]) {\n        this.indentStack.unshift(indents);\n        tok = new Token('indent'); // Newline\n      } else {\n        tok = new Token('newline');\n      }\n\n      return tok;\n    }\n  },\n\n  /**\n   * '-'? (digit+ | digit* '.' digit+) unit\n   */\n  unit: function unit() {\n    var captures;\n\n    if (captures = /^(-)?(\\d+\\.\\d+|\\d+|\\.\\d+)(%|[a-zA-Z]+)?[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var n = parseFloat(captures[2]);\n      if ('-' == captures[1]) n = -n;\n      var node = new nodes.Unit(n, captures[3]);\n      node.raw = captures[0];\n      return new Token('unit', node);\n    }\n  },\n\n  /**\n   * '\"' [^\"]+ '\"' | \"'\"\" [^']+ \"'\"\n   */\n  string: function string() {\n    var captures;\n\n    if (captures = /^(\"[^\"]*\"|'[^']*')[ \\t]*/.exec(this.str)) {\n      var str = captures[1],\n          quote = captures[0][0];\n      this.skip(captures);\n      str = str.slice(1, -1).replace(/\\\\n/g, '\\n');\n      return new Token('string', new nodes.String(str, quote));\n    }\n  },\n\n  /**\n   * #rrggbbaa | #rrggbb | #rgba | #rgb | #nn | #n\n   */\n  color: function color() {\n    return this.rrggbbaa() || this.rrggbb() || this.rgba() || this.rgb() || this.nn() || this.n();\n  },\n\n  /**\n   * #n\n   */\n  n: function n() {\n    var captures;\n\n    if (captures = /^#([a-fA-F0-9]{1})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var n = parseInt(captures[1] + captures[1], 16),\n          color = new nodes.RGBA(n, n, n, 1);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n\n  /**\n   * #nn\n   */\n  nn: function nn() {\n    var captures;\n\n    if (captures = /^#([a-fA-F0-9]{2})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var n = parseInt(captures[1], 16),\n          color = new nodes.RGBA(n, n, n, 1);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n\n  /**\n   * #rgb\n   */\n  rgb: function rgb() {\n    var captures;\n\n    if (captures = /^#([a-fA-F0-9]{3})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var rgb = captures[1],\n          r = parseInt(rgb[0] + rgb[0], 16),\n          g = parseInt(rgb[1] + rgb[1], 16),\n          b = parseInt(rgb[2] + rgb[2], 16),\n          color = new nodes.RGBA(r, g, b, 1);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n\n  /**\n   * #rgba\n   */\n  rgba: function rgba() {\n    var captures;\n\n    if (captures = /^#([a-fA-F0-9]{4})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var rgb = captures[1],\n          r = parseInt(rgb[0] + rgb[0], 16),\n          g = parseInt(rgb[1] + rgb[1], 16),\n          b = parseInt(rgb[2] + rgb[2], 16),\n          a = parseInt(rgb[3] + rgb[3], 16),\n          color = new nodes.RGBA(r, g, b, a / 255);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n\n  /**\n   * #rrggbb\n   */\n  rrggbb: function rrggbb() {\n    var captures;\n\n    if (captures = /^#([a-fA-F0-9]{6})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var rgb = captures[1],\n          r = parseInt(rgb.substr(0, 2), 16),\n          g = parseInt(rgb.substr(2, 2), 16),\n          b = parseInt(rgb.substr(4, 2), 16),\n          color = new nodes.RGBA(r, g, b, 1);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n\n  /**\n   * #rrggbbaa\n   */\n  rrggbbaa: function rrggbbaa() {\n    var captures;\n\n    if (captures = /^#([a-fA-F0-9]{8})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var rgb = captures[1],\n          r = parseInt(rgb.substr(0, 2), 16),\n          g = parseInt(rgb.substr(2, 2), 16),\n          b = parseInt(rgb.substr(4, 2), 16),\n          a = parseInt(rgb.substr(6, 2), 16),\n          color = new nodes.RGBA(r, g, b, a / 255);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n\n  /**\n   * ^|[^\\n,;]+\n   */\n  selector: function selector() {\n    var captures;\n\n    if (captures = /^\\^|.*?(?=\\/\\/(?![^\\[]*\\])|[,\\n{])/.exec(this.str)) {\n      var selector = captures[0];\n      this.skip(captures);\n      return new Token('selector', selector);\n    }\n  }\n};","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/lexer.js"],"names":["Token","require","nodes","errors","exports","module","Lexer","alias","str","options","stash","indentStack","indentRe","lineno","column","comment","val","offset","s","inComment","lastIndexOf","commentIdx","i","double","single","test","replace","charAt","slice","prototype","inspect","tok","tmp","buf","next","type","push","concat","join","lookahead","n","fetch","length","advance","skip","len","chunk","substr","move","lines","match","idx","stashed","prev","isPartOfSelector","raw","line","eos","null","sep","keyword","urlchars","newline","escaped","important","literal","anonFunc","atrule","function","brace","paren","color","string","unit","namedop","boolean","unicode","ident","op","token","eol","call","space","selector","peek","shift","captures","isURL","exec","Literal","c","braces","css","node","Ident","anonymous","vendor","end","indexOf","split","suppress","inline","Comment","Boolean","name","re","indents","SyntaxError","pop","unshift","parseFloat","Unit","quote","String","rrggbbaa","rrggbb","rgba","rgb","nn","parseInt","RGBA","r","g","b","a"],"mappings":"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","sourcesContent":["\n/*!\n * Stylus - Lexer\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Token = require('./token')\n  , nodes = require('./nodes')\n  , errors = require('./errors');\n\n/**\n * Expose `Lexer`.\n */\n\nexports = module.exports = Lexer;\n\n/**\n * Operator aliases.\n */\n\nvar alias = {\n    'and': '&&'\n  , 'or': '||'\n  , 'is': '=='\n  , 'isnt': '!='\n  , 'is not': '!='\n  , ':=': '?='\n};\n\n/**\n * Initialize a new `Lexer` with the given `str` and `options`.\n *\n * @param {String} str\n * @param {Object} options\n * @api private\n */\n\nfunction Lexer(str, options) {\n  options = options || {};\n  this.stash = [];\n  this.indentStack = [];\n  this.indentRe = null;\n  this.lineno = 1;\n  this.column = 1;\n\n  // HACK!\n  function comment(str, val, offset, s) {\n    var inComment = s.lastIndexOf('/*', offset) > s.lastIndexOf('*/', offset)\n      , commentIdx = s.lastIndexOf('//', offset)\n      , i = s.lastIndexOf('\\n', offset)\n      , double = 0\n      , single = 0;\n\n    if (~commentIdx && commentIdx > i) {\n      while (i != offset) {\n        if (\"'\" == s[i]) single ? single-- : single++;\n        if ('\"' == s[i]) double ? double-- : double++;\n\n        if ('/' == s[i] && '/' == s[i + 1]) {\n          inComment = !single && !double;\n          break;\n        }\n        ++i;\n      }\n    }\n\n    return inComment\n      ? str\n      : ((val === ',' && /^[,\\t\\n]+$/.test(str)) ? str.replace(/\\n/, '\\r') : val + '\\r');\n  };\n\n  // Remove UTF-8 BOM.\n  if ('\\uFEFF' == str.charAt(0)) str = str.slice(1);\n\n  this.str = str\n    .replace(/\\s+$/, '\\n')\n    .replace(/\\r\\n?/g, '\\n')\n    .replace(/\\\\ *\\n/g, '\\r')\n    .replace(/([,(:](?!\\/\\/[^ ])) *(?:\\/\\/[^\\n]*|\\/\\*.*?\\*\\/)?\\n\\s*/g, comment)\n    .replace(/\\s*\\n[ \\t]*([,)])/g, comment);\n};\n\n/**\n * Lexer prototype.\n */\n\nLexer.prototype = {\n\n  /**\n   * Custom inspect.\n   */\n\n  inspect: function(){\n    var tok\n      , tmp = this.str\n      , buf = [];\n    while ('eos' != (tok = this.next()).type) {\n      buf.push(tok.inspect());\n    }\n    this.str = tmp;\n    return buf.concat(tok.inspect()).join('\\n');\n  },\n\n  /**\n   * Lookahead `n` tokens.\n   *\n   * @param {Number} n\n   * @return {Object}\n   * @api private\n   */\n\n  lookahead: function(n){\n    var fetch = n - this.stash.length;\n    while (fetch-- > 0) this.stash.push(this.advance());\n    return this.stash[--n];\n  },\n\n  /**\n   * Consume the given `len`.\n   *\n   * @param {Number|Array} len\n   * @api private\n   */\n\n  skip: function(len){\n    var chunk = len[0];\n    len = chunk ? chunk.length : len;\n    this.str = this.str.substr(len);\n    if (chunk) {\n      this.move(chunk);\n    } else {\n      this.column += len;\n    }\n  },\n\n  /**\n   * Move current line and column position.\n   *\n   * @param {String} str\n   * @api private\n   */\n\n  move: function(str){\n    var lines = str.match(/\\n/g)\n      , idx = str.lastIndexOf('\\n');\n\n    if (lines) this.lineno += lines.length;\n    this.column = ~idx\n      ? str.length - idx\n      : this.column + str.length;\n  },\n\n  /**\n   * Fetch next token including those stashed by peek.\n   *\n   * @return {Token}\n   * @api private\n   */\n\n  next: function() {\n    var tok = this.stashed() || this.advance();\n    this.prev = tok;\n    return tok;\n  },\n\n  /**\n   * Check if the current token is a part of selector.\n   *\n   * @return {Boolean}\n   * @api private\n   */\n\n  isPartOfSelector: function() {\n    var tok = this.stash[this.stash.length - 1] || this.prev;\n    switch (tok && tok.type) {\n      // #for\n      case 'color':\n        return 2 == tok.val.raw.length;\n      // .or\n      case '.':\n      // [is]\n      case '[':\n        return true;\n    }\n    return false;\n  },\n\n  /**\n   * Fetch next token.\n   *\n   * @return {Token}\n   * @api private\n   */\n\n  advance: function() {\n    var column = this.column\n      , line = this.lineno\n      , tok = this.eos()\n      || this.null()\n      || this.sep()\n      || this.keyword()\n      || this.urlchars()\n      || this.comment()\n      || this.newline()\n      || this.escaped()\n      || this.important()\n      || this.literal()\n      || this.anonFunc()\n      || this.atrule()\n      || this.function()\n      || this.brace()\n      || this.paren()\n      || this.color()\n      || this.string()\n      || this.unit()\n      || this.namedop()\n      || this.boolean()\n      || this.unicode()\n      || this.ident()\n      || this.op()\n      || (function () {\n        var token = this.eol();\n\n        if (token) {\n          column = token.column;\n          line = token.lineno;\n        }\n\n        return token;\n      }).call(this)\n      || this.space()\n      || this.selector();\n\n    tok.lineno = line;\n    tok.column = column;\n\n    return tok;\n  },\n\n  /**\n   * Lookahead a single token.\n   *\n   * @return {Token}\n   * @api private\n   */\n\n  peek: function() {\n    return this.lookahead(1);\n  },\n\n  /**\n   * Return the next possibly stashed token.\n   *\n   * @return {Token}\n   * @api private\n   */\n\n  stashed: function() {\n    return this.stash.shift();\n  },\n\n  /**\n   * EOS | trailing outdents.\n   */\n\n  eos: function() {\n    if (this.str.length) return;\n    if (this.indentStack.length) {\n      this.indentStack.shift();\n      return new Token('outdent');\n    } else {\n      return new Token('eos');\n    }\n  },\n\n  /**\n   * url char\n   */\n\n  urlchars: function() {\n    var captures;\n    if (!this.isURL) return;\n    if (captures = /^[\\/:@.;?&=*!,<>#%0-9]+/.exec(this.str)) {\n      this.skip(captures);\n      return new Token('literal', new nodes.Literal(captures[0]));\n    }\n  },\n\n  /**\n   * ';' [ \\t]*\n   */\n\n  sep: function() {\n    var captures;\n    if (captures = /^;[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      return new Token(';');\n    }\n  },\n\n  /**\n   * '\\r'\n   */\n\n  eol: function() {\n    if ('\\r' == this.str[0]) {\n      ++this.lineno;\n      this.skip(1);\n\n      this.column = 1;\n      while(this.space());\n\n      return this.advance();\n    }\n  },\n\n  /**\n   * ' '+\n   */\n\n  space: function() {\n    var captures;\n    if (captures = /^([ \\t]+)/.exec(this.str)) {\n      this.skip(captures);\n      return new Token('space');\n    }\n  },\n\n  /**\n   * '\\\\' . ' '*\n   */\n\n  escaped: function() {\n    var captures;\n    if (captures = /^\\\\(.)[ \\t]*/.exec(this.str)) {\n      var c = captures[1];\n      this.skip(captures);\n      return new Token('ident', new nodes.Literal(c));\n    }\n  },\n\n  /**\n   * '@css' ' '* '{' .* '}' ' '*\n   */\n\n  literal: function() {\n    // HACK attack !!!\n    var captures;\n    if (captures = /^@css[ \\t]*\\{/.exec(this.str)) {\n      this.skip(captures);\n      var c\n        , braces = 1\n        , css = ''\n        , node;\n      while (c = this.str[0]) {\n        this.str = this.str.substr(1);\n        switch (c) {\n          case '{': ++braces; break;\n          case '}': --braces; break;\n          case '\\n':\n          case '\\r':\n            ++this.lineno;\n            break;\n        }\n        css += c;\n        if (!braces) break;\n      }\n      css = css.replace(/\\s*}$/, '');\n      node = new nodes.Literal(css);\n      node.css = true;\n      return new Token('literal', node);\n    }\n  },\n\n  /**\n   * '!important' ' '*\n   */\n\n  important: function() {\n    var captures;\n    if (captures = /^!important[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      return new Token('ident', new nodes.Literal('!important'));\n    }\n  },\n\n  /**\n   * '{' | '}'\n   */\n\n  brace: function() {\n    var captures;\n    if (captures = /^([{}])/.exec(this.str)) {\n      this.skip(1);\n      var brace = captures[1];\n      return new Token(brace, brace);\n    }\n  },\n\n  /**\n   * '(' | ')' ' '*\n   */\n\n  paren: function() {\n    var captures;\n    if (captures = /^([()])([ \\t]*)/.exec(this.str)) {\n      var paren = captures[1];\n      this.skip(captures);\n      if (')' == paren) this.isURL = false;\n      var tok = new Token(paren, paren);\n      tok.space = captures[2];\n      return tok;\n    }\n  },\n\n  /**\n   * 'null'\n   */\n\n  null: function() {\n    var captures\n      , tok;\n    if (captures = /^(null)\\b[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      if (this.isPartOfSelector()) {\n        tok = new Token('ident', new nodes.Ident(captures[0]));\n      } else {\n        tok = new Token('null', nodes.null);\n      }\n      return tok;\n    }\n  },\n\n  /**\n   *   'if'\n   * | 'else'\n   * | 'unless'\n   * | 'return'\n   * | 'for'\n   * | 'in'\n   */\n\n  keyword: function() {\n    var captures\n      , tok;\n    if (captures = /^(return|if|else|unless|for|in)\\b[ \\t]*/.exec(this.str)) {\n      var keyword = captures[1];\n      this.skip(captures);\n      if (this.isPartOfSelector()) {\n        tok = new Token('ident', new nodes.Ident(captures[0]));\n      } else {\n        tok = new Token(keyword, keyword);\n      }\n      return tok;\n    }\n  },\n\n  /**\n   *   'not'\n   * | 'and'\n   * | 'or'\n   * | 'is'\n   * | 'is not'\n   * | 'isnt'\n   * | 'is a'\n   * | 'is defined'\n   */\n\n  namedop: function() {\n    var captures\n      , tok;\n    if (captures = /^(not|and|or|is a|is defined|isnt|is not|is)(?!-)\\b([ \\t]*)/.exec(this.str)) {\n      var op = captures[1];\n      this.skip(captures);\n      if (this.isPartOfSelector()) {\n        tok = new Token('ident', new nodes.Ident(captures[0]));\n      } else {\n        op = alias[op] || op;\n        tok = new Token(op, op);\n      }\n      tok.space = captures[2];\n      return tok;\n    }\n  },\n\n  /**\n   *   ','\n   * | '+'\n   * | '+='\n   * | '-'\n   * | '-='\n   * | '*'\n   * | '*='\n   * | '/'\n   * | '/='\n   * | '%'\n   * | '%='\n   * | '**'\n   * | '!'\n   * | '&'\n   * | '&&'\n   * | '||'\n   * | '>'\n   * | '>='\n   * | '<'\n   * | '<='\n   * | '='\n   * | '=='\n   * | '!='\n   * | '!'\n   * | '~'\n   * | '?='\n   * | ':='\n   * | '?'\n   * | ':'\n   * | '['\n   * | ']'\n   * | '.'\n   * | '..'\n   * | '...'\n   */\n\n  op: function() {\n    var captures;\n    if (captures = /^([.]{1,3}|&&|\\|\\||[!<>=?:]=|\\*\\*|[-+*\\/%]=?|[,=?:!~<>&\\[\\]])([ \\t]*)/.exec(this.str)) {\n      var op = captures[1];\n      this.skip(captures);\n      op = alias[op] || op;\n      var tok = new Token(op, op);\n      tok.space = captures[2];\n      this.isURL = false;\n      return tok;\n    }\n  },\n\n  /**\n   * '@('\n   */\n\n  anonFunc: function() {\n    var tok;\n    if ('@' == this.str[0] && '(' == this.str[1]) {\n      this.skip(2);\n      tok = new Token('function', new nodes.Ident('anonymous'));\n      tok.anonymous = true;\n      return tok;\n    }\n  },\n\n  /**\n   * '@' (-(\\w+)-)?[a-zA-Z0-9-_]+\n   */\n\n  atrule: function() {\n    var captures;\n    if (captures = /^@(?!apply)(?:-(\\w+)-)?([a-zA-Z0-9-_]+)[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var vendor = captures[1]\n        , type = captures[2]\n        , tok;\n      switch (type) {\n        case 'require':\n        case 'import':\n        case 'charset':\n        case 'namespace':\n        case 'media':\n        case 'scope':\n        case 'supports':\n          return new Token(type);\n        case 'document':\n          return new Token('-moz-document');\n        case 'block':\n          return new Token('atblock');\n        case 'extend':\n        case 'extends':\n          return new Token('extend');\n        case 'keyframes':\n          return new Token(type, vendor);\n        default:\n          return new Token('atrule', (vendor ? '-' + vendor + '-' + type : type));\n      }\n    }\n  },\n\n  /**\n   * '//' *\n   */\n\n  comment: function() {\n    // Single line\n    if ('/' == this.str[0] && '/' == this.str[1]) {\n      var end = this.str.indexOf('\\n');\n      if (-1 == end) end = this.str.length;\n      this.skip(end);\n      return this.advance();\n    }\n\n    // Multi-line\n    if ('/' == this.str[0] && '*' == this.str[1]) {\n      var end = this.str.indexOf('*/');\n      if (-1 == end) end = this.str.length;\n      var str = this.str.substr(0, end + 2)\n        , lines = str.split(/\\n|\\r/).length - 1\n        , suppress = true\n        , inline = false;\n      this.lineno += lines;\n      this.skip(end + 2);\n      // output\n      if ('!' == str[2]) {\n        str = str.replace('*!', '*');\n        suppress = false;\n      }\n      if (this.prev && ';' == this.prev.type) inline = true;\n      return new Token('comment', new nodes.Comment(str, suppress, inline));\n    }\n  },\n\n  /**\n   * 'true' | 'false'\n   */\n\n  boolean: function() {\n    var captures;\n    if (captures = /^(true|false)\\b([ \\t]*)/.exec(this.str)) {\n      var val = nodes.Boolean('true' == captures[1]);\n      this.skip(captures);\n      var tok = new Token('boolean', val);\n      tok.space = captures[2];\n      return tok;\n    }\n  },\n\n  /**\n   * 'U+' [0-9A-Fa-f?]{1,6}(?:-[0-9A-Fa-f]{1,6})?\n   */\n\n  unicode: function() {\n    var captures;\n    if (captures = /^u\\+[0-9a-f?]{1,6}(?:-[0-9a-f]{1,6})?/i.exec(this.str)) {\n      this.skip(captures);\n      return new Token('literal', new nodes.Literal(captures[0]));\n    }\n  },\n\n  /**\n   * -*[_a-zA-Z$] [-\\w\\d$]* '('\n   */\n\n  function: function() {\n    var captures;\n    if (captures = /^(-*[_a-zA-Z$][-\\w\\d$]*)\\(([ \\t]*)/.exec(this.str)) {\n      var name = captures[1];\n      this.skip(captures);\n      this.isURL = 'url' == name;\n      var tok = new Token('function', new nodes.Ident(name));\n      tok.space = captures[2];\n      return tok;\n    }\n  },\n\n  /**\n   * -*[_a-zA-Z$] [-\\w\\d$]*\n   */\n\n  ident: function() {\n    var captures;\n    if (captures = /^-*([_a-zA-Z$]|@apply)[-\\w\\d$]*/.exec(this.str)) {\n      this.skip(captures);\n      return new Token('ident', new nodes.Ident(captures[0]));\n    }\n  },\n\n  /**\n   * '\\n' ' '+\n   */\n\n  newline: function() {\n    var captures, re;\n\n    // we have established the indentation regexp\n    if (this.indentRe){\n      captures = this.indentRe.exec(this.str);\n    // figure out if we are using tabs or spaces\n    } else {\n      // try tabs\n      re = /^\\n([\\t]*)[ \\t]*/;\n      captures = re.exec(this.str);\n\n      // nope, try spaces\n      if (captures && !captures[1].length) {\n        re = /^\\n([ \\t]*)/;\n        captures = re.exec(this.str);\n      }\n\n      // established\n      if (captures && captures[1].length) this.indentRe = re;\n    }\n\n\n    if (captures) {\n      var tok\n        , indents = captures[1].length;\n\n      this.skip(captures);\n      if (this.str[0] === ' ' || this.str[0] === '\\t') {\n        throw new errors.SyntaxError('Invalid indentation. You can use tabs or spaces to indent, but not both.');\n      }\n\n      // Blank line\n      if ('\\n' == this.str[0]) return this.advance();\n\n      // Outdent\n      if (this.indentStack.length && indents < this.indentStack[0]) {\n        while (this.indentStack.length && this.indentStack[0] > indents) {\n          this.stash.push(new Token('outdent'));\n          this.indentStack.shift();\n        }\n        tok = this.stash.pop();\n      // Indent\n      } else if (indents && indents != this.indentStack[0]) {\n        this.indentStack.unshift(indents);\n        tok = new Token('indent');\n      // Newline\n      } else {\n        tok = new Token('newline');\n      }\n\n      return tok;\n    }\n  },\n\n  /**\n   * '-'? (digit+ | digit* '.' digit+) unit\n   */\n\n  unit: function() {\n    var captures;\n    if (captures = /^(-)?(\\d+\\.\\d+|\\d+|\\.\\d+)(%|[a-zA-Z]+)?[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var n = parseFloat(captures[2]);\n      if ('-' == captures[1]) n = -n;\n      var node = new nodes.Unit(n, captures[3]);\n      node.raw = captures[0];\n      return new Token('unit', node);\n    }\n  },\n\n  /**\n   * '\"' [^\"]+ '\"' | \"'\"\" [^']+ \"'\"\n   */\n\n  string: function() {\n    var captures;\n    if (captures = /^(\"[^\"]*\"|'[^']*')[ \\t]*/.exec(this.str)) {\n      var str = captures[1]\n        , quote = captures[0][0];\n      this.skip(captures);\n      str = str.slice(1,-1).replace(/\\\\n/g, '\\n');\n      return new Token('string', new nodes.String(str, quote));\n    }\n  },\n\n  /**\n   * #rrggbbaa | #rrggbb | #rgba | #rgb | #nn | #n\n   */\n\n  color: function() {\n    return this.rrggbbaa()\n      || this.rrggbb()\n      || this.rgba()\n      || this.rgb()\n      || this.nn()\n      || this.n()\n  },\n\n  /**\n   * #n\n   */\n\n  n: function() {\n    var captures;\n    if (captures = /^#([a-fA-F0-9]{1})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var n = parseInt(captures[1] + captures[1], 16)\n        , color = new nodes.RGBA(n, n, n, 1);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n\n  /**\n   * #nn\n   */\n\n  nn: function() {\n    var captures;\n    if (captures = /^#([a-fA-F0-9]{2})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var n = parseInt(captures[1], 16)\n        , color = new nodes.RGBA(n, n, n, 1);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n\n  /**\n   * #rgb\n   */\n\n  rgb: function() {\n    var captures;\n    if (captures = /^#([a-fA-F0-9]{3})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var rgb = captures[1]\n        , r = parseInt(rgb[0] + rgb[0], 16)\n        , g = parseInt(rgb[1] + rgb[1], 16)\n        , b = parseInt(rgb[2] + rgb[2], 16)\n        , color = new nodes.RGBA(r, g, b, 1);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n\n  /**\n   * #rgba\n   */\n\n  rgba: function() {\n    var captures;\n    if (captures = /^#([a-fA-F0-9]{4})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var rgb = captures[1]\n        , r = parseInt(rgb[0] + rgb[0], 16)\n        , g = parseInt(rgb[1] + rgb[1], 16)\n        , b = parseInt(rgb[2] + rgb[2], 16)\n        , a = parseInt(rgb[3] + rgb[3], 16)\n        , color = new nodes.RGBA(r, g, b, a/255);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n\n  /**\n   * #rrggbb\n   */\n\n  rrggbb: function() {\n    var captures;\n    if (captures = /^#([a-fA-F0-9]{6})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var rgb = captures[1]\n        , r = parseInt(rgb.substr(0, 2), 16)\n        , g = parseInt(rgb.substr(2, 2), 16)\n        , b = parseInt(rgb.substr(4, 2), 16)\n        , color = new nodes.RGBA(r, g, b, 1);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n\n  /**\n   * #rrggbbaa\n   */\n\n  rrggbbaa: function() {\n    var captures;\n    if (captures = /^#([a-fA-F0-9]{8})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var rgb = captures[1]\n        , r = parseInt(rgb.substr(0, 2), 16)\n        , g = parseInt(rgb.substr(2, 2), 16)\n        , b = parseInt(rgb.substr(4, 2), 16)\n        , a = parseInt(rgb.substr(6, 2), 16)\n        , color = new nodes.RGBA(r, g, b, a/255);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n\n  /**\n   * ^|[^\\n,;]+\n   */\n\n  selector: function() {\n    var captures;\n    if (captures = /^\\^|.*?(?=\\/\\/(?![^\\[]*\\])|[,\\n{])/.exec(this.str)) {\n      var selector = captures[0];\n      this.skip(captures);\n      return new Token('selector', selector);\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}