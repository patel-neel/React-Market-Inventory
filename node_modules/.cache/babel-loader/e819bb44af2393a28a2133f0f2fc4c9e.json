{"ast":null,"code":"/*!\n * Stylus - Expression\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nvar Node = require('./node'),\n    nodes = require('../nodes'),\n    utils = require('../utils');\n/**\n * Initialize a new `Expression`.\n *\n * @param {Boolean} isList\n * @api public\n */\n\n\nvar Expression = module.exports = function Expression(isList) {\n  Node.call(this);\n  this.nodes = [];\n  this.isList = isList;\n};\n/**\n * Check if the variable has a value.\n *\n * @return {Boolean}\n * @api public\n */\n\n\nExpression.prototype.__defineGetter__('isEmpty', function () {\n  return !this.nodes.length;\n});\n/**\n * Return the first node in this expression.\n *\n * @return {Node}\n * @api public\n */\n\n\nExpression.prototype.__defineGetter__('first', function () {\n  return this.nodes[0] ? this.nodes[0].first : nodes.null;\n});\n/**\n * Hash all the nodes in order.\n *\n * @return {String}\n * @api public\n */\n\n\nExpression.prototype.__defineGetter__('hash', function () {\n  return this.nodes.map(function (node) {\n    return node.hash;\n  }).join('::');\n});\n/**\n * Inherit from `Node.prototype`.\n */\n\n\nExpression.prototype.__proto__ = Node.prototype;\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nExpression.prototype.clone = function (parent) {\n  var clone = new this.constructor(this.isList);\n  clone.preserve = this.preserve;\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  clone.nodes = this.nodes.map(function (node) {\n    return node.clone(parent, clone);\n  });\n  return clone;\n};\n/**\n * Push the given `node`.\n *\n * @param {Node} node\n * @api public\n */\n\n\nExpression.prototype.push = function (node) {\n  this.nodes.push(node);\n};\n/**\n * Operate on `right` with the given `op`.\n *\n * @param {String} op\n * @param {Node} right\n * @return {Node}\n * @api public\n */\n\n\nExpression.prototype.operate = function (op, right, val) {\n  switch (op) {\n    case '[]=':\n      var self = this,\n          range = utils.unwrap(right).nodes,\n          val = utils.unwrap(val),\n          len,\n          node;\n      range.forEach(function (unit) {\n        len = self.nodes.length;\n\n        if ('unit' == unit.nodeName) {\n          var i = unit.val < 0 ? len + unit.val : unit.val,\n              n = i;\n\n          while (i-- > len) {\n            self.nodes[i] = nodes.null;\n          }\n\n          self.nodes[n] = val;\n        } else if (unit.string) {\n          node = self.nodes[0];\n          if (node && 'object' == node.nodeName) node.set(unit.string, val.clone());\n        }\n      });\n      return val;\n\n    case '[]':\n      var expr = new nodes.Expression(),\n          vals = utils.unwrap(this).nodes,\n          range = utils.unwrap(right).nodes,\n          node;\n      range.forEach(function (unit) {\n        if ('unit' == unit.nodeName) {\n          node = vals[unit.val < 0 ? vals.length + unit.val : unit.val];\n        } else if ('object' == vals[0].nodeName) {\n          node = vals[0].get(unit.string);\n        }\n\n        if (node) expr.push(node);\n      });\n      return expr.isEmpty ? nodes.null : utils.unwrap(expr);\n\n    case '||':\n      return this.toBoolean().isTrue ? this : right;\n\n    case 'in':\n      return Node.prototype.operate.call(this, op, right);\n\n    case '!=':\n      return this.operate('==', right, val).negate();\n\n    case '==':\n      var len = this.nodes.length,\n          right = right.toExpression(),\n          a,\n          b;\n      if (len != right.nodes.length) return nodes.false;\n\n      for (var i = 0; i < len; ++i) {\n        a = this.nodes[i];\n        b = right.nodes[i];\n        if (a.operate(op, b).isTrue) continue;\n        return nodes.false;\n      }\n\n      return nodes.true;\n      break;\n\n    default:\n      return this.first.operate(op, right, val);\n  }\n};\n/**\n * Expressions with length > 1 are truthy,\n * otherwise the first value's toBoolean()\n * method is invoked.\n *\n * @return {Boolean}\n * @api public\n */\n\n\nExpression.prototype.toBoolean = function () {\n  if (this.nodes.length > 1) return nodes.true;\n  return this.first.toBoolean();\n};\n/**\n * Return \"<a> <b> <c>\" or \"<a>, <b>, <c>\" if\n * the expression represents a list.\n *\n * @return {String}\n * @api public\n */\n\n\nExpression.prototype.toString = function () {\n  return '(' + this.nodes.map(function (node) {\n    return node.toString();\n  }).join(this.isList ? ', ' : ' ') + ')';\n};\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\n\nExpression.prototype.toJSON = function () {\n  return {\n    __type: 'Expression',\n    isList: this.isList,\n    preserve: this.preserve,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename,\n    nodes: this.nodes\n  };\n};","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/nodes/expression.js"],"names":["Node","require","nodes","utils","Expression","module","exports","isList","call","prototype","__defineGetter__","length","first","null","map","node","hash","join","__proto__","clone","parent","constructor","preserve","lineno","column","filename","push","operate","op","right","val","self","range","unwrap","len","forEach","unit","nodeName","i","n","string","set","expr","vals","get","isEmpty","toBoolean","isTrue","negate","toExpression","a","b","false","true","toString","toJSON","__type"],"mappings":"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","sourcesContent":["\n/*!\n * Stylus - Expression\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node')\n  , nodes = require('../nodes')\n  , utils = require('../utils');\n\n/**\n * Initialize a new `Expression`.\n *\n * @param {Boolean} isList\n * @api public\n */\n\nvar Expression = module.exports = function Expression(isList){\n  Node.call(this);\n  this.nodes = [];\n  this.isList = isList;\n};\n\n/**\n * Check if the variable has a value.\n *\n * @return {Boolean}\n * @api public\n */\n\nExpression.prototype.__defineGetter__('isEmpty', function(){\n  return !this.nodes.length;\n});\n\n/**\n * Return the first node in this expression.\n *\n * @return {Node}\n * @api public\n */\n\nExpression.prototype.__defineGetter__('first', function(){\n  return this.nodes[0]\n    ? this.nodes[0].first\n    : nodes.null;\n});\n\n/**\n * Hash all the nodes in order.\n *\n * @return {String}\n * @api public\n */\n\nExpression.prototype.__defineGetter__('hash', function(){\n  return this.nodes.map(function(node){\n    return node.hash;\n  }).join('::');\n});\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nExpression.prototype.__proto__ = Node.prototype;\n\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nExpression.prototype.clone = function(parent){\n  var clone = new this.constructor(this.isList);\n  clone.preserve = this.preserve;\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  clone.nodes = this.nodes.map(function(node) {\n    return node.clone(parent, clone);\n  });\n  return clone;\n};\n\n/**\n * Push the given `node`.\n *\n * @param {Node} node\n * @api public\n */\n\nExpression.prototype.push = function(node){\n  this.nodes.push(node);\n};\n\n/**\n * Operate on `right` with the given `op`.\n *\n * @param {String} op\n * @param {Node} right\n * @return {Node}\n * @api public\n */\n\nExpression.prototype.operate = function(op, right, val){\n  switch (op) {\n    case '[]=':\n      var self = this\n        , range = utils.unwrap(right).nodes\n        , val = utils.unwrap(val)\n        , len\n        , node;\n      range.forEach(function(unit){\n        len = self.nodes.length;\n        if ('unit' == unit.nodeName) {\n          var i = unit.val < 0 ? len + unit.val : unit.val\n            , n = i;\n          while (i-- > len) self.nodes[i] = nodes.null;\n          self.nodes[n] = val;\n        } else if (unit.string) {\n          node = self.nodes[0];\n          if (node && 'object' == node.nodeName) node.set(unit.string, val.clone());\n        }\n      });\n      return val;\n    case '[]':\n      var expr = new nodes.Expression\n        , vals = utils.unwrap(this).nodes\n        , range = utils.unwrap(right).nodes\n        , node;\n      range.forEach(function(unit){\n        if ('unit' == unit.nodeName) {\n          node = vals[unit.val < 0 ? vals.length + unit.val : unit.val];\n        } else if ('object' == vals[0].nodeName) {\n          node = vals[0].get(unit.string);\n        }\n        if (node) expr.push(node);\n      });\n      return expr.isEmpty\n        ? nodes.null\n        : utils.unwrap(expr);\n    case '||':\n      return this.toBoolean().isTrue\n        ? this\n        : right;\n    case 'in':\n      return Node.prototype.operate.call(this, op, right);\n    case '!=':\n      return this.operate('==', right, val).negate();\n    case '==':\n      var len = this.nodes.length\n        , right = right.toExpression()\n        , a\n        , b;\n      if (len != right.nodes.length) return nodes.false;\n      for (var i = 0; i < len; ++i) {\n        a = this.nodes[i];\n        b = right.nodes[i];\n        if (a.operate(op, b).isTrue) continue;\n        return nodes.false;\n      }\n      return nodes.true;\n      break;\n    default:\n      return this.first.operate(op, right, val);\n  }\n};\n\n/**\n * Expressions with length > 1 are truthy,\n * otherwise the first value's toBoolean()\n * method is invoked.\n *\n * @return {Boolean}\n * @api public\n */\n\nExpression.prototype.toBoolean = function(){\n  if (this.nodes.length > 1) return nodes.true;\n  return this.first.toBoolean();\n};\n\n/**\n * Return \"<a> <b> <c>\" or \"<a>, <b>, <c>\" if\n * the expression represents a list.\n *\n * @return {String}\n * @api public\n */\n\nExpression.prototype.toString = function(){\n  return '(' + this.nodes.map(function(node){\n    return node.toString();\n  }).join(this.isList ? ', ' : ' ') + ')';\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nExpression.prototype.toJSON = function(){\n  return {\n    __type: 'Expression',\n    isList: this.isList,\n    preserve: this.preserve,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename,\n    nodes: this.nodes\n  };\n};\n"]},"metadata":{},"sourceType":"script"}