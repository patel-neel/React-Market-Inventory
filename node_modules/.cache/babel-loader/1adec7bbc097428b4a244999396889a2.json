{"ast":null,"code":"var utils = require('../utils'),\n    nodes = require('../nodes');\n/**\n * Color component name map.\n */\n\n\nvar componentMap = {\n  red: 'r',\n  green: 'g',\n  blue: 'b',\n  alpha: 'a',\n  hue: 'h',\n  saturation: 's',\n  lightness: 'l'\n};\n/**\n * Color component unit type map.\n */\n\nvar unitMap = {\n  hue: 'deg',\n  saturation: '%',\n  lightness: '%'\n};\n/**\n * Color type map.\n */\n\nvar typeMap = {\n  red: 'rgba',\n  blue: 'rgba',\n  green: 'rgba',\n  alpha: 'rgba',\n  hue: 'hsla',\n  saturation: 'hsla',\n  lightness: 'hsla'\n};\n/**\n * Return component `name` for the given `color`.\n *\n * @param {RGBA|HSLA} color\n * @param {String} name\n * @return {Unit}\n * @api public\n */\n\nfunction component(color, name) {\n  utils.assertColor(color, 'color');\n  utils.assertString(name, 'name');\n  var name = name.string,\n      unit = unitMap[name],\n      type = typeMap[name],\n      name = componentMap[name];\n  if (!name) throw new Error('invalid color component \"' + name + '\"');\n  return new nodes.Unit(color[type][name], unit);\n}\n\n;\ncomponent.params = ['color', 'name'];\nmodule.exports = component;","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/functions/component.js"],"names":["utils","require","nodes","componentMap","red","green","blue","alpha","hue","saturation","lightness","unitMap","typeMap","component","color","name","assertColor","assertString","string","unit","type","Error","Unit","params","module","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAAnB;AAAA,IACIC,KAAK,GAAGD,OAAO,CAAC,UAAD,CADnB;AAGA;AACA;AACA;;;AAEA,IAAIE,YAAY,GAAG;AACfC,EAAAA,GAAG,EAAE,GADU;AAEfC,EAAAA,KAAK,EAAE,GAFQ;AAGfC,EAAAA,IAAI,EAAE,GAHS;AAIfC,EAAAA,KAAK,EAAE,GAJQ;AAKfC,EAAAA,GAAG,EAAE,GALU;AAMfC,EAAAA,UAAU,EAAE,GANG;AAOfC,EAAAA,SAAS,EAAE;AAPI,CAAnB;AAUA;AACA;AACA;;AAEA,IAAIC,OAAO,GAAG;AACVH,EAAAA,GAAG,EAAE,KADK;AAEVC,EAAAA,UAAU,EAAE,GAFF;AAGVC,EAAAA,SAAS,EAAE;AAHD,CAAd;AAMA;AACA;AACA;;AAEA,IAAIE,OAAO,GAAG;AACVR,EAAAA,GAAG,EAAE,MADK;AAEVE,EAAAA,IAAI,EAAE,MAFI;AAGVD,EAAAA,KAAK,EAAE,MAHG;AAIVE,EAAAA,KAAK,EAAE,MAJG;AAKVC,EAAAA,GAAG,EAAE,MALK;AAMVC,EAAAA,UAAU,EAAE,MANF;AAOVC,EAAAA,SAAS,EAAE;AAPD,CAAd;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASG,SAAT,CAAmBC,KAAnB,EAA0BC,IAA1B,EAAgC;AAC9Bf,EAAAA,KAAK,CAACgB,WAAN,CAAkBF,KAAlB,EAAyB,OAAzB;AACAd,EAAAA,KAAK,CAACiB,YAAN,CAAmBF,IAAnB,EAAyB,MAAzB;AACA,MAAIA,IAAI,GAAGA,IAAI,CAACG,MAAhB;AAAA,MACIC,IAAI,GAAGR,OAAO,CAACI,IAAD,CADlB;AAAA,MAEIK,IAAI,GAAGR,OAAO,CAACG,IAAD,CAFlB;AAAA,MAGIA,IAAI,GAAGZ,YAAY,CAACY,IAAD,CAHvB;AAIA,MAAI,CAACA,IAAL,EAAW,MAAM,IAAIM,KAAJ,CAAU,8BAA8BN,IAA9B,GAAqC,GAA/C,CAAN;AACX,SAAO,IAAIb,KAAK,CAACoB,IAAV,CAAeR,KAAK,CAACM,IAAD,CAAL,CAAYL,IAAZ,CAAf,EAAkCI,IAAlC,CAAP;AACD;;AAAA;AACDN,SAAS,CAACU,MAAV,GAAmB,CAAC,OAAD,EAAU,MAAV,CAAnB;AACAC,MAAM,CAACC,OAAP,GAAiBZ,SAAjB","sourcesContent":["var utils = require('../utils')\n  , nodes = require('../nodes');\n\n/**\n * Color component name map.\n */\n\nvar componentMap = {\n    red: 'r'\n  , green: 'g'\n  , blue: 'b'\n  , alpha: 'a'\n  , hue: 'h'\n  , saturation: 's'\n  , lightness: 'l'\n};\n\n/**\n * Color component unit type map.\n */\n\nvar unitMap = {\n    hue: 'deg'\n  , saturation: '%'\n  , lightness: '%'\n};\n\n/**\n * Color type map.\n */\n\nvar typeMap = {\n    red: 'rgba'\n  , blue: 'rgba'\n  , green: 'rgba'\n  , alpha: 'rgba'\n  , hue: 'hsla'\n  , saturation: 'hsla'\n  , lightness: 'hsla'\n};\n\n/**\n * Return component `name` for the given `color`.\n *\n * @param {RGBA|HSLA} color\n * @param {String} name\n * @return {Unit}\n * @api public\n */\n\nfunction component(color, name) {\n  utils.assertColor(color, 'color');\n  utils.assertString(name, 'name');\n  var name = name.string\n    , unit = unitMap[name]\n    , type = typeMap[name]\n    , name = componentMap[name];\n  if (!name) throw new Error('invalid color component \"' + name + '\"');\n  return new nodes.Unit(color[type][name], unit);\n};\ncomponent.params = ['color', 'name'];\nmodule.exports = component;\n"]},"metadata":{},"sourceType":"script"}