{"ast":null,"code":"/*!\n * Stylus - Property\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nvar Node = require('./node');\n/**\n * Initialize a new `Property` with the given `segs` and optional `expr`.\n *\n * @param {Array} segs\n * @param {Expression} expr\n * @api public\n */\n\n\nvar Property = module.exports = function Property(segs, expr) {\n  Node.call(this);\n  this.segments = segs;\n  this.expr = expr;\n};\n/**\n * Inherit from `Node.prototype`.\n */\n\n\nProperty.prototype.__proto__ = Node.prototype;\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nProperty.prototype.clone = function (parent) {\n  var clone = new Property(this.segments);\n  clone.name = this.name;\n  if (this.literal) clone.literal = this.literal;\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  clone.segments = this.segments.map(function (node) {\n    return node.clone(parent, clone);\n  });\n  if (this.expr) clone.expr = this.expr.clone(parent, clone);\n  return clone;\n};\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\n\nProperty.prototype.toJSON = function () {\n  var json = {\n    __type: 'Property',\n    segments: this.segments,\n    name: this.name,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n  if (this.expr) json.expr = this.expr;\n  if (this.literal) json.literal = this.literal;\n  return json;\n};\n/**\n * Return string representation of this node.\n *\n * @return {String}\n * @api public\n */\n\n\nProperty.prototype.toString = function () {\n  return 'property(' + this.segments.join('') + ', ' + this.expr + ')';\n};\n/**\n * Operate on the property expression.\n *\n * @param {String} op\n * @param {Node} right\n * @return {Node}\n * @api public\n */\n\n\nProperty.prototype.operate = function (op, right, val) {\n  return this.expr.operate(op, right, val);\n};","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/nodes/property.js"],"names":["Node","require","Property","module","exports","segs","expr","call","segments","prototype","__proto__","clone","parent","name","literal","lineno","column","filename","map","node","toJSON","json","__type","toString","join","operate","op","right","val"],"mappings":"AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIC,QAAQ,GAAGC,MAAM,CAACC,OAAP,GAAiB,SAASF,QAAT,CAAkBG,IAAlB,EAAwBC,IAAxB,EAA6B;AAC3DN,EAAAA,IAAI,CAACO,IAAL,CAAU,IAAV;AACA,OAAKC,QAAL,GAAgBH,IAAhB;AACA,OAAKC,IAAL,GAAYA,IAAZ;AACD,CAJD;AAMA;AACA;AACA;;;AAEAJ,QAAQ,CAACO,SAAT,CAAmBC,SAAnB,GAA+BV,IAAI,CAACS,SAApC;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAP,QAAQ,CAACO,SAAT,CAAmBE,KAAnB,GAA2B,UAASC,MAAT,EAAgB;AACzC,MAAID,KAAK,GAAG,IAAIT,QAAJ,CAAa,KAAKM,QAAlB,CAAZ;AACAG,EAAAA,KAAK,CAACE,IAAN,GAAa,KAAKA,IAAlB;AACA,MAAI,KAAKC,OAAT,EAAkBH,KAAK,CAACG,OAAN,GAAgB,KAAKA,OAArB;AAClBH,EAAAA,KAAK,CAACI,MAAN,GAAe,KAAKA,MAApB;AACAJ,EAAAA,KAAK,CAACK,MAAN,GAAe,KAAKA,MAApB;AACAL,EAAAA,KAAK,CAACM,QAAN,GAAiB,KAAKA,QAAtB;AACAN,EAAAA,KAAK,CAACH,QAAN,GAAiB,KAAKA,QAAL,CAAcU,GAAd,CAAkB,UAASC,IAAT,EAAc;AAAE,WAAOA,IAAI,CAACR,KAAL,CAAWC,MAAX,EAAmBD,KAAnB,CAAP;AAAmC,GAArE,CAAjB;AACA,MAAI,KAAKL,IAAT,EAAeK,KAAK,CAACL,IAAN,GAAa,KAAKA,IAAL,CAAUK,KAAV,CAAgBC,MAAhB,EAAwBD,KAAxB,CAAb;AACf,SAAOA,KAAP;AACD,CAVD;AAYA;AACA;AACA;AACA;AACA;AACA;;;AAEAT,QAAQ,CAACO,SAAT,CAAmBW,MAAnB,GAA4B,YAAU;AACpC,MAAIC,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,UADC;AAETd,IAAAA,QAAQ,EAAE,KAAKA,QAFN;AAGTK,IAAAA,IAAI,EAAE,KAAKA,IAHF;AAITE,IAAAA,MAAM,EAAE,KAAKA,MAJJ;AAKTC,IAAAA,MAAM,EAAE,KAAKA,MALJ;AAMTC,IAAAA,QAAQ,EAAE,KAAKA;AANN,GAAX;AAQA,MAAI,KAAKX,IAAT,EAAee,IAAI,CAACf,IAAL,GAAY,KAAKA,IAAjB;AACf,MAAI,KAAKQ,OAAT,EAAkBO,IAAI,CAACP,OAAL,GAAe,KAAKA,OAApB;AAClB,SAAOO,IAAP;AACD,CAZD;AAcA;AACA;AACA;AACA;AACA;AACA;;;AAEAnB,QAAQ,CAACO,SAAT,CAAmBc,QAAnB,GAA8B,YAAU;AACtC,SAAO,cAAc,KAAKf,QAAL,CAAcgB,IAAd,CAAmB,EAAnB,CAAd,GAAuC,IAAvC,GAA8C,KAAKlB,IAAnD,GAA0D,GAAjE;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAJ,QAAQ,CAACO,SAAT,CAAmBgB,OAAnB,GAA6B,UAASC,EAAT,EAAaC,KAAb,EAAoBC,GAApB,EAAwB;AACnD,SAAO,KAAKtB,IAAL,CAAUmB,OAAV,CAAkBC,EAAlB,EAAsBC,KAAtB,EAA6BC,GAA7B,CAAP;AACD,CAFD","sourcesContent":["\n/*!\n * Stylus - Property\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node');\n\n/**\n * Initialize a new `Property` with the given `segs` and optional `expr`.\n *\n * @param {Array} segs\n * @param {Expression} expr\n * @api public\n */\n\nvar Property = module.exports = function Property(segs, expr){\n  Node.call(this);\n  this.segments = segs;\n  this.expr = expr;\n};\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nProperty.prototype.__proto__ = Node.prototype;\n\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nProperty.prototype.clone = function(parent){\n  var clone = new Property(this.segments);\n  clone.name = this.name;\n  if (this.literal) clone.literal = this.literal;\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  clone.segments = this.segments.map(function(node){ return node.clone(parent, clone); });\n  if (this.expr) clone.expr = this.expr.clone(parent, clone);\n  return clone;\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nProperty.prototype.toJSON = function(){\n  var json = {\n    __type: 'Property',\n    segments: this.segments,\n    name: this.name,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n  if (this.expr) json.expr = this.expr;\n  if (this.literal) json.literal = this.literal;\n  return json;\n};\n\n/**\n * Return string representation of this node.\n *\n * @return {String}\n * @api public\n */\n\nProperty.prototype.toString = function(){\n  return 'property(' + this.segments.join('') + ', ' + this.expr + ')';\n};\n\n/**\n * Operate on the property expression.\n *\n * @param {String} op\n * @param {Node} right\n * @return {Node}\n * @api public\n */\n\nProperty.prototype.operate = function(op, right, val){\n  return this.expr.operate(op, right, val);\n};\n"]},"metadata":{},"sourceType":"script"}