{"ast":null,"code":"var utils = require('../utils');\n/**\n * Merge the object `dest` with the given args.\n *\n * @param {Object} dest\n * @param {Object} ...\n * @return {Object} dest\n * @api public\n */\n\n\n(module.exports = function merge(dest) {\n  utils.assertPresent(dest, 'dest');\n  dest = utils.unwrap(dest).first;\n  utils.assertType(dest, 'object', 'dest');\n  var last = utils.unwrap(arguments[arguments.length - 1]).first,\n      deep = true === last.val;\n\n  for (var i = 1, len = arguments.length - deep; i < len; ++i) {\n    utils.merge(dest.vals, utils.unwrap(arguments[i]).first.vals, deep);\n  }\n\n  return dest;\n}).raw = true;","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/functions/merge.js"],"names":["utils","require","module","exports","merge","dest","assertPresent","unwrap","first","assertType","last","arguments","length","deep","val","i","len","vals","raw"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,CAACC,MAAM,CAACC,OAAP,GAAiB,SAASC,KAAT,CAAeC,IAAf,EAAoB;AACpCL,EAAAA,KAAK,CAACM,aAAN,CAAoBD,IAApB,EAA0B,MAA1B;AACAA,EAAAA,IAAI,GAAGL,KAAK,CAACO,MAAN,CAAaF,IAAb,EAAmBG,KAA1B;AACAR,EAAAA,KAAK,CAACS,UAAN,CAAiBJ,IAAjB,EAAuB,QAAvB,EAAiC,MAAjC;AAEA,MAAIK,IAAI,GAAGV,KAAK,CAACO,MAAN,CAAaI,SAAS,CAACA,SAAS,CAACC,MAAV,GAAmB,CAApB,CAAtB,EAA8CJ,KAAzD;AAAA,MACIK,IAAI,GAAI,SAASH,IAAI,CAACI,GAD1B;;AAGA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGL,SAAS,CAACC,MAAV,GAAmBC,IAAzC,EAA+CE,CAAC,GAAGC,GAAnD,EAAwD,EAAED,CAA1D,EAA6D;AAC3Df,IAAAA,KAAK,CAACI,KAAN,CAAYC,IAAI,CAACY,IAAjB,EAAuBjB,KAAK,CAACO,MAAN,CAAaI,SAAS,CAACI,CAAD,CAAtB,EAA2BP,KAA3B,CAAiCS,IAAxD,EAA8DJ,IAA9D;AACD;;AACD,SAAOR,IAAP;AACD,CAZD,EAYGa,GAZH,GAYS,IAZT","sourcesContent":["var utils = require('../utils');\n\n/**\n * Merge the object `dest` with the given args.\n *\n * @param {Object} dest\n * @param {Object} ...\n * @return {Object} dest\n * @api public\n */\n\n(module.exports = function merge(dest){\n  utils.assertPresent(dest, 'dest');\n  dest = utils.unwrap(dest).first;\n  utils.assertType(dest, 'object', 'dest');\n\n  var last = utils.unwrap(arguments[arguments.length - 1]).first\n    , deep = (true === last.val);\n\n  for (var i = 1, len = arguments.length - deep; i < len; ++i) {\n    utils.merge(dest.vals, utils.unwrap(arguments[i]).first.vals, deep);\n  }\n  return dest;\n}).raw = true;\n"]},"metadata":{},"sourceType":"script"}