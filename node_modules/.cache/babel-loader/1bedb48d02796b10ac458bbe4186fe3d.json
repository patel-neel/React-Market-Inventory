{"ast":null,"code":"/*!\n * Stylus - Evaluator\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nvar Visitor = require('./'),\n    units = require('../units'),\n    nodes = require('../nodes'),\n    Stack = require('../stack'),\n    Frame = require('../stack/frame'),\n    utils = require('../utils'),\n    bifs = require('../functions'),\n    dirname = require('path').dirname,\n    colors = require('../colors'),\n    debug = require('debug')('stylus:evaluator'),\n    fs = require('fs');\n/**\n * Import `file` and return Block node.\n *\n * @api private\n */\n\n\nfunction importFile(node, file, literal) {\n  var importStack = this.importStack,\n      Parser = require('../parser'),\n      stat; // Handling the `require`\n\n\n  if (node.once) {\n    if (this.requireHistory[file]) return nodes.null;\n    this.requireHistory[file] = true;\n\n    if (literal && !this.includeCSS) {\n      return node;\n    }\n  } // Avoid overflows from importing the same file over again\n\n\n  if (~importStack.indexOf(file)) throw new Error('import loop has been found');\n  var str = fs.readFileSync(file, 'utf8'); // shortcut for empty files\n\n  if (!str.trim()) return nodes.null; // Expose imports\n\n  node.path = file;\n  node.dirname = dirname(file); // Store the modified time\n\n  stat = fs.statSync(file);\n  node.mtime = stat.mtime;\n  this.paths.push(node.dirname);\n  if (this.options._imports) this.options._imports.push(node.clone()); // Parse the file\n\n  importStack.push(file);\n  nodes.filename = file;\n\n  if (literal) {\n    literal = new nodes.Literal(str.replace(/\\r\\n?/g, '\\n'));\n    literal.lineno = literal.column = 1;\n    if (!this.resolveURL) return literal;\n  } // parse\n\n\n  var block = new nodes.Block(),\n      parser = new Parser(str, utils.merge({\n    root: block\n  }, this.options));\n\n  try {\n    block = parser.parse();\n  } catch (err) {\n    var line = parser.lexer.lineno,\n        column = parser.lexer.column;\n\n    if (literal && this.includeCSS && this.resolveURL) {\n      this.warn('ParseError: ' + file + ':' + line + ':' + column + '. This file included as-is');\n      return literal;\n    } else {\n      err.filename = file;\n      err.lineno = line;\n      err.column = column;\n      err.input = str;\n      throw err;\n    }\n  } // Evaluate imported \"root\"\n\n\n  block = block.clone(this.currentBlock);\n  block.parent = this.currentBlock;\n  block.scope = false;\n  var ret = this.visit(block);\n  importStack.pop();\n  if (!this.resolveURL || this.resolveURL.nocheck) this.paths.pop();\n  return ret;\n}\n/**\n * Initialize a new `Evaluator` with the given `root` Node\n * and the following `options`.\n *\n * Options:\n *\n *   - `compress`  Compress the css output, defaults to false\n *   - `warn`  Warn the user of duplicate function definitions etc\n *\n * @param {Node} root\n * @api private\n */\n\n\nvar Evaluator = module.exports = function Evaluator(root, options) {\n  options = options || {};\n  Visitor.call(this, root);\n  var functions = this.functions = options.functions || {};\n  this.stack = new Stack();\n  this.imports = options.imports || [];\n  this.globals = options.globals || {};\n  this.paths = options.paths || [];\n  this.prefix = options.prefix || '';\n  this.filename = options.filename;\n  this.includeCSS = options['include css'];\n  this.resolveURL = functions.url && 'resolver' == functions.url.name && functions.url.options;\n  this.paths.push(dirname(options.filename || '.'));\n  this.stack.push(this.global = new Frame(root));\n  this.warnings = options.warn;\n  this.options = options;\n  this.calling = []; // TODO: remove, use stack\n\n  this.importStack = [];\n  this.requireHistory = {};\n  this.return = 0;\n};\n/**\n * Inherit from `Visitor.prototype`.\n */\n\n\nEvaluator.prototype.__proto__ = Visitor.prototype;\n/**\n * Proxy visit to expose node line numbers.\n *\n * @param {Node} node\n * @return {Node}\n * @api private\n */\n\nvar visit = Visitor.prototype.visit;\n\nEvaluator.prototype.visit = function (node) {\n  try {\n    return visit.call(this, node);\n  } catch (err) {\n    if (err.filename) throw err;\n    err.lineno = node.lineno;\n    err.column = node.column;\n    err.filename = node.filename;\n    err.stylusStack = this.stack.toString();\n\n    try {\n      err.input = fs.readFileSync(err.filename, 'utf8');\n    } catch (err) {// ignore\n    }\n\n    throw err;\n  }\n};\n/**\n * Perform evaluation setup:\n *\n *   - populate global scope\n *   - iterate imports\n *\n * @api private\n */\n\n\nEvaluator.prototype.setup = function () {\n  var root = this.root;\n  var imports = [];\n  this.populateGlobalScope();\n  this.imports.forEach(function (file) {\n    var expr = new nodes.Expression();\n    expr.push(new nodes.String(file));\n    imports.push(new nodes.Import(expr));\n  }, this);\n  root.nodes = imports.concat(root.nodes);\n};\n/**\n * Populate the global scope with:\n *\n *   - css colors\n *   - user-defined globals\n *\n * @api private\n */\n\n\nEvaluator.prototype.populateGlobalScope = function () {\n  var scope = this.global.scope; // colors\n\n  Object.keys(colors).forEach(function (name) {\n    var color = colors[name],\n        rgba = new nodes.RGBA(color[0], color[1], color[2], color[3]),\n        node = new nodes.Ident(name, rgba);\n    rgba.name = name;\n    scope.add(node);\n  }); // expose url function\n\n  scope.add(new nodes.Ident('embedurl', new nodes.Function('embedurl', require('../functions/url')({\n    limit: false\n  })))); // user-defined globals\n\n  var globals = this.globals;\n  Object.keys(globals).forEach(function (name) {\n    var val = globals[name];\n    if (!val.nodeName) val = new nodes.Literal(val);\n    scope.add(new nodes.Ident(name, val));\n  });\n};\n/**\n * Evaluate the tree.\n *\n * @return {Node}\n * @api private\n */\n\n\nEvaluator.prototype.evaluate = function () {\n  debug('eval %s', this.filename);\n  this.setup();\n  return this.visit(this.root);\n};\n/**\n * Visit Group.\n */\n\n\nEvaluator.prototype.visitGroup = function (group) {\n  group.nodes = group.nodes.map(function (selector) {\n    selector.val = this.interpolate(selector);\n    debug('ruleset %s', selector.val);\n    return selector;\n  }, this);\n  group.block = this.visit(group.block);\n  return group;\n};\n/**\n * Visit Return.\n */\n\n\nEvaluator.prototype.visitReturn = function (ret) {\n  ret.expr = this.visit(ret.expr);\n  throw ret;\n};\n/**\n * Visit Media.\n */\n\n\nEvaluator.prototype.visitMedia = function (media) {\n  media.block = this.visit(media.block);\n  media.val = this.visit(media.val);\n  return media;\n};\n/**\n * Visit QueryList.\n */\n\n\nEvaluator.prototype.visitQueryList = function (queries) {\n  var val, query;\n  queries.nodes.forEach(this.visit, this);\n\n  if (1 == queries.nodes.length) {\n    query = queries.nodes[0];\n\n    if (val = this.lookup(query.type)) {\n      val = val.first.string;\n      if (!val) return queries;\n\n      var Parser = require('../parser'),\n          parser = new Parser(val, this.options);\n\n      queries = this.visit(parser.queries());\n    }\n  }\n\n  return queries;\n};\n/**\n * Visit Query.\n */\n\n\nEvaluator.prototype.visitQuery = function (node) {\n  node.predicate = this.visit(node.predicate);\n  node.type = this.visit(node.type);\n  node.nodes.forEach(this.visit, this);\n  return node;\n};\n/**\n * Visit Feature.\n */\n\n\nEvaluator.prototype.visitFeature = function (node) {\n  node.name = this.interpolate(node);\n\n  if (node.expr) {\n    this.return++;\n    node.expr = this.visit(node.expr);\n    this.return--;\n  }\n\n  return node;\n};\n/**\n * Visit Object.\n */\n\n\nEvaluator.prototype.visitObject = function (obj) {\n  for (var key in obj.vals) {\n    obj.vals[key] = this.visit(obj.vals[key]);\n  }\n\n  return obj;\n};\n/**\n * Visit Member.\n */\n\n\nEvaluator.prototype.visitMember = function (node) {\n  var left = node.left,\n      right = node.right,\n      obj = this.visit(left).first;\n\n  if ('object' != obj.nodeName) {\n    throw new Error(left.toString() + ' has no property .' + right);\n  }\n\n  if (node.val) {\n    this.return++;\n    obj.set(right.name, this.visit(node.val));\n    this.return--;\n  }\n\n  return obj.get(right.name);\n};\n/**\n * Visit Keyframes.\n */\n\n\nEvaluator.prototype.visitKeyframes = function (keyframes) {\n  var val;\n  if (keyframes.fabricated) return keyframes;\n  keyframes.val = this.interpolate(keyframes).trim();\n\n  if (val = this.lookup(keyframes.val)) {\n    keyframes.val = val.first.string || val.first.name;\n  }\n\n  keyframes.block = this.visit(keyframes.block);\n  if ('official' != keyframes.prefix) return keyframes;\n  this.vendors.forEach(function (prefix) {\n    // IE never had prefixes for keyframes\n    if ('ms' == prefix) return;\n    var node = keyframes.clone();\n    node.val = keyframes.val;\n    node.prefix = prefix;\n    node.block = keyframes.block;\n    node.fabricated = true;\n    this.currentBlock.push(node);\n  }, this);\n  return nodes.null;\n};\n/**\n * Visit Function.\n */\n\n\nEvaluator.prototype.visitFunction = function (fn) {\n  // check local\n  var local = this.stack.currentFrame.scope.lookup(fn.name);\n  if (local) this.warn('local ' + local.nodeName + ' \"' + fn.name + '\" previously defined in this scope'); // user-defined\n\n  var user = this.functions[fn.name];\n  if (user) this.warn('user-defined function \"' + fn.name + '\" is already defined'); // BIF\n\n  var bif = bifs[fn.name];\n  if (bif) this.warn('built-in function \"' + fn.name + '\" is already defined');\n  return fn;\n};\n/**\n * Visit Each.\n */\n\n\nEvaluator.prototype.visitEach = function (each) {\n  this.return++;\n  var expr = utils.unwrap(this.visit(each.expr)),\n      len = expr.nodes.length,\n      val = new nodes.Ident(each.val),\n      key = new nodes.Ident(each.key || '__index__'),\n      scope = this.currentScope,\n      block = this.currentBlock,\n      vals = [],\n      self = this,\n      body,\n      obj;\n  this.return--;\n  each.block.scope = false;\n\n  function visitBody(key, val) {\n    scope.add(val);\n    scope.add(key);\n    body = self.visit(each.block.clone());\n    vals = vals.concat(body.nodes);\n  } // for prop in obj\n\n\n  if (1 == len && 'object' == expr.nodes[0].nodeName) {\n    obj = expr.nodes[0];\n\n    for (var prop in obj.vals) {\n      val.val = new nodes.String(prop);\n      key.val = obj.get(prop);\n      visitBody(key, val);\n    }\n  } else {\n    for (var i = 0; i < len; ++i) {\n      val.val = expr.nodes[i];\n      key.val = new nodes.Unit(i);\n      visitBody(key, val);\n    }\n  }\n\n  this.mixin(vals, block);\n  return vals[vals.length - 1] || nodes.null;\n};\n/**\n * Visit Call.\n */\n\n\nEvaluator.prototype.visitCall = function (call) {\n  debug('call %s', call);\n  var fn = this.lookup(call.name),\n      literal,\n      ret; // url()\n\n  this.ignoreColors = 'url' == call.name; // Variable function\n\n  if (fn && 'expression' == fn.nodeName) {\n    fn = fn.nodes[0];\n  } // Not a function? try user-defined or built-ins\n\n\n  if (fn && 'function' != fn.nodeName) {\n    fn = this.lookupFunction(call.name);\n  } // Undefined function? render literal CSS\n\n\n  if (!fn || fn.nodeName != 'function') {\n    debug('%s is undefined', call); // Special case for `calc`\n\n    if ('calc' == this.unvendorize(call.name)) {\n      literal = call.args.nodes && call.args.nodes[0];\n      if (literal) ret = new nodes.Literal(call.name + literal);\n    } else {\n      ret = this.literalCall(call);\n    }\n\n    this.ignoreColors = false;\n    return ret;\n  }\n\n  this.calling.push(call.name); // Massive stack\n\n  if (this.calling.length > 200) {\n    throw new RangeError('Maximum stylus call stack size exceeded');\n  } // First node in expression\n\n\n  if ('expression' == fn.nodeName) fn = fn.first; // Evaluate arguments\n\n  this.return++;\n  var args = this.visit(call.args);\n\n  for (var key in args.map) {\n    args.map[key] = this.visit(args.map[key].clone());\n  }\n\n  this.return--; // Built-in\n\n  if (fn.fn) {\n    debug('%s is built-in', call);\n    ret = this.invokeBuiltin(fn.fn, args); // User-defined\n  } else if ('function' == fn.nodeName) {\n    debug('%s is user-defined', call); // Evaluate mixin block\n\n    if (call.block) call.block = this.visit(call.block);\n    ret = this.invokeFunction(fn, args, call.block);\n  }\n\n  this.calling.pop();\n  this.ignoreColors = false;\n  return ret;\n};\n/**\n * Visit Ident.\n */\n\n\nEvaluator.prototype.visitIdent = function (ident) {\n  var prop; // Property lookup\n\n  if (ident.property) {\n    if (prop = this.lookupProperty(ident.name)) {\n      return this.visit(prop.expr.clone());\n    }\n\n    return nodes.null; // Lookup\n  } else if (ident.val.isNull) {\n    var val = this.lookup(ident.name); // Object or Block mixin\n\n    if (val && ident.mixin) this.mixinNode(val);\n    return val ? this.visit(val) : ident; // Assign\n  } else {\n    this.return++;\n    ident.val = this.visit(ident.val);\n    this.return--;\n    this.currentScope.add(ident);\n    return ident.val;\n  }\n};\n/**\n * Visit BinOp.\n */\n\n\nEvaluator.prototype.visitBinOp = function (binop) {\n  // Special-case \"is defined\" pseudo binop\n  if ('is defined' == binop.op) return this.isDefined(binop.left);\n  this.return++; // Visit operands\n\n  var op = binop.op,\n      left = this.visit(binop.left),\n      right = '||' == op || '&&' == op ? binop.right : this.visit(binop.right); // HACK: ternary\n\n  var val = binop.val ? this.visit(binop.val) : null;\n  this.return--; // Operate\n\n  try {\n    return this.visit(left.operate(op, right, val));\n  } catch (err) {\n    // disregard coercion issues in equality\n    // checks, and simply return false\n    if ('CoercionError' == err.name) {\n      switch (op) {\n        case '==':\n          return nodes.false;\n\n        case '!=':\n          return nodes.true;\n      }\n    }\n\n    throw err;\n  }\n};\n/**\n * Visit UnaryOp.\n */\n\n\nEvaluator.prototype.visitUnaryOp = function (unary) {\n  var op = unary.op,\n      node = this.visit(unary.expr);\n\n  if ('!' != op) {\n    node = node.first.clone();\n    utils.assertType(node, 'unit');\n  }\n\n  switch (op) {\n    case '-':\n      node.val = -node.val;\n      break;\n\n    case '+':\n      node.val = +node.val;\n      break;\n\n    case '~':\n      node.val = ~node.val;\n      break;\n\n    case '!':\n      return node.toBoolean().negate();\n  }\n\n  return node;\n};\n/**\n * Visit TernaryOp.\n */\n\n\nEvaluator.prototype.visitTernary = function (ternary) {\n  var ok = this.visit(ternary.cond).toBoolean();\n  return ok.isTrue ? this.visit(ternary.trueExpr) : this.visit(ternary.falseExpr);\n};\n/**\n * Visit Expression.\n */\n\n\nEvaluator.prototype.visitExpression = function (expr) {\n  for (var i = 0, len = expr.nodes.length; i < len; ++i) {\n    expr.nodes[i] = this.visit(expr.nodes[i]);\n  } // support (n * 5)px etc\n\n\n  if (this.castable(expr)) expr = this.cast(expr);\n  return expr;\n};\n/**\n * Visit Arguments.\n */\n\n\nEvaluator.prototype.visitArguments = Evaluator.prototype.visitExpression;\n/**\n * Visit Property.\n */\n\nEvaluator.prototype.visitProperty = function (prop) {\n  var name = this.interpolate(prop),\n      fn = this.lookup(name),\n      call = fn && 'function' == fn.first.nodeName,\n      literal = ~this.calling.indexOf(name),\n      _prop = this.property; // Function of the same name\n\n  if (call && !literal && !prop.literal) {\n    var args = nodes.Arguments.fromExpression(utils.unwrap(prop.expr.clone()));\n    prop.name = name;\n    this.property = prop;\n    this.return++;\n    this.property.expr = this.visit(prop.expr);\n    this.return--;\n    var ret = this.visit(new nodes.Call(name, args));\n    this.property = _prop;\n    return ret; // Regular property\n  } else {\n    this.return++;\n    prop.name = name;\n    prop.literal = true;\n    this.property = prop;\n    prop.expr = this.visit(prop.expr);\n    this.property = _prop;\n    this.return--;\n    return prop;\n  }\n};\n/**\n * Visit Root.\n */\n\n\nEvaluator.prototype.visitRoot = function (block) {\n  // normalize cached imports\n  if (block != this.root) {\n    block.constructor = nodes.Block;\n    return this.visit(block);\n  }\n\n  for (var i = 0; i < block.nodes.length; ++i) {\n    block.index = i;\n    block.nodes[i] = this.visit(block.nodes[i]);\n  }\n\n  return block;\n};\n/**\n * Visit Block.\n */\n\n\nEvaluator.prototype.visitBlock = function (block) {\n  this.stack.push(new Frame(block));\n\n  for (block.index = 0; block.index < block.nodes.length; ++block.index) {\n    try {\n      block.nodes[block.index] = this.visit(block.nodes[block.index]);\n    } catch (err) {\n      if ('return' == err.nodeName) {\n        if (this.return) {\n          this.stack.pop();\n          throw err;\n        } else {\n          block.nodes[block.index] = err;\n          break;\n        }\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  this.stack.pop();\n  return block;\n};\n/**\n * Visit Atblock.\n */\n\n\nEvaluator.prototype.visitAtblock = function (atblock) {\n  atblock.block = this.visit(atblock.block);\n  return atblock;\n};\n/**\n * Visit Atrule.\n */\n\n\nEvaluator.prototype.visitAtrule = function (atrule) {\n  atrule.val = this.interpolate(atrule);\n  if (atrule.block) atrule.block = this.visit(atrule.block);\n  return atrule;\n};\n/**\n * Visit Supports.\n */\n\n\nEvaluator.prototype.visitSupports = function (node) {\n  var condition = node.condition,\n      val;\n  this.return++;\n  node.condition = this.visit(condition);\n  this.return--;\n  val = condition.first;\n\n  if (1 == condition.nodes.length && 'string' == val.nodeName) {\n    node.condition = val.string;\n  }\n\n  node.block = this.visit(node.block);\n  return node;\n};\n/**\n * Visit If.\n */\n\n\nEvaluator.prototype.visitIf = function (node) {\n  var ret,\n      block = this.currentBlock,\n      negate = node.negate;\n  this.return++;\n  var ok = this.visit(node.cond).first.toBoolean();\n  this.return--;\n  node.block.scope = node.block.hasMedia; // Evaluate body\n\n  if (negate) {\n    // unless\n    if (ok.isFalse) {\n      ret = this.visit(node.block);\n    }\n  } else {\n    // if\n    if (ok.isTrue) {\n      ret = this.visit(node.block); // else\n    } else if (node.elses.length) {\n      var elses = node.elses,\n          len = elses.length,\n          cond;\n\n      for (var i = 0; i < len; ++i) {\n        // else if\n        if (elses[i].cond) {\n          elses[i].block.scope = elses[i].block.hasMedia;\n          this.return++;\n          cond = this.visit(elses[i].cond).first.toBoolean();\n          this.return--;\n\n          if (cond.isTrue) {\n            ret = this.visit(elses[i].block);\n            break;\n          } // else\n\n        } else {\n          elses[i].scope = elses[i].hasMedia;\n          ret = this.visit(elses[i]);\n        }\n      }\n    }\n  } // mixin conditional statements within\n  // a selector group or at-rule\n\n\n  if (ret && !node.postfix && block.node && ~['group', 'atrule', 'media', 'supports', 'keyframes'].indexOf(block.node.nodeName)) {\n    this.mixin(ret.nodes, block);\n    return nodes.null;\n  }\n\n  return ret || nodes.null;\n};\n/**\n * Visit Extend.\n */\n\n\nEvaluator.prototype.visitExtend = function (extend) {\n  var block = this.currentBlock;\n  if ('group' != block.node.nodeName) block = this.closestGroup;\n  extend.selectors.forEach(function (selector) {\n    block.node.extends.push({\n      // Cloning the selector for when we are in a loop and don't want it to affect\n      // the selector nodes and cause the values to be different to expected\n      selector: this.interpolate(selector.clone()).trim(),\n      optional: selector.optional,\n      lineno: selector.lineno,\n      column: selector.column\n    });\n  }, this);\n  return nodes.null;\n};\n/**\n * Visit Import.\n */\n\n\nEvaluator.prototype.visitImport = function (imported) {\n  this.return++;\n  var path = this.visit(imported.path).first,\n      nodeName = imported.once ? 'require' : 'import',\n      found,\n      literal;\n  this.return--;\n  debug('import %s', path); // url() passed\n\n  if ('url' == path.name) {\n    if (imported.once) throw new Error('You cannot @require a url');\n    return imported;\n  } // Ensure string\n\n\n  if (!path.string) throw new Error('@' + nodeName + ' string expected');\n  var name = path = path.string; // Absolute URL or hash\n\n  if (/(?:url\\s*\\(\\s*)?['\"]?(?:#|(?:https?:)?\\/\\/)/i.test(path)) {\n    if (imported.once) throw new Error('You cannot @require a url');\n    return imported;\n  } // Literal\n\n\n  if (/\\.css(?:\"|$)/.test(path)) {\n    literal = true;\n\n    if (!imported.once && !this.includeCSS) {\n      return imported;\n    }\n  } // support optional .styl\n\n\n  if (!literal && !/\\.styl$/i.test(path)) path += '.styl'; // Lookup\n\n  found = utils.find(path, this.paths, this.filename);\n\n  if (!found) {\n    found = utils.lookupIndex(name, this.paths, this.filename);\n  } // Throw if import failed\n\n\n  if (!found) throw new Error('failed to locate @' + nodeName + ' file ' + path);\n  var block = new nodes.Block();\n\n  for (var i = 0, len = found.length; i < len; ++i) {\n    block.push(importFile.call(this, imported, found[i], literal));\n  }\n\n  return block;\n};\n/**\n * Invoke `fn` with `args`.\n *\n * @param {Function} fn\n * @param {Array} args\n * @return {Node}\n * @api private\n */\n\n\nEvaluator.prototype.invokeFunction = function (fn, args, content) {\n  var block = new nodes.Block(fn.block.parent); // Clone the function body\n  // to prevent mutation of subsequent calls\n\n  var body = fn.block.clone(block); // mixin block\n\n  var mixinBlock = this.stack.currentFrame.block; // new block scope\n\n  this.stack.push(new Frame(block));\n  var scope = this.currentScope; // normalize arguments\n\n  if ('arguments' != args.nodeName) {\n    var expr = new nodes.Expression();\n    expr.push(args);\n    args = nodes.Arguments.fromExpression(expr);\n  } // arguments local\n\n\n  scope.add(new nodes.Ident('arguments', args)); // mixin scope introspection\n\n  scope.add(new nodes.Ident('mixin', this.return ? nodes.false : new nodes.String(mixinBlock.nodeName))); // current property\n\n  if (this.property) {\n    var prop = this.propertyExpression(this.property, fn.name);\n    scope.add(new nodes.Ident('current-property', prop));\n  } else {\n    scope.add(new nodes.Ident('current-property', nodes.null));\n  } // current call stack\n\n\n  var expr = new nodes.Expression();\n\n  for (var i = this.calling.length - 1; i--;) {\n    expr.push(new nodes.Literal(this.calling[i]));\n  }\n\n  ;\n  scope.add(new nodes.Ident('called-from', expr)); // inject arguments as locals\n\n  var i = 0,\n      len = args.nodes.length;\n  fn.params.nodes.forEach(function (node) {\n    // rest param support\n    if (node.rest) {\n      node.val = new nodes.Expression();\n\n      for (; i < len; ++i) {\n        node.val.push(args.nodes[i]);\n      }\n\n      node.val.preserve = true;\n      node.val.isList = args.isList; // argument default support\n    } else {\n      var arg = args.map[node.name] || args.nodes[i++];\n      node = node.clone();\n\n      if (arg) {\n        arg.isEmpty ? args.nodes[i - 1] = this.visit(node) : node.val = arg;\n      } else {\n        args.push(node.val);\n      } // required argument not satisfied\n\n\n      if (node.val.isNull) {\n        throw new Error('argument \"' + node + '\" required for ' + fn);\n      }\n    }\n\n    scope.add(node);\n  }, this); // mixin block\n\n  if (content) scope.add(new nodes.Ident('block', content, true)); // invoke\n\n  return this.invoke(body, true, fn.filename);\n};\n/**\n * Invoke built-in `fn` with `args`.\n *\n * @param {Function} fn\n * @param {Array} args\n * @return {Node}\n * @api private\n */\n\n\nEvaluator.prototype.invokeBuiltin = function (fn, args) {\n  // Map arguments to first node\n  // providing a nicer js api for\n  // BIFs. Functions may specify that\n  // they wish to accept full expressions\n  // via .raw\n  if (fn.raw) {\n    args = args.nodes;\n  } else {\n    if (!fn.params) {\n      fn.params = utils.params(fn);\n    }\n\n    args = fn.params.reduce(function (ret, param) {\n      var arg = args.map[param] || args.nodes.shift();\n\n      if (arg) {\n        arg = utils.unwrap(arg);\n        var len = arg.nodes.length;\n\n        if (len > 1) {\n          for (var i = 0; i < len; ++i) {\n            ret.push(utils.unwrap(arg.nodes[i].first));\n          }\n        } else {\n          ret.push(arg.first);\n        }\n      }\n\n      return ret;\n    }, []);\n  } // Invoke the BIF\n\n\n  var body = utils.coerce(fn.apply(this, args)); // Always wrapping allows js functions\n  // to return several values with a single\n  // Expression node\n\n  var expr = new nodes.Expression();\n  expr.push(body);\n  body = expr; // Invoke\n\n  return this.invoke(body);\n};\n/**\n * Invoke the given function `body`.\n *\n * @param {Block} body\n * @return {Node}\n * @api private\n */\n\n\nEvaluator.prototype.invoke = function (body, stack, filename) {\n  var self = this,\n      ret;\n  if (filename) this.paths.push(dirname(filename)); // Return\n\n  if (this.return) {\n    ret = this.eval(body.nodes);\n    if (stack) this.stack.pop(); // Mixin\n  } else {\n    body = this.visit(body);\n    if (stack) this.stack.pop();\n    this.mixin(body.nodes, this.currentBlock);\n    ret = nodes.null;\n  }\n\n  if (filename) this.paths.pop();\n  return ret;\n};\n/**\n * Mixin the given `nodes` to the given `block`.\n *\n * @param {Array} nodes\n * @param {Block} block\n * @api private\n */\n\n\nEvaluator.prototype.mixin = function (nodes, block) {\n  if (!nodes.length) return;\n  var len = block.nodes.length,\n      head = block.nodes.slice(0, block.index),\n      tail = block.nodes.slice(block.index + 1, len);\n\n  this._mixin(nodes, head, block);\n\n  block.index = 0;\n  block.nodes = head.concat(tail);\n};\n/**\n * Mixin the given `items` to the `dest` array.\n *\n * @param {Array} items\n * @param {Array} dest\n * @param {Block} block\n * @api private\n */\n\n\nEvaluator.prototype._mixin = function (items, dest, block) {\n  var node,\n      len = items.length;\n\n  for (var i = 0; i < len; ++i) {\n    switch ((node = items[i]).nodeName) {\n      case 'return':\n        return;\n\n      case 'block':\n        this._mixin(node.nodes, dest, block);\n\n        break;\n\n      case 'media':\n        // fix link to the parent block\n        var parentNode = node.block.parent.node;\n\n        if (parentNode && 'call' != parentNode.nodeName) {\n          node.block.parent = block;\n        }\n\n      case 'property':\n        var val = node.expr; // prevent `block` mixin recursion\n\n        if (node.literal && 'block' == val.first.name) {\n          val = utils.unwrap(val);\n          val.nodes[0] = new nodes.Literal('block');\n        }\n\n      default:\n        dest.push(node);\n    }\n  }\n};\n/**\n * Mixin the given `node` to the current block.\n *\n * @param {Node} node\n * @api private\n */\n\n\nEvaluator.prototype.mixinNode = function (node) {\n  node = this.visit(node.first);\n\n  switch (node.nodeName) {\n    case 'object':\n      this.mixinObject(node);\n      return nodes.null;\n\n    case 'block':\n    case 'atblock':\n      this.mixin(node.nodes, this.currentBlock);\n      return nodes.null;\n  }\n};\n/**\n * Mixin the given `object` to the current block.\n *\n * @param {Object} object\n * @api private\n */\n\n\nEvaluator.prototype.mixinObject = function (object) {\n  var Parser = require('../parser'),\n      root = this.root,\n      str = '$block ' + object.toBlock(),\n      parser = new Parser(str, utils.merge({\n    root: block\n  }, this.options)),\n      block;\n\n  try {\n    block = parser.parse();\n  } catch (err) {\n    err.filename = this.filename;\n    err.lineno = parser.lexer.lineno;\n    err.column = parser.lexer.column;\n    err.input = str;\n    throw err;\n  }\n\n  block.parent = root;\n  block.scope = false;\n  var ret = this.visit(block),\n      vals = ret.first.nodes;\n\n  for (var i = 0, len = vals.length; i < len; ++i) {\n    if (vals[i].block) {\n      this.mixin(vals[i].block.nodes, this.currentBlock);\n      break;\n    }\n  }\n};\n/**\n * Evaluate the given `vals`.\n *\n * @param {Array} vals\n * @return {Node}\n * @api private\n */\n\n\nEvaluator.prototype.eval = function (vals) {\n  if (!vals) return nodes.null;\n  var len = vals.length,\n      node = nodes.null;\n\n  try {\n    for (var i = 0; i < len; ++i) {\n      node = vals[i];\n\n      switch (node.nodeName) {\n        case 'if':\n          if ('block' != node.block.nodeName) {\n            node = this.visit(node);\n            break;\n          }\n\n        case 'each':\n        case 'block':\n          node = this.visit(node);\n          if (node.nodes) node = this.eval(node.nodes);\n          break;\n\n        default:\n          node = this.visit(node);\n      }\n    }\n  } catch (err) {\n    if ('return' == err.nodeName) {\n      return err.expr;\n    } else {\n      throw err;\n    }\n  }\n\n  return node;\n};\n/**\n * Literal function `call`.\n *\n * @param {Call} call\n * @return {call}\n * @api private\n */\n\n\nEvaluator.prototype.literalCall = function (call) {\n  call.args = this.visit(call.args);\n  return call;\n};\n/**\n * Lookup property `name`.\n *\n * @param {String} name\n * @return {Property}\n * @api private\n */\n\n\nEvaluator.prototype.lookupProperty = function (name) {\n  var i = this.stack.length,\n      index = this.currentBlock.index,\n      top = i,\n      nodes,\n      block,\n      len,\n      other;\n\n  while (i--) {\n    block = this.stack[i].block;\n    if (!block.node) continue;\n\n    switch (block.node.nodeName) {\n      case 'group':\n      case 'function':\n      case 'if':\n      case 'each':\n      case 'atrule':\n      case 'media':\n      case 'atblock':\n      case 'call':\n        nodes = block.nodes; // scan siblings from the property index up\n\n        if (i + 1 == top) {\n          while (index--) {\n            // ignore current property\n            if (this.property == nodes[index]) continue;\n            other = this.interpolate(nodes[index]);\n            if (name == other) return nodes[index].clone();\n          } // sequential lookup for non-siblings (for now)\n\n        } else {\n          len = nodes.length;\n\n          while (len--) {\n            if ('property' != nodes[len].nodeName || this.property == nodes[len]) continue;\n            other = this.interpolate(nodes[len]);\n            if (name == other) return nodes[len].clone();\n          }\n        }\n\n        break;\n    }\n  }\n\n  return nodes.null;\n};\n/**\n * Return the closest mixin-able `Block`.\n *\n * @return {Block}\n * @api private\n */\n\n\nEvaluator.prototype.__defineGetter__('closestBlock', function () {\n  var i = this.stack.length,\n      block;\n\n  while (i--) {\n    block = this.stack[i].block;\n\n    if (block.node) {\n      switch (block.node.nodeName) {\n        case 'group':\n        case 'keyframes':\n        case 'atrule':\n        case 'atblock':\n        case 'media':\n        case 'call':\n          return block;\n      }\n    }\n  }\n});\n/**\n * Return the closest group block.\n *\n * @return {Block}\n * @api private\n */\n\n\nEvaluator.prototype.__defineGetter__('closestGroup', function () {\n  var i = this.stack.length,\n      block;\n\n  while (i--) {\n    block = this.stack[i].block;\n\n    if (block.node && 'group' == block.node.nodeName) {\n      return block;\n    }\n  }\n});\n/**\n * Return the current selectors stack.\n *\n * @return {Array}\n * @api private\n */\n\n\nEvaluator.prototype.__defineGetter__('selectorStack', function () {\n  var block,\n      stack = [];\n\n  for (var i = 0, len = this.stack.length; i < len; ++i) {\n    block = this.stack[i].block;\n\n    if (block.node && 'group' == block.node.nodeName) {\n      block.node.nodes.forEach(function (selector) {\n        if (!selector.val) selector.val = this.interpolate(selector);\n      }, this);\n      stack.push(block.node.nodes);\n    }\n  }\n\n  return stack;\n});\n/**\n * Lookup `name`, with support for JavaScript\n * functions, and BIFs.\n *\n * @param {String} name\n * @return {Node}\n * @api private\n */\n\n\nEvaluator.prototype.lookup = function (name) {\n  var val;\n  if (this.ignoreColors && name in colors) return;\n\n  if (val = this.stack.lookup(name)) {\n    return utils.unwrap(val);\n  } else {\n    return this.lookupFunction(name);\n  }\n};\n/**\n * Map segments in `node` returning a string.\n *\n * @param {Node} node\n * @return {String}\n * @api private\n */\n\n\nEvaluator.prototype.interpolate = function (node) {\n  var self = this,\n      isSelector = 'selector' == node.nodeName;\n\n  function toString(node) {\n    switch (node.nodeName) {\n      case 'function':\n      case 'ident':\n        return node.name;\n\n      case 'literal':\n      case 'string':\n        if (self.prefix && !node.prefixed && !node.val.nodeName) {\n          node.val = node.val.replace(/\\.(?=[\\w-])|^\\.$/g, '.' + self.prefix);\n          node.prefixed = true;\n        }\n\n        return node.val;\n\n      case 'unit':\n        // Interpolation inside keyframes\n        return '%' == node.type ? node.val + '%' : node.val;\n\n      case 'member':\n        return toString(self.visit(node));\n\n      case 'expression':\n        // Prevent cyclic `selector()` calls.\n        if (self.calling && ~self.calling.indexOf('selector') && self._selector) return self._selector;\n        self.return++;\n        var ret = toString(self.visit(node).first);\n        self.return--;\n        if (isSelector) self._selector = ret;\n        return ret;\n    }\n  }\n\n  if (node.segments) {\n    return node.segments.map(toString).join('');\n  } else {\n    return toString(node);\n  }\n};\n/**\n * Lookup JavaScript user-defined or built-in function.\n *\n * @param {String} name\n * @return {Function}\n * @api private\n */\n\n\nEvaluator.prototype.lookupFunction = function (name) {\n  var fn = this.functions[name] || bifs[name];\n  if (fn) return new nodes.Function(name, fn);\n};\n/**\n * Check if the given `node` is an ident, and if it is defined.\n *\n * @param {Node} node\n * @return {Boolean}\n * @api private\n */\n\n\nEvaluator.prototype.isDefined = function (node) {\n  if ('ident' == node.nodeName) {\n    return nodes.Boolean(this.lookup(node.name));\n  } else {\n    throw new Error('invalid \"is defined\" check on non-variable ' + node);\n  }\n};\n/**\n * Return `Expression` based on the given `prop`,\n * replacing cyclic calls to the given function `name`\n * with \"__CALL__\".\n *\n * @param {Property} prop\n * @param {String} name\n * @return {Expression}\n * @api private\n */\n\n\nEvaluator.prototype.propertyExpression = function (prop, name) {\n  var expr = new nodes.Expression(),\n      val = prop.expr.clone(); // name\n\n  expr.push(new nodes.String(prop.name)); // replace cyclic call with __CALL__\n\n  function replace(node) {\n    if ('call' == node.nodeName && name == node.name) {\n      return new nodes.Literal('__CALL__');\n    }\n\n    if (node.nodes) node.nodes = node.nodes.map(replace);\n    return node;\n  }\n\n  replace(val);\n  expr.push(val);\n  return expr;\n};\n/**\n * Cast `expr` to the trailing ident.\n *\n * @param {Expression} expr\n * @return {Unit}\n * @api private\n */\n\n\nEvaluator.prototype.cast = function (expr) {\n  return new nodes.Unit(expr.first.val, expr.nodes[1].name);\n};\n/**\n * Check if `expr` is castable.\n *\n * @param {Expression} expr\n * @return {Boolean}\n * @api private\n */\n\n\nEvaluator.prototype.castable = function (expr) {\n  return 2 == expr.nodes.length && 'unit' == expr.first.nodeName && ~units.indexOf(expr.nodes[1].name);\n};\n/**\n * Warn with the given `msg`.\n *\n * @param {String} msg\n * @api private\n */\n\n\nEvaluator.prototype.warn = function (msg) {\n  if (!this.warnings) return;\n  console.warn('\\u001b[33mWarning:\\u001b[0m ' + msg);\n};\n/**\n * Return the current `Block`.\n *\n * @return {Block}\n * @api private\n */\n\n\nEvaluator.prototype.__defineGetter__('currentBlock', function () {\n  return this.stack.currentFrame.block;\n});\n/**\n * Return an array of vendor names.\n *\n * @return {Array}\n * @api private\n */\n\n\nEvaluator.prototype.__defineGetter__('vendors', function () {\n  return this.lookup('vendors').nodes.map(function (node) {\n    return node.string;\n  });\n});\n/**\n * Return the property name without vendor prefix.\n *\n * @param {String} prop\n * @return {String}\n * @api public\n */\n\n\nEvaluator.prototype.unvendorize = function (prop) {\n  for (var i = 0, len = this.vendors.length; i < len; i++) {\n    if ('official' != this.vendors[i]) {\n      var vendor = '-' + this.vendors[i] + '-';\n      if (~prop.indexOf(vendor)) return prop.replace(vendor, '');\n    }\n  }\n\n  return prop;\n};\n/**\n * Return the current frame `Scope`.\n *\n * @return {Scope}\n * @api private\n */\n\n\nEvaluator.prototype.__defineGetter__('currentScope', function () {\n  return this.stack.currentFrame.scope;\n});\n/**\n * Return the current `Frame`.\n *\n * @return {Frame}\n * @api private\n */\n\n\nEvaluator.prototype.__defineGetter__('currentFrame', function () {\n  return this.stack.currentFrame;\n});","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/visitor/evaluator.js"],"names":["Visitor","require","units","nodes","Stack","Frame","utils","bifs","dirname","colors","debug","fs","importFile","node","file","literal","importStack","Parser","stat","once","requireHistory","null","includeCSS","indexOf","Error","str","readFileSync","trim","path","statSync","mtime","paths","push","options","_imports","clone","filename","Literal","replace","lineno","column","resolveURL","block","Block","parser","merge","root","parse","err","line","lexer","warn","input","currentBlock","parent","scope","ret","visit","pop","nocheck","Evaluator","module","exports","call","functions","stack","imports","globals","prefix","url","name","global","warnings","calling","return","prototype","__proto__","stylusStack","toString","setup","populateGlobalScope","forEach","expr","Expression","String","Import","concat","Object","keys","color","rgba","RGBA","Ident","add","Function","limit","val","nodeName","evaluate","visitGroup","group","map","selector","interpolate","visitReturn","visitMedia","media","visitQueryList","queries","query","length","lookup","type","first","string","visitQuery","predicate","visitFeature","visitObject","obj","key","vals","visitMember","left","right","set","get","visitKeyframes","keyframes","fabricated","vendors","visitFunction","fn","local","currentFrame","user","bif","visitEach","each","unwrap","len","currentScope","self","body","visitBody","prop","i","Unit","mixin","visitCall","ignoreColors","lookupFunction","unvendorize","args","literalCall","RangeError","invokeBuiltin","invokeFunction","visitIdent","ident","property","lookupProperty","isNull","mixinNode","visitBinOp","binop","op","isDefined","operate","false","true","visitUnaryOp","unary","assertType","toBoolean","negate","visitTernary","ternary","ok","cond","isTrue","trueExpr","falseExpr","visitExpression","castable","cast","visitArguments","visitProperty","_prop","Arguments","fromExpression","Call","visitRoot","constructor","index","visitBlock","visitAtblock","atblock","visitAtrule","atrule","visitSupports","condition","visitIf","hasMedia","isFalse","elses","postfix","visitExtend","extend","closestGroup","selectors","extends","optional","visitImport","imported","found","test","find","lookupIndex","content","mixinBlock","propertyExpression","params","rest","preserve","isList","arg","isEmpty","invoke","raw","reduce","param","shift","coerce","apply","eval","head","slice","tail","_mixin","items","dest","parentNode","mixinObject","object","toBlock","top","other","__defineGetter__","isSelector","prefixed","_selector","segments","join","Boolean","msg","console","vendor"],"mappings":"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","sourcesContent":["\n/*!\n * Stylus - Evaluator\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Visitor = require('./')\n  , units = require('../units')\n  , nodes = require('../nodes')\n  , Stack = require('../stack')\n  , Frame = require('../stack/frame')\n  , utils = require('../utils')\n  , bifs = require('../functions')\n  , dirname = require('path').dirname\n  , colors = require('../colors')\n  , debug = require('debug')('stylus:evaluator')\n  , fs = require('fs');\n\n/**\n * Import `file` and return Block node.\n *\n * @api private\n */\nfunction importFile(node, file, literal) {\n  var importStack = this.importStack\n    , Parser = require('../parser')\n    , stat;\n\n  // Handling the `require`\n  if (node.once) {\n    if (this.requireHistory[file]) return nodes.null;\n    this.requireHistory[file] = true;\n\n    if (literal && !this.includeCSS) {\n      return node;\n    }\n  }\n\n  // Avoid overflows from importing the same file over again\n  if (~importStack.indexOf(file))\n    throw new Error('import loop has been found');\n\n  var str = fs.readFileSync(file, 'utf8');\n\n  // shortcut for empty files\n  if (!str.trim()) return nodes.null;\n\n  // Expose imports\n  node.path = file;\n  node.dirname = dirname(file);\n  // Store the modified time\n  stat = fs.statSync(file);\n  node.mtime = stat.mtime;\n  this.paths.push(node.dirname);\n\n  if (this.options._imports) this.options._imports.push(node.clone());\n\n  // Parse the file\n  importStack.push(file);\n  nodes.filename = file;\n\n  if (literal) {\n    literal = new nodes.Literal(str.replace(/\\r\\n?/g, '\\n'));\n    literal.lineno = literal.column = 1;\n    if (!this.resolveURL) return literal;\n  }\n\n  // parse\n  var block = new nodes.Block\n    , parser = new Parser(str, utils.merge({ root: block }, this.options));\n\n  try {\n    block = parser.parse();\n  } catch (err) {\n    var line = parser.lexer.lineno\n      , column = parser.lexer.column;\n\n    if (literal && this.includeCSS && this.resolveURL) {\n      this.warn('ParseError: ' + file + ':' + line + ':' + column + '. This file included as-is');\n      return literal;\n    } else {\n      err.filename = file;\n      err.lineno = line;\n      err.column = column;\n      err.input = str;\n      throw err;\n    }\n  }\n\n  // Evaluate imported \"root\"\n  block = block.clone(this.currentBlock);\n  block.parent = this.currentBlock;\n  block.scope = false;\n  var ret = this.visit(block);\n  importStack.pop();\n  if (!this.resolveURL || this.resolveURL.nocheck) this.paths.pop();\n\n  return ret;\n}\n\n/**\n * Initialize a new `Evaluator` with the given `root` Node\n * and the following `options`.\n *\n * Options:\n *\n *   - `compress`  Compress the css output, defaults to false\n *   - `warn`  Warn the user of duplicate function definitions etc\n *\n * @param {Node} root\n * @api private\n */\n\nvar Evaluator = module.exports = function Evaluator(root, options) {\n  options = options || {};\n  Visitor.call(this, root);\n  var functions = this.functions = options.functions || {};\n  this.stack = new Stack;\n  this.imports = options.imports || [];\n  this.globals = options.globals || {};\n  this.paths = options.paths || [];\n  this.prefix = options.prefix || '';\n  this.filename = options.filename;\n  this.includeCSS = options['include css'];\n  this.resolveURL = functions.url\n    && 'resolver' == functions.url.name\n    && functions.url.options;\n  this.paths.push(dirname(options.filename || '.'));\n  this.stack.push(this.global = new Frame(root));\n  this.warnings = options.warn;\n  this.options = options;\n  this.calling = []; // TODO: remove, use stack\n  this.importStack = [];\n  this.requireHistory = {};\n  this.return = 0;\n};\n\n/**\n * Inherit from `Visitor.prototype`.\n */\n\nEvaluator.prototype.__proto__ = Visitor.prototype;\n\n/**\n * Proxy visit to expose node line numbers.\n *\n * @param {Node} node\n * @return {Node}\n * @api private\n */\n\nvar visit = Visitor.prototype.visit;\nEvaluator.prototype.visit = function(node){\n  try {\n    return visit.call(this, node);\n  } catch (err) {\n    if (err.filename) throw err;\n    err.lineno = node.lineno;\n    err.column = node.column;\n    err.filename = node.filename;\n    err.stylusStack = this.stack.toString();\n    try {\n      err.input = fs.readFileSync(err.filename, 'utf8');\n    } catch (err) {\n      // ignore\n    }\n    throw err;\n  }\n};\n\n/**\n * Perform evaluation setup:\n *\n *   - populate global scope\n *   - iterate imports\n *\n * @api private\n */\n\nEvaluator.prototype.setup = function(){\n  var root = this.root;\n  var imports = [];\n\n  this.populateGlobalScope();\n  this.imports.forEach(function(file){\n    var expr = new nodes.Expression;\n    expr.push(new nodes.String(file));\n    imports.push(new nodes.Import(expr));\n  }, this);\n\n  root.nodes = imports.concat(root.nodes);\n};\n\n/**\n * Populate the global scope with:\n *\n *   - css colors\n *   - user-defined globals\n *\n * @api private\n */\n\nEvaluator.prototype.populateGlobalScope = function(){\n  var scope = this.global.scope;\n\n  // colors\n  Object.keys(colors).forEach(function(name){\n    var color = colors[name]\n      , rgba = new nodes.RGBA(color[0], color[1], color[2], color[3])\n      , node = new nodes.Ident(name, rgba);\n    rgba.name = name;\n    scope.add(node);\n  });\n\n  // expose url function\n  scope.add(new nodes.Ident(\n    'embedurl',\n    new nodes.Function('embedurl', require('../functions/url')({\n      limit: false\n    }))\n  ));\n\n  // user-defined globals\n  var globals = this.globals;\n  Object.keys(globals).forEach(function(name){\n    var val = globals[name];\n    if (!val.nodeName) val = new nodes.Literal(val);\n    scope.add(new nodes.Ident(name, val));\n  });\n};\n\n/**\n * Evaluate the tree.\n *\n * @return {Node}\n * @api private\n */\n\nEvaluator.prototype.evaluate = function(){\n  debug('eval %s', this.filename);\n  this.setup();\n  return this.visit(this.root);\n};\n\n/**\n * Visit Group.\n */\n\nEvaluator.prototype.visitGroup = function(group){\n  group.nodes = group.nodes.map(function(selector){\n    selector.val = this.interpolate(selector);\n    debug('ruleset %s', selector.val);\n    return selector;\n  }, this);\n\n  group.block = this.visit(group.block);\n  return group;\n};\n\n/**\n * Visit Return.\n */\n\nEvaluator.prototype.visitReturn = function(ret){\n  ret.expr = this.visit(ret.expr);\n  throw ret;\n};\n\n/**\n * Visit Media.\n */\n\nEvaluator.prototype.visitMedia = function(media){\n  media.block = this.visit(media.block);\n  media.val = this.visit(media.val);\n  return media;\n};\n\n/**\n * Visit QueryList.\n */\n\nEvaluator.prototype.visitQueryList = function(queries){\n  var val, query;\n  queries.nodes.forEach(this.visit, this);\n\n  if (1 == queries.nodes.length) {\n    query = queries.nodes[0];\n    if (val = this.lookup(query.type)) {\n      val = val.first.string;\n      if (!val) return queries;\n      var Parser = require('../parser')\n        , parser = new Parser(val, this.options);\n      queries = this.visit(parser.queries());\n    }\n  }\n  return queries;\n};\n\n/**\n * Visit Query.\n */\n\nEvaluator.prototype.visitQuery = function(node){\n  node.predicate = this.visit(node.predicate);\n  node.type = this.visit(node.type);\n  node.nodes.forEach(this.visit, this);\n  return node;\n};\n\n/**\n * Visit Feature.\n */\n\nEvaluator.prototype.visitFeature = function(node){\n  node.name = this.interpolate(node);\n  if (node.expr) {\n    this.return++;\n    node.expr = this.visit(node.expr);\n    this.return--;\n  }\n  return node;\n};\n\n/**\n * Visit Object.\n */\n\nEvaluator.prototype.visitObject = function(obj){\n  for (var key in obj.vals) {\n    obj.vals[key] = this.visit(obj.vals[key]);\n  }\n  return obj;\n};\n\n/**\n * Visit Member.\n */\n\nEvaluator.prototype.visitMember = function(node){\n  var left = node.left\n    , right = node.right\n    , obj = this.visit(left).first;\n\n  if ('object' != obj.nodeName) {\n    throw new Error(left.toString() + ' has no property .' + right);\n  }\n  if (node.val) {\n    this.return++;\n    obj.set(right.name, this.visit(node.val));\n    this.return--;\n  }\n  return obj.get(right.name);\n};\n\n/**\n * Visit Keyframes.\n */\n\nEvaluator.prototype.visitKeyframes = function(keyframes){\n  var val;\n  if (keyframes.fabricated) return keyframes;\n  keyframes.val = this.interpolate(keyframes).trim();\n  if (val = this.lookup(keyframes.val)) {\n    keyframes.val = val.first.string || val.first.name;\n  }\n  keyframes.block = this.visit(keyframes.block);\n\n  if ('official' != keyframes.prefix) return keyframes;\n\n  this.vendors.forEach(function(prefix){\n    // IE never had prefixes for keyframes\n    if ('ms' == prefix) return;\n    var node = keyframes.clone();\n    node.val = keyframes.val;\n    node.prefix = prefix;\n    node.block = keyframes.block;\n    node.fabricated = true;\n    this.currentBlock.push(node);\n  }, this);\n\n  return nodes.null;\n};\n\n/**\n * Visit Function.\n */\n\nEvaluator.prototype.visitFunction = function(fn){\n  // check local\n  var local = this.stack.currentFrame.scope.lookup(fn.name);\n  if (local) this.warn('local ' + local.nodeName + ' \"' + fn.name + '\" previously defined in this scope');\n\n  // user-defined\n  var user = this.functions[fn.name];\n  if (user) this.warn('user-defined function \"' + fn.name + '\" is already defined');\n\n  // BIF\n  var bif = bifs[fn.name];\n  if (bif) this.warn('built-in function \"' + fn.name + '\" is already defined');\n\n  return fn;\n};\n\n/**\n * Visit Each.\n */\n\nEvaluator.prototype.visitEach = function(each){\n  this.return++;\n  var expr = utils.unwrap(this.visit(each.expr))\n    , len = expr.nodes.length\n    , val = new nodes.Ident(each.val)\n    , key = new nodes.Ident(each.key || '__index__')\n    , scope = this.currentScope\n    , block = this.currentBlock\n    , vals = []\n    , self = this\n    , body\n    , obj;\n  this.return--;\n\n  each.block.scope = false;\n\n  function visitBody(key, val) {\n    scope.add(val);\n    scope.add(key);\n    body = self.visit(each.block.clone());\n    vals = vals.concat(body.nodes);\n  }\n\n  // for prop in obj\n  if (1 == len && 'object' == expr.nodes[0].nodeName) {\n    obj = expr.nodes[0];\n    for (var prop in obj.vals) {\n      val.val = new nodes.String(prop);\n      key.val = obj.get(prop);\n      visitBody(key, val);\n    }\n  } else {\n    for (var i = 0; i < len; ++i) {\n      val.val = expr.nodes[i];\n      key.val = new nodes.Unit(i);\n      visitBody(key, val);\n    }\n  }\n\n  this.mixin(vals, block);\n  return vals[vals.length - 1] || nodes.null;\n};\n\n/**\n * Visit Call.\n */\n\nEvaluator.prototype.visitCall = function(call){\n  debug('call %s', call);\n  var fn = this.lookup(call.name)\n    , literal\n    , ret;\n\n  // url()\n  this.ignoreColors = 'url' == call.name;\n\n  // Variable function\n  if (fn && 'expression' == fn.nodeName) {\n    fn = fn.nodes[0];\n  }\n\n  // Not a function? try user-defined or built-ins\n  if (fn && 'function' != fn.nodeName) {\n    fn = this.lookupFunction(call.name);\n  }\n\n  // Undefined function? render literal CSS\n  if (!fn || fn.nodeName != 'function') {\n    debug('%s is undefined', call);\n    // Special case for `calc`\n    if ('calc' == this.unvendorize(call.name)) {\n      literal = call.args.nodes && call.args.nodes[0];\n      if (literal) ret = new nodes.Literal(call.name + literal);\n    } else {\n      ret = this.literalCall(call);\n    }\n    this.ignoreColors = false;\n    return ret;\n  }\n\n  this.calling.push(call.name);\n\n  // Massive stack\n  if (this.calling.length > 200) {\n    throw new RangeError('Maximum stylus call stack size exceeded');\n  }\n\n  // First node in expression\n  if ('expression' == fn.nodeName) fn = fn.first;\n\n  // Evaluate arguments\n  this.return++;\n  var args = this.visit(call.args);\n\n  for (var key in args.map) {\n    args.map[key] = this.visit(args.map[key].clone());\n  }\n  this.return--;\n\n  // Built-in\n  if (fn.fn) {\n    debug('%s is built-in', call);\n    ret = this.invokeBuiltin(fn.fn, args);\n  // User-defined\n  } else if ('function' == fn.nodeName) {\n    debug('%s is user-defined', call);\n    // Evaluate mixin block\n    if (call.block) call.block = this.visit(call.block);\n    ret = this.invokeFunction(fn, args, call.block);\n  }\n\n  this.calling.pop();\n  this.ignoreColors = false;\n  return ret;\n};\n\n/**\n * Visit Ident.\n */\n\nEvaluator.prototype.visitIdent = function(ident){\n  var prop;\n  // Property lookup\n  if (ident.property) {\n    if (prop = this.lookupProperty(ident.name)) {\n      return this.visit(prop.expr.clone());\n    }\n    return nodes.null;\n  // Lookup\n  } else if (ident.val.isNull) {\n    var val = this.lookup(ident.name);\n    // Object or Block mixin\n    if (val && ident.mixin) this.mixinNode(val);\n    return val ? this.visit(val) : ident;\n  // Assign\n  } else {\n    this.return++;\n    ident.val = this.visit(ident.val);\n    this.return--;\n    this.currentScope.add(ident);\n    return ident.val;\n  }\n};\n\n/**\n * Visit BinOp.\n */\n\nEvaluator.prototype.visitBinOp = function(binop){\n  // Special-case \"is defined\" pseudo binop\n  if ('is defined' == binop.op) return this.isDefined(binop.left);\n\n  this.return++;\n  // Visit operands\n  var op = binop.op\n    , left = this.visit(binop.left)\n    , right = ('||' == op || '&&' == op)\n      ? binop.right : this.visit(binop.right);\n\n  // HACK: ternary\n  var val = binop.val\n    ? this.visit(binop.val)\n    : null;\n  this.return--;\n\n  // Operate\n  try {\n    return this.visit(left.operate(op, right, val));\n  } catch (err) {\n    // disregard coercion issues in equality\n    // checks, and simply return false\n    if ('CoercionError' == err.name) {\n      switch (op) {\n        case '==':\n          return nodes.false;\n        case '!=':\n          return nodes.true;\n      }\n    }\n    throw err;\n  }\n};\n\n/**\n * Visit UnaryOp.\n */\n\nEvaluator.prototype.visitUnaryOp = function(unary){\n  var op = unary.op\n    , node = this.visit(unary.expr);\n\n  if ('!' != op) {\n    node = node.first.clone();\n    utils.assertType(node, 'unit');\n  }\n\n  switch (op) {\n    case '-':\n      node.val = -node.val;\n      break;\n    case '+':\n      node.val = +node.val;\n      break;\n    case '~':\n      node.val = ~node.val;\n      break;\n    case '!':\n      return node.toBoolean().negate();\n  }\n\n  return node;\n};\n\n/**\n * Visit TernaryOp.\n */\n\nEvaluator.prototype.visitTernary = function(ternary){\n  var ok = this.visit(ternary.cond).toBoolean();\n  return ok.isTrue\n    ? this.visit(ternary.trueExpr)\n    : this.visit(ternary.falseExpr);\n};\n\n/**\n * Visit Expression.\n */\n\nEvaluator.prototype.visitExpression = function(expr){\n  for (var i = 0, len = expr.nodes.length; i < len; ++i) {\n    expr.nodes[i] = this.visit(expr.nodes[i]);\n  }\n\n  // support (n * 5)px etc\n  if (this.castable(expr)) expr = this.cast(expr);\n\n  return expr;\n};\n\n/**\n * Visit Arguments.\n */\n\nEvaluator.prototype.visitArguments = Evaluator.prototype.visitExpression;\n\n/**\n * Visit Property.\n */\n\nEvaluator.prototype.visitProperty = function(prop){\n  var name = this.interpolate(prop)\n    , fn = this.lookup(name)\n    , call = fn && 'function' == fn.first.nodeName\n    , literal = ~this.calling.indexOf(name)\n    , _prop = this.property;\n\n  // Function of the same name\n  if (call && !literal && !prop.literal) {\n    var args = nodes.Arguments.fromExpression(utils.unwrap(prop.expr.clone()));\n    prop.name = name;\n    this.property = prop;\n    this.return++;\n    this.property.expr = this.visit(prop.expr);\n    this.return--;\n    var ret = this.visit(new nodes.Call(name, args));\n    this.property = _prop;\n    return ret;\n  // Regular property\n  } else {\n    this.return++;\n    prop.name = name;\n    prop.literal = true;\n    this.property = prop;\n    prop.expr = this.visit(prop.expr);\n    this.property = _prop;\n    this.return--;\n    return prop;\n  }\n};\n\n/**\n * Visit Root.\n */\n\nEvaluator.prototype.visitRoot = function(block){\n  // normalize cached imports\n  if (block != this.root) {\n    block.constructor = nodes.Block;\n    return this.visit(block);\n  }\n\n  for (var i = 0; i < block.nodes.length; ++i) {\n    block.index = i;\n    block.nodes[i] = this.visit(block.nodes[i]);\n  }\n  return block;\n};\n\n/**\n * Visit Block.\n */\n\nEvaluator.prototype.visitBlock = function(block){\n  this.stack.push(new Frame(block));\n  for (block.index = 0; block.index < block.nodes.length; ++block.index) {\n    try {\n      block.nodes[block.index] = this.visit(block.nodes[block.index]);\n    } catch (err) {\n      if ('return' == err.nodeName) {\n        if (this.return) {\n          this.stack.pop();\n          throw err;\n        } else {\n          block.nodes[block.index] = err;\n          break;\n        }\n      } else {\n        throw err;\n      }\n    }\n  }\n  this.stack.pop();\n  return block;\n};\n\n/**\n * Visit Atblock.\n */\n\nEvaluator.prototype.visitAtblock = function(atblock){\n  atblock.block = this.visit(atblock.block);\n  return atblock;\n};\n\n/**\n * Visit Atrule.\n */\n\nEvaluator.prototype.visitAtrule = function(atrule){\n  atrule.val = this.interpolate(atrule);\n  if (atrule.block) atrule.block = this.visit(atrule.block);\n  return atrule;\n};\n\n/**\n * Visit Supports.\n */\n\nEvaluator.prototype.visitSupports = function(node){\n  var condition = node.condition\n    , val;\n\n  this.return++;\n  node.condition = this.visit(condition);\n  this.return--;\n\n  val = condition.first;\n  if (1 == condition.nodes.length\n    && 'string' == val.nodeName) {\n    node.condition = val.string;\n  }\n  node.block = this.visit(node.block);\n  return node;\n};\n\n/**\n * Visit If.\n */\n\nEvaluator.prototype.visitIf = function(node){\n  var ret\n    , block = this.currentBlock\n    , negate = node.negate;\n\n  this.return++;\n  var ok = this.visit(node.cond).first.toBoolean();\n  this.return--;\n\n  node.block.scope = node.block.hasMedia;\n\n  // Evaluate body\n  if (negate) {\n    // unless\n    if (ok.isFalse) {\n      ret = this.visit(node.block);\n    }\n  } else {\n    // if\n    if (ok.isTrue) {\n      ret = this.visit(node.block);\n    // else\n    } else if (node.elses.length) {\n      var elses = node.elses\n        , len = elses.length\n        , cond;\n      for (var i = 0; i < len; ++i) {\n        // else if\n        if (elses[i].cond) {\n          elses[i].block.scope = elses[i].block.hasMedia;\n          this.return++;\n          cond = this.visit(elses[i].cond).first.toBoolean();\n          this.return--;\n          if (cond.isTrue) {\n            ret = this.visit(elses[i].block);\n            break;\n          }\n        // else\n        } else {\n          elses[i].scope = elses[i].hasMedia;\n          ret = this.visit(elses[i]);\n        }\n      }\n    }\n  }\n\n  // mixin conditional statements within\n  // a selector group or at-rule\n  if (ret && !node.postfix && block.node\n    && ~['group'\n       , 'atrule'\n       , 'media'\n       , 'supports'\n       , 'keyframes'].indexOf(block.node.nodeName)) {\n    this.mixin(ret.nodes, block);\n    return nodes.null;\n  }\n\n  return ret || nodes.null;\n};\n\n/**\n * Visit Extend.\n */\n\nEvaluator.prototype.visitExtend = function(extend){\n  var block = this.currentBlock;\n  if ('group' != block.node.nodeName) block = this.closestGroup;\n  extend.selectors.forEach(function(selector){\n    block.node.extends.push({\n      // Cloning the selector for when we are in a loop and don't want it to affect\n      // the selector nodes and cause the values to be different to expected\n      selector: this.interpolate(selector.clone()).trim(),\n      optional: selector.optional,\n      lineno: selector.lineno,\n      column: selector.column\n    });\n  }, this);\n  return nodes.null;\n};\n\n/**\n * Visit Import.\n */\n\nEvaluator.prototype.visitImport = function(imported){\n  this.return++;\n\n  var path = this.visit(imported.path).first\n    , nodeName = imported.once ? 'require' : 'import'\n    , found\n    , literal;\n\n  this.return--;\n  debug('import %s', path);\n\n  // url() passed\n  if ('url' == path.name) {\n    if (imported.once) throw new Error('You cannot @require a url');\n\n    return imported;\n  }\n\n  // Ensure string\n  if (!path.string) throw new Error('@' + nodeName + ' string expected');\n\n  var name = path = path.string;\n\n  // Absolute URL or hash\n  if (/(?:url\\s*\\(\\s*)?['\"]?(?:#|(?:https?:)?\\/\\/)/i.test(path)) {\n    if (imported.once) throw new Error('You cannot @require a url');\n    return imported;\n  }\n\n  // Literal\n  if (/\\.css(?:\"|$)/.test(path)) {\n    literal = true;\n    if (!imported.once && !this.includeCSS) {\n      return imported;\n    }\n  }\n\n  // support optional .styl\n  if (!literal && !/\\.styl$/i.test(path)) path += '.styl';\n\n  // Lookup\n  found = utils.find(path, this.paths, this.filename);\n  if (!found) {\n    found = utils.lookupIndex(name, this.paths, this.filename);\n  }\n\n  // Throw if import failed\n  if (!found) throw new Error('failed to locate @' + nodeName + ' file ' + path);\n  \n  var block = new nodes.Block;\n\n  for (var i = 0, len = found.length; i < len; ++i) {\n    block.push(importFile.call(this, imported, found[i], literal));\n  }\n\n  return block;\n};\n\n/**\n * Invoke `fn` with `args`.\n *\n * @param {Function} fn\n * @param {Array} args\n * @return {Node}\n * @api private\n */\n\nEvaluator.prototype.invokeFunction = function(fn, args, content){\n  var block = new nodes.Block(fn.block.parent);\n\n  // Clone the function body\n  // to prevent mutation of subsequent calls\n  var body = fn.block.clone(block);\n\n  // mixin block\n  var mixinBlock = this.stack.currentFrame.block;\n\n  // new block scope\n  this.stack.push(new Frame(block));\n  var scope = this.currentScope;\n\n  // normalize arguments\n  if ('arguments' != args.nodeName) {\n    var expr = new nodes.Expression;\n    expr.push(args);\n    args = nodes.Arguments.fromExpression(expr);\n  }\n\n  // arguments local\n  scope.add(new nodes.Ident('arguments', args));\n\n  // mixin scope introspection\n  scope.add(new nodes.Ident('mixin', this.return\n    ? nodes.false\n    : new nodes.String(mixinBlock.nodeName)));\n\n  // current property\n  if (this.property) {\n    var prop = this.propertyExpression(this.property, fn.name);\n    scope.add(new nodes.Ident('current-property', prop));\n  } else {\n    scope.add(new nodes.Ident('current-property', nodes.null));\n  }\n\n  // current call stack\n  var expr = new nodes.Expression;\n  for (var i = this.calling.length - 1; i-- ; ) {\n    expr.push(new nodes.Literal(this.calling[i]));\n  };\n  scope.add(new nodes.Ident('called-from', expr));\n\n  // inject arguments as locals\n  var i = 0\n    , len = args.nodes.length;\n  fn.params.nodes.forEach(function(node){\n    // rest param support\n    if (node.rest) {\n      node.val = new nodes.Expression;\n      for (; i < len; ++i) node.val.push(args.nodes[i]);\n      node.val.preserve = true;\n      node.val.isList = args.isList;\n    // argument default support\n    } else {\n      var arg = args.map[node.name] || args.nodes[i++];\n      node = node.clone();\n      if (arg) {\n        arg.isEmpty ? args.nodes[i - 1] = this.visit(node) : node.val = arg;\n      } else {\n        args.push(node.val);\n      }\n\n      // required argument not satisfied\n      if (node.val.isNull) {\n        throw new Error('argument \"' + node + '\" required for ' + fn);\n      }\n    }\n\n    scope.add(node);\n  }, this);\n\n  // mixin block\n  if (content) scope.add(new nodes.Ident('block', content, true));\n\n  // invoke\n  return this.invoke(body, true, fn.filename);\n};\n\n/**\n * Invoke built-in `fn` with `args`.\n *\n * @param {Function} fn\n * @param {Array} args\n * @return {Node}\n * @api private\n */\n\nEvaluator.prototype.invokeBuiltin = function(fn, args){\n  // Map arguments to first node\n  // providing a nicer js api for\n  // BIFs. Functions may specify that\n  // they wish to accept full expressions\n  // via .raw\n  if (fn.raw) {\n    args = args.nodes;\n  } else {\n    if (!fn.params) {\n      fn.params = utils.params(fn);\n    }\n    args = fn.params.reduce(function(ret, param){\n      var arg = args.map[param] || args.nodes.shift()\n      if (arg) {\n        arg = utils.unwrap(arg);\n        var len = arg.nodes.length;\n        if (len > 1) {\n          for (var i = 0; i < len; ++i) {\n            ret.push(utils.unwrap(arg.nodes[i].first));\n          }\n        } else {\n          ret.push(arg.first);\n        }\n      }\n      return ret;\n    }, []);\n  }\n\n  // Invoke the BIF\n  var body = utils.coerce(fn.apply(this, args));\n\n  // Always wrapping allows js functions\n  // to return several values with a single\n  // Expression node\n  var expr = new nodes.Expression;\n  expr.push(body);\n  body = expr;\n\n  // Invoke\n  return this.invoke(body);\n};\n\n/**\n * Invoke the given function `body`.\n *\n * @param {Block} body\n * @return {Node}\n * @api private\n */\n\nEvaluator.prototype.invoke = function(body, stack, filename){\n  var self = this\n    , ret;\n\n  if (filename) this.paths.push(dirname(filename));\n\n  // Return\n  if (this.return) {\n    ret = this.eval(body.nodes);\n    if (stack) this.stack.pop();\n  // Mixin\n  } else {\n    body = this.visit(body);\n    if (stack) this.stack.pop();\n    this.mixin(body.nodes, this.currentBlock);\n    ret = nodes.null;\n  }\n\n  if (filename) this.paths.pop();\n\n  return ret;\n};\n\n/**\n * Mixin the given `nodes` to the given `block`.\n *\n * @param {Array} nodes\n * @param {Block} block\n * @api private\n */\n\nEvaluator.prototype.mixin = function(nodes, block){\n  if (!nodes.length) return;\n  var len = block.nodes.length\n    , head = block.nodes.slice(0, block.index)\n    , tail = block.nodes.slice(block.index + 1, len);\n  this._mixin(nodes, head, block);\n  block.index = 0;\n  block.nodes = head.concat(tail);\n};\n\n/**\n * Mixin the given `items` to the `dest` array.\n *\n * @param {Array} items\n * @param {Array} dest\n * @param {Block} block\n * @api private\n */\n\nEvaluator.prototype._mixin = function(items, dest, block){\n  var node\n    , len = items.length;\n  for (var i = 0; i < len; ++i) {\n    switch ((node = items[i]).nodeName) {\n      case 'return':\n        return;\n      case 'block':\n        this._mixin(node.nodes, dest, block);\n        break;\n      case 'media':\n        // fix link to the parent block\n        var parentNode = node.block.parent.node;\n        if (parentNode && 'call' != parentNode.nodeName) {\n          node.block.parent = block;\n        }\n      case 'property':\n        var val = node.expr;\n        // prevent `block` mixin recursion\n        if (node.literal && 'block' == val.first.name) {\n          val = utils.unwrap(val);\n          val.nodes[0] = new nodes.Literal('block');\n        }\n      default:\n        dest.push(node);\n    }\n  }\n};\n\n/**\n * Mixin the given `node` to the current block.\n *\n * @param {Node} node\n * @api private\n */\n\nEvaluator.prototype.mixinNode = function(node){\n  node = this.visit(node.first);\n  switch (node.nodeName) {\n    case 'object':\n      this.mixinObject(node);\n      return nodes.null;\n    case 'block':\n    case 'atblock':\n      this.mixin(node.nodes, this.currentBlock);\n      return nodes.null;\n  }\n};\n\n/**\n * Mixin the given `object` to the current block.\n *\n * @param {Object} object\n * @api private\n */\n\nEvaluator.prototype.mixinObject = function(object){\n  var Parser = require('../parser')\n    , root = this.root\n    , str = '$block ' + object.toBlock()\n    , parser = new Parser(str, utils.merge({ root: block }, this.options))\n    , block;\n\n  try {\n    block = parser.parse();\n  } catch (err) {\n    err.filename = this.filename;\n    err.lineno = parser.lexer.lineno;\n    err.column = parser.lexer.column;\n    err.input = str;\n    throw err;\n  }\n\n  block.parent = root;\n  block.scope = false;\n  var ret = this.visit(block)\n    , vals = ret.first.nodes;\n  for (var i = 0, len = vals.length; i < len; ++i) {\n    if (vals[i].block) {\n      this.mixin(vals[i].block.nodes, this.currentBlock);\n      break;\n    }\n  }\n};\n\n/**\n * Evaluate the given `vals`.\n *\n * @param {Array} vals\n * @return {Node}\n * @api private\n */\n\nEvaluator.prototype.eval = function(vals){\n  if (!vals) return nodes.null;\n  var len = vals.length\n    , node = nodes.null;\n\n  try {\n    for (var i = 0; i < len; ++i) {\n      node = vals[i];\n      switch (node.nodeName) {\n        case 'if':\n          if ('block' != node.block.nodeName) {\n            node = this.visit(node);\n            break;\n          }\n        case 'each':\n        case 'block':\n          node = this.visit(node);\n          if (node.nodes) node = this.eval(node.nodes);\n          break;\n        default:\n          node = this.visit(node);\n      }\n    }\n  } catch (err) {\n    if ('return' == err.nodeName) {\n      return err.expr;\n    } else {\n      throw err;\n    }\n  }\n\n  return node;\n};\n\n/**\n * Literal function `call`.\n *\n * @param {Call} call\n * @return {call}\n * @api private\n */\n\nEvaluator.prototype.literalCall = function(call){\n  call.args = this.visit(call.args);\n  return call;\n};\n\n/**\n * Lookup property `name`.\n *\n * @param {String} name\n * @return {Property}\n * @api private\n */\n\nEvaluator.prototype.lookupProperty = function(name){\n  var i = this.stack.length\n    , index = this.currentBlock.index\n    , top = i\n    , nodes\n    , block\n    , len\n    , other;\n\n  while (i--) {\n    block = this.stack[i].block;\n    if (!block.node) continue;\n    switch (block.node.nodeName) {\n      case 'group':\n      case 'function':\n      case 'if':\n      case 'each':\n      case 'atrule':\n      case 'media':\n      case 'atblock':\n      case 'call':\n        nodes = block.nodes;\n        // scan siblings from the property index up\n        if (i + 1 == top) {\n          while (index--) {\n            // ignore current property\n            if (this.property == nodes[index]) continue;\n            other = this.interpolate(nodes[index]);\n            if (name == other) return nodes[index].clone();\n          }\n        // sequential lookup for non-siblings (for now)\n        } else {\n          len = nodes.length;\n          while (len--) {\n            if ('property' != nodes[len].nodeName\n              || this.property == nodes[len]) continue;\n            other = this.interpolate(nodes[len]);\n            if (name == other) return nodes[len].clone();\n          }\n        }\n        break;\n    }\n  }\n\n  return nodes.null;\n};\n\n/**\n * Return the closest mixin-able `Block`.\n *\n * @return {Block}\n * @api private\n */\n\nEvaluator.prototype.__defineGetter__('closestBlock', function(){\n  var i = this.stack.length\n    , block;\n  while (i--) {\n    block = this.stack[i].block;\n    if (block.node) {\n      switch (block.node.nodeName) {\n        case 'group':\n        case 'keyframes':\n        case 'atrule':\n        case 'atblock':\n        case 'media':\n        case 'call':\n          return block;\n      }\n    }\n  }\n});\n\n/**\n * Return the closest group block.\n *\n * @return {Block}\n * @api private\n */\n\nEvaluator.prototype.__defineGetter__('closestGroup', function(){\n  var i = this.stack.length\n    , block;\n  while (i--) {\n    block = this.stack[i].block;\n    if (block.node && 'group' == block.node.nodeName) {\n      return block;\n    }\n  }\n});\n\n/**\n * Return the current selectors stack.\n *\n * @return {Array}\n * @api private\n */\n\nEvaluator.prototype.__defineGetter__('selectorStack', function(){\n  var block\n    , stack = [];\n  for (var i = 0, len = this.stack.length; i < len; ++i) {\n    block = this.stack[i].block;\n    if (block.node && 'group' == block.node.nodeName) {\n      block.node.nodes.forEach(function(selector) {\n        if (!selector.val) selector.val = this.interpolate(selector);\n      }, this);\n      stack.push(block.node.nodes);\n    }\n  }\n  return stack;\n});\n\n/**\n * Lookup `name`, with support for JavaScript\n * functions, and BIFs.\n *\n * @param {String} name\n * @return {Node}\n * @api private\n */\n\nEvaluator.prototype.lookup = function(name){\n  var val;\n  if (this.ignoreColors && name in colors) return;\n  if (val = this.stack.lookup(name)) {\n    return utils.unwrap(val);\n  } else {\n    return this.lookupFunction(name);\n  }\n};\n\n/**\n * Map segments in `node` returning a string.\n *\n * @param {Node} node\n * @return {String}\n * @api private\n */\n\nEvaluator.prototype.interpolate = function(node){\n  var self = this\n    , isSelector = ('selector' == node.nodeName);\n  function toString(node) {\n    switch (node.nodeName) {\n      case 'function':\n      case 'ident':\n        return node.name;\n      case 'literal':\n      case 'string':\n        if (self.prefix && !node.prefixed && !node.val.nodeName) {\n          node.val = node.val.replace(/\\.(?=[\\w-])|^\\.$/g, '.' + self.prefix);\n          node.prefixed = true;\n        }\n        return node.val;\n      case 'unit':\n        // Interpolation inside keyframes\n        return '%' == node.type ? node.val + '%' : node.val;\n      case 'member':\n        return toString(self.visit(node));\n      case 'expression':\n        // Prevent cyclic `selector()` calls.\n        if (self.calling && ~self.calling.indexOf('selector') && self._selector) return self._selector;\n        self.return++;\n        var ret = toString(self.visit(node).first);\n        self.return--;\n        if (isSelector) self._selector = ret;\n        return ret;\n    }\n  }\n\n  if (node.segments) {\n    return node.segments.map(toString).join('');\n  } else {\n    return toString(node);\n  }\n};\n\n/**\n * Lookup JavaScript user-defined or built-in function.\n *\n * @param {String} name\n * @return {Function}\n * @api private\n */\n\nEvaluator.prototype.lookupFunction = function(name){\n  var fn = this.functions[name] || bifs[name];\n  if (fn) return new nodes.Function(name, fn);\n};\n\n/**\n * Check if the given `node` is an ident, and if it is defined.\n *\n * @param {Node} node\n * @return {Boolean}\n * @api private\n */\n\nEvaluator.prototype.isDefined = function(node){\n  if ('ident' == node.nodeName) {\n    return nodes.Boolean(this.lookup(node.name));\n  } else {\n    throw new Error('invalid \"is defined\" check on non-variable ' + node);\n  }\n};\n\n/**\n * Return `Expression` based on the given `prop`,\n * replacing cyclic calls to the given function `name`\n * with \"__CALL__\".\n *\n * @param {Property} prop\n * @param {String} name\n * @return {Expression}\n * @api private\n */\n\nEvaluator.prototype.propertyExpression = function(prop, name){\n  var expr = new nodes.Expression\n    , val = prop.expr.clone();\n\n  // name\n  expr.push(new nodes.String(prop.name));\n\n  // replace cyclic call with __CALL__\n  function replace(node) {\n    if ('call' == node.nodeName && name == node.name) {\n      return new nodes.Literal('__CALL__');\n    }\n\n    if (node.nodes) node.nodes = node.nodes.map(replace);\n    return node;\n  }\n\n  replace(val);\n  expr.push(val);\n  return expr;\n};\n\n/**\n * Cast `expr` to the trailing ident.\n *\n * @param {Expression} expr\n * @return {Unit}\n * @api private\n */\n\nEvaluator.prototype.cast = function(expr){\n  return new nodes.Unit(expr.first.val, expr.nodes[1].name);\n};\n\n/**\n * Check if `expr` is castable.\n *\n * @param {Expression} expr\n * @return {Boolean}\n * @api private\n */\n\nEvaluator.prototype.castable = function(expr){\n  return 2 == expr.nodes.length\n    && 'unit' == expr.first.nodeName\n    && ~units.indexOf(expr.nodes[1].name);\n};\n\n/**\n * Warn with the given `msg`.\n *\n * @param {String} msg\n * @api private\n */\n\nEvaluator.prototype.warn = function(msg){\n  if (!this.warnings) return;\n  console.warn('\\u001b[33mWarning:\\u001b[0m ' + msg);\n};\n\n/**\n * Return the current `Block`.\n *\n * @return {Block}\n * @api private\n */\n\nEvaluator.prototype.__defineGetter__('currentBlock', function(){\n  return this.stack.currentFrame.block;\n});\n\n/**\n * Return an array of vendor names.\n *\n * @return {Array}\n * @api private\n */\n\nEvaluator.prototype.__defineGetter__('vendors', function(){\n  return this.lookup('vendors').nodes.map(function(node){\n    return node.string;\n  });\n});\n\n/**\n * Return the property name without vendor prefix.\n *\n * @param {String} prop\n * @return {String}\n * @api public\n */\n\nEvaluator.prototype.unvendorize = function(prop){\n  for (var i = 0, len = this.vendors.length; i < len; i++) {\n    if ('official' != this.vendors[i]) {\n      var vendor = '-' + this.vendors[i] + '-';\n      if (~prop.indexOf(vendor)) return prop.replace(vendor, '');\n    }\n  }\n  return prop;\n};\n\n/**\n * Return the current frame `Scope`.\n *\n * @return {Scope}\n * @api private\n */\n\nEvaluator.prototype.__defineGetter__('currentScope', function(){\n  return this.stack.currentFrame.scope;\n});\n\n/**\n * Return the current `Frame`.\n *\n * @return {Frame}\n * @api private\n */\n\nEvaluator.prototype.__defineGetter__('currentFrame', function(){\n  return this.stack.currentFrame;\n});\n"]},"metadata":{},"sourceType":"script"}