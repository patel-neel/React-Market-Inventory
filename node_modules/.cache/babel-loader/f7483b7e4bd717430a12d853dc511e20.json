{"ast":null,"code":"var utils = require('../utils'),\n    nodes = require('../nodes');\n/**\n * Return the opposites of the given `positions`.\n *\n * Examples:\n *\n *    opposite-position(top left)\n *    // => bottom right\n *\n * @param {Expression} positions\n * @return {Expression}\n * @api public\n */\n\n\n(module.exports = function oppositePosition(positions) {\n  var expr = [];\n  utils.unwrap(positions).nodes.forEach(function (pos, i) {\n    utils.assertString(pos, 'position ' + i);\n\n    pos = function () {\n      switch (pos.string) {\n        case 'top':\n          return 'bottom';\n\n        case 'bottom':\n          return 'top';\n\n        case 'left':\n          return 'right';\n\n        case 'right':\n          return 'left';\n\n        case 'center':\n          return 'center';\n\n        default:\n          throw new Error('invalid position ' + pos);\n      }\n    }();\n\n    expr.push(new nodes.Literal(pos));\n  });\n  return expr;\n}).raw = true;","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/functions/opposite-position.js"],"names":["utils","require","nodes","module","exports","oppositePosition","positions","expr","unwrap","forEach","pos","i","assertString","string","Error","push","Literal","raw"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAAnB;AAAA,IACIC,KAAK,GAAGD,OAAO,CAAC,UAAD,CADnB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,CAACE,MAAM,CAACC,OAAP,GAAiB,SAASC,gBAAT,CAA0BC,SAA1B,EAAoC;AACpD,MAAIC,IAAI,GAAG,EAAX;AACAP,EAAAA,KAAK,CAACQ,MAAN,CAAaF,SAAb,EAAwBJ,KAAxB,CAA8BO,OAA9B,CAAsC,UAASC,GAAT,EAAcC,CAAd,EAAgB;AACpDX,IAAAA,KAAK,CAACY,YAAN,CAAmBF,GAAnB,EAAwB,cAAcC,CAAtC;;AACAD,IAAAA,GAAG,GAAI,YAAU;AAAE,cAAQA,GAAG,CAACG,MAAZ;AACjB,aAAK,KAAL;AAAY,iBAAO,QAAP;;AACZ,aAAK,QAAL;AAAe,iBAAO,KAAP;;AACf,aAAK,MAAL;AAAa,iBAAO,OAAP;;AACb,aAAK,OAAL;AAAc,iBAAO,MAAP;;AACd,aAAK,QAAL;AAAe,iBAAO,QAAP;;AACf;AAAS,gBAAM,IAAIC,KAAJ,CAAU,sBAAsBJ,GAAhC,CAAN;AANQ;AAOjB,KAPI,EAAN;;AAQAH,IAAAA,IAAI,CAACQ,IAAL,CAAU,IAAIb,KAAK,CAACc,OAAV,CAAkBN,GAAlB,CAAV;AACD,GAXD;AAYA,SAAOH,IAAP;AACD,CAfD,EAeGU,GAfH,GAeS,IAfT","sourcesContent":["var utils = require('../utils')\n  , nodes = require('../nodes');\n\n/**\n * Return the opposites of the given `positions`.\n *\n * Examples:\n *\n *    opposite-position(top left)\n *    // => bottom right\n *\n * @param {Expression} positions\n * @return {Expression}\n * @api public\n */\n\n(module.exports = function oppositePosition(positions){\n  var expr = [];\n  utils.unwrap(positions).nodes.forEach(function(pos, i){\n    utils.assertString(pos, 'position ' + i);\n    pos = (function(){ switch (pos.string) {\n      case 'top': return 'bottom';\n      case 'bottom': return 'top';\n      case 'left': return 'right';\n      case 'right': return 'left';\n      case 'center': return 'center';\n      default: throw new Error('invalid position ' + pos);\n    }})();\n    expr.push(new nodes.Literal(pos));\n  });\n  return expr;\n}).raw = true;\n"]},"metadata":{},"sourceType":"script"}