{"ast":null,"code":"/*!\n * Stylus - Ternary\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nvar Node = require('./node');\n/**\n * Initialize a new `Ternary` with `cond`, `trueExpr` and `falseExpr`.\n *\n * @param {Expression} cond\n * @param {Expression} trueExpr\n * @param {Expression} falseExpr\n * @api public\n */\n\n\nvar Ternary = module.exports = function Ternary(cond, trueExpr, falseExpr) {\n  Node.call(this);\n  this.cond = cond;\n  this.trueExpr = trueExpr;\n  this.falseExpr = falseExpr;\n};\n/**\n * Inherit from `Node.prototype`.\n */\n\n\nTernary.prototype.__proto__ = Node.prototype;\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nTernary.prototype.clone = function (parent) {\n  var clone = new Ternary();\n  clone.cond = this.cond.clone(parent, clone);\n  clone.trueExpr = this.trueExpr.clone(parent, clone);\n  clone.falseExpr = this.falseExpr.clone(parent, clone);\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  return clone;\n};\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\n\nTernary.prototype.toJSON = function () {\n  return {\n    __type: 'Ternary',\n    cond: this.cond,\n    trueExpr: this.trueExpr,\n    falseExpr: this.falseExpr,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/nodes/ternary.js"],"names":["Node","require","Ternary","module","exports","cond","trueExpr","falseExpr","call","prototype","__proto__","clone","parent","lineno","column","filename","toJSON","__type"],"mappings":"AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIC,OAAO,GAAGC,MAAM,CAACC,OAAP,GAAiB,SAASF,OAAT,CAAiBG,IAAjB,EAAuBC,QAAvB,EAAiCC,SAAjC,EAA2C;AACxEP,EAAAA,IAAI,CAACQ,IAAL,CAAU,IAAV;AACA,OAAKH,IAAL,GAAYA,IAAZ;AACA,OAAKC,QAAL,GAAgBA,QAAhB;AACA,OAAKC,SAAL,GAAiBA,SAAjB;AACD,CALD;AAOA;AACA;AACA;;;AAEAL,OAAO,CAACO,SAAR,CAAkBC,SAAlB,GAA8BV,IAAI,CAACS,SAAnC;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAP,OAAO,CAACO,SAAR,CAAkBE,KAAlB,GAA0B,UAASC,MAAT,EAAgB;AACxC,MAAID,KAAK,GAAG,IAAIT,OAAJ,EAAZ;AACAS,EAAAA,KAAK,CAACN,IAAN,GAAa,KAAKA,IAAL,CAAUM,KAAV,CAAgBC,MAAhB,EAAwBD,KAAxB,CAAb;AACAA,EAAAA,KAAK,CAACL,QAAN,GAAiB,KAAKA,QAAL,CAAcK,KAAd,CAAoBC,MAApB,EAA4BD,KAA5B,CAAjB;AACAA,EAAAA,KAAK,CAACJ,SAAN,GAAkB,KAAKA,SAAL,CAAeI,KAAf,CAAqBC,MAArB,EAA6BD,KAA7B,CAAlB;AACAA,EAAAA,KAAK,CAACE,MAAN,GAAe,KAAKA,MAApB;AACAF,EAAAA,KAAK,CAACG,MAAN,GAAe,KAAKA,MAApB;AACAH,EAAAA,KAAK,CAACI,QAAN,GAAiB,KAAKA,QAAtB;AACA,SAAOJ,KAAP;AACD,CATD;AAWA;AACA;AACA;AACA;AACA;AACA;;;AAEAT,OAAO,CAACO,SAAR,CAAkBO,MAAlB,GAA2B,YAAU;AACnC,SAAO;AACLC,IAAAA,MAAM,EAAE,SADH;AAELZ,IAAAA,IAAI,EAAE,KAAKA,IAFN;AAGLC,IAAAA,QAAQ,EAAE,KAAKA,QAHV;AAILC,IAAAA,SAAS,EAAE,KAAKA,SAJX;AAKLM,IAAAA,MAAM,EAAE,KAAKA,MALR;AAMLC,IAAAA,MAAM,EAAE,KAAKA,MANR;AAOLC,IAAAA,QAAQ,EAAE,KAAKA;AAPV,GAAP;AASD,CAVD","sourcesContent":["\n/*!\n * Stylus - Ternary\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node');\n\n/**\n * Initialize a new `Ternary` with `cond`, `trueExpr` and `falseExpr`.\n *\n * @param {Expression} cond\n * @param {Expression} trueExpr\n * @param {Expression} falseExpr\n * @api public\n */\n\nvar Ternary = module.exports = function Ternary(cond, trueExpr, falseExpr){\n  Node.call(this);\n  this.cond = cond;\n  this.trueExpr = trueExpr;\n  this.falseExpr = falseExpr;\n};\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nTernary.prototype.__proto__ = Node.prototype;\n\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nTernary.prototype.clone = function(parent){\n  var clone = new Ternary();\n  clone.cond = this.cond.clone(parent, clone);\n  clone.trueExpr = this.trueExpr.clone(parent, clone);\n  clone.falseExpr = this.falseExpr.clone(parent, clone);\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  return clone;\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nTernary.prototype.toJSON = function(){\n  return {\n    __type: 'Ternary',\n    cond: this.cond,\n    trueExpr: this.trueExpr,\n    falseExpr: this.falseExpr,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n"]},"metadata":{},"sourceType":"script"}