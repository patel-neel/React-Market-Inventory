{"ast":null,"code":"/*!\n * Stylus - Group\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nvar Node = require('./node');\n/**\n * Initialize a new `Group`.\n *\n * @api public\n */\n\n\nvar Group = module.exports = function Group() {\n  Node.call(this);\n  this.nodes = [];\n  this.extends = [];\n};\n/**\n * Inherit from `Node.prototype`.\n */\n\n\nGroup.prototype.__proto__ = Node.prototype;\n/**\n * Push the given `selector` node.\n *\n * @param {Selector} selector\n * @api public\n */\n\nGroup.prototype.push = function (selector) {\n  this.nodes.push(selector);\n};\n/**\n * Return this set's `Block`.\n */\n\n\nGroup.prototype.__defineGetter__('block', function () {\n  return this.nodes[0].block;\n});\n/**\n * Assign `block` to each selector in this set.\n *\n * @param {Block} block\n * @api public\n */\n\n\nGroup.prototype.__defineSetter__('block', function (block) {\n  for (var i = 0, len = this.nodes.length; i < len; ++i) {\n    this.nodes[i].block = block;\n  }\n});\n/**\n * Check if this set has only placeholders.\n *\n * @return {Boolean}\n * @api public\n */\n\n\nGroup.prototype.__defineGetter__('hasOnlyPlaceholders', function () {\n  return this.nodes.every(function (selector) {\n    return selector.isPlaceholder;\n  });\n});\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\n\nGroup.prototype.clone = function (parent) {\n  var clone = new Group();\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  this.nodes.forEach(function (node) {\n    clone.push(node.clone(parent, clone));\n  });\n  clone.filename = this.filename;\n  clone.block = this.block.clone(parent, clone);\n  return clone;\n};\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\n\nGroup.prototype.toJSON = function () {\n  return {\n    __type: 'Group',\n    nodes: this.nodes,\n    block: this.block,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/nodes/group.js"],"names":["Node","require","Group","module","exports","call","nodes","extends","prototype","__proto__","push","selector","__defineGetter__","block","__defineSetter__","i","len","length","every","isPlaceholder","clone","parent","lineno","column","forEach","node","filename","toJSON","__type"],"mappings":"AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;;;AAEA,IAAIC,KAAK,GAAGC,MAAM,CAACC,OAAP,GAAiB,SAASF,KAAT,GAAgB;AAC3CF,EAAAA,IAAI,CAACK,IAAL,CAAU,IAAV;AACA,OAAKC,KAAL,GAAa,EAAb;AACA,OAAKC,OAAL,GAAe,EAAf;AACD,CAJD;AAMA;AACA;AACA;;;AAEAL,KAAK,CAACM,SAAN,CAAgBC,SAAhB,GAA4BT,IAAI,CAACQ,SAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAN,KAAK,CAACM,SAAN,CAAgBE,IAAhB,GAAuB,UAASC,QAAT,EAAkB;AACvC,OAAKL,KAAL,CAAWI,IAAX,CAAgBC,QAAhB;AACD,CAFD;AAIA;AACA;AACA;;;AAEAT,KAAK,CAACM,SAAN,CAAgBI,gBAAhB,CAAiC,OAAjC,EAA0C,YAAU;AAClD,SAAO,KAAKN,KAAL,CAAW,CAAX,EAAcO,KAArB;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAEAX,KAAK,CAACM,SAAN,CAAgBM,gBAAhB,CAAiC,OAAjC,EAA0C,UAASD,KAAT,EAAe;AACvD,OAAK,IAAIE,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG,KAAKV,KAAL,CAAWW,MAAjC,EAAyCF,CAAC,GAAGC,GAA7C,EAAkD,EAAED,CAApD,EAAuD;AACrD,SAAKT,KAAL,CAAWS,CAAX,EAAcF,KAAd,GAAsBA,KAAtB;AACD;AACF,CAJD;AAMA;AACA;AACA;AACA;AACA;AACA;;;AAEAX,KAAK,CAACM,SAAN,CAAgBI,gBAAhB,CAAiC,qBAAjC,EAAwD,YAAU;AAChE,SAAO,KAAKN,KAAL,CAAWY,KAAX,CAAiB,UAASP,QAAT,EAAmB;AAAE,WAAOA,QAAQ,CAACQ,aAAhB;AAAgC,GAAtE,CAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAEAjB,KAAK,CAACM,SAAN,CAAgBY,KAAhB,GAAwB,UAASC,MAAT,EAAgB;AACtC,MAAID,KAAK,GAAG,IAAIlB,KAAJ,EAAZ;AACAkB,EAAAA,KAAK,CAACE,MAAN,GAAe,KAAKA,MAApB;AACAF,EAAAA,KAAK,CAACG,MAAN,GAAe,KAAKA,MAApB;AACA,OAAKjB,KAAL,CAAWkB,OAAX,CAAmB,UAASC,IAAT,EAAc;AAC/BL,IAAAA,KAAK,CAACV,IAAN,CAAWe,IAAI,CAACL,KAAL,CAAWC,MAAX,EAAmBD,KAAnB,CAAX;AACD,GAFD;AAGAA,EAAAA,KAAK,CAACM,QAAN,GAAiB,KAAKA,QAAtB;AACAN,EAAAA,KAAK,CAACP,KAAN,GAAc,KAAKA,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,EAAyBD,KAAzB,CAAd;AACA,SAAOA,KAAP;AACD,CAVD;AAYA;AACA;AACA;AACA;AACA;AACA;;;AAEAlB,KAAK,CAACM,SAAN,CAAgBmB,MAAhB,GAAyB,YAAU;AACjC,SAAO;AACLC,IAAAA,MAAM,EAAE,OADH;AAELtB,IAAAA,KAAK,EAAE,KAAKA,KAFP;AAGLO,IAAAA,KAAK,EAAE,KAAKA,KAHP;AAILS,IAAAA,MAAM,EAAE,KAAKA,MAJR;AAKLC,IAAAA,MAAM,EAAE,KAAKA,MALR;AAMLG,IAAAA,QAAQ,EAAE,KAAKA;AANV,GAAP;AAQD,CATD","sourcesContent":["\n/*!\n * Stylus - Group\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node');\n\n/**\n * Initialize a new `Group`.\n *\n * @api public\n */\n\nvar Group = module.exports = function Group(){\n  Node.call(this);\n  this.nodes = [];\n  this.extends = [];\n};\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nGroup.prototype.__proto__ = Node.prototype;\n\n/**\n * Push the given `selector` node.\n *\n * @param {Selector} selector\n * @api public\n */\n\nGroup.prototype.push = function(selector){\n  this.nodes.push(selector);\n};\n\n/**\n * Return this set's `Block`.\n */\n\nGroup.prototype.__defineGetter__('block', function(){\n  return this.nodes[0].block;\n});\n\n/**\n * Assign `block` to each selector in this set.\n *\n * @param {Block} block\n * @api public\n */\n\nGroup.prototype.__defineSetter__('block', function(block){\n  for (var i = 0, len = this.nodes.length; i < len; ++i) {\n    this.nodes[i].block = block;\n  }\n});\n\n/**\n * Check if this set has only placeholders.\n *\n * @return {Boolean}\n * @api public\n */\n\nGroup.prototype.__defineGetter__('hasOnlyPlaceholders', function(){\n  return this.nodes.every(function(selector) { return selector.isPlaceholder; });\n});\n\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nGroup.prototype.clone = function(parent){\n  var clone = new Group;\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  this.nodes.forEach(function(node){\n    clone.push(node.clone(parent, clone));\n  });\n  clone.filename = this.filename;\n  clone.block = this.block.clone(parent, clone);\n  return clone;\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nGroup.prototype.toJSON = function(){\n  return {\n    __type: 'Group',\n    nodes: this.nodes,\n    block: this.block,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n"]},"metadata":{},"sourceType":"script"}