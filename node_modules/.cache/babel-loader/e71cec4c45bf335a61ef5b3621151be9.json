{"ast":null,"code":"/*!\n * Stylus - QueryList\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nvar Node = require('./node');\n/**\n * Initialize a new `QueryList`.\n *\n * @api public\n */\n\n\nvar QueryList = module.exports = function QueryList() {\n  Node.call(this);\n  this.nodes = [];\n};\n/**\n * Inherit from `Node.prototype`.\n */\n\n\nQueryList.prototype.__proto__ = Node.prototype;\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nQueryList.prototype.clone = function (parent) {\n  var clone = new QueryList();\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n\n  for (var i = 0; i < this.nodes.length; ++i) {\n    clone.push(this.nodes[i].clone(parent, clone));\n  }\n\n  return clone;\n};\n/**\n * Push the given `node`.\n *\n * @param {Node} node\n * @api public\n */\n\n\nQueryList.prototype.push = function (node) {\n  this.nodes.push(node);\n};\n/**\n * Merges this query list with the `other`.\n *\n * @param {QueryList} other\n * @return {QueryList}\n * @api private\n */\n\n\nQueryList.prototype.merge = function (other) {\n  var list = new QueryList(),\n      merged;\n  this.nodes.forEach(function (query) {\n    for (var i = 0, len = other.nodes.length; i < len; ++i) {\n      merged = query.merge(other.nodes[i]);\n      if (merged) list.push(merged);\n    }\n  });\n  return list;\n};\n/**\n * Return \"<a>, <b>, <c>\"\n *\n * @return {String}\n * @api public\n */\n\n\nQueryList.prototype.toString = function () {\n  return '(' + this.nodes.map(function (node) {\n    return node.toString();\n  }).join(', ') + ')';\n};\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\n\nQueryList.prototype.toJSON = function () {\n  return {\n    __type: 'QueryList',\n    nodes: this.nodes,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/nodes/query-list.js"],"names":["Node","require","QueryList","module","exports","call","nodes","prototype","__proto__","clone","parent","lineno","column","filename","i","length","push","node","merge","other","list","merged","forEach","query","len","toString","map","join","toJSON","__type"],"mappings":"AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;;;AAEA,IAAIC,SAAS,GAAGC,MAAM,CAACC,OAAP,GAAiB,SAASF,SAAT,GAAoB;AACnDF,EAAAA,IAAI,CAACK,IAAL,CAAU,IAAV;AACA,OAAKC,KAAL,GAAa,EAAb;AACD,CAHD;AAKA;AACA;AACA;;;AAEAJ,SAAS,CAACK,SAAV,CAAoBC,SAApB,GAAgCR,IAAI,CAACO,SAArC;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAL,SAAS,CAACK,SAAV,CAAoBE,KAApB,GAA4B,UAASC,MAAT,EAAgB;AAC1C,MAAID,KAAK,GAAG,IAAIP,SAAJ,EAAZ;AACAO,EAAAA,KAAK,CAACE,MAAN,GAAe,KAAKA,MAApB;AACAF,EAAAA,KAAK,CAACG,MAAN,GAAe,KAAKA,MAApB;AACAH,EAAAA,KAAK,CAACI,QAAN,GAAiB,KAAKA,QAAtB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKR,KAAL,CAAWS,MAA/B,EAAuC,EAAED,CAAzC,EAA4C;AAC1CL,IAAAA,KAAK,CAACO,IAAN,CAAW,KAAKV,KAAL,CAAWQ,CAAX,EAAcL,KAAd,CAAoBC,MAApB,EAA4BD,KAA5B,CAAX;AACD;;AACD,SAAOA,KAAP;AACD,CATD;AAWA;AACA;AACA;AACA;AACA;AACA;;;AAEAP,SAAS,CAACK,SAAV,CAAoBS,IAApB,GAA2B,UAASC,IAAT,EAAc;AACvC,OAAKX,KAAL,CAAWU,IAAX,CAAgBC,IAAhB;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAf,SAAS,CAACK,SAAV,CAAoBW,KAApB,GAA4B,UAASC,KAAT,EAAe;AACzC,MAAIC,IAAI,GAAG,IAAIlB,SAAJ,EAAX;AAAA,MACImB,MADJ;AAEA,OAAKf,KAAL,CAAWgB,OAAX,CAAmB,UAASC,KAAT,EAAe;AAChC,SAAK,IAAIT,CAAC,GAAG,CAAR,EAAWU,GAAG,GAAGL,KAAK,CAACb,KAAN,CAAYS,MAAlC,EAA0CD,CAAC,GAAGU,GAA9C,EAAmD,EAAEV,CAArD,EAAuD;AACrDO,MAAAA,MAAM,GAAGE,KAAK,CAACL,KAAN,CAAYC,KAAK,CAACb,KAAN,CAAYQ,CAAZ,CAAZ,CAAT;AACA,UAAIO,MAAJ,EAAYD,IAAI,CAACJ,IAAL,CAAUK,MAAV;AACb;AACF,GALD;AAMA,SAAOD,IAAP;AACD,CAVD;AAYA;AACA;AACA;AACA;AACA;AACA;;;AAEAlB,SAAS,CAACK,SAAV,CAAoBkB,QAApB,GAA+B,YAAU;AACvC,SAAO,MAAM,KAAKnB,KAAL,CAAWoB,GAAX,CAAe,UAAST,IAAT,EAAc;AACxC,WAAOA,IAAI,CAACQ,QAAL,EAAP;AACD,GAFY,EAEVE,IAFU,CAEL,IAFK,CAAN,GAES,GAFhB;AAGD,CAJD;AAMA;AACA;AACA;AACA;AACA;AACA;;;AAEAzB,SAAS,CAACK,SAAV,CAAoBqB,MAApB,GAA6B,YAAU;AACrC,SAAO;AACLC,IAAAA,MAAM,EAAE,WADH;AAELvB,IAAAA,KAAK,EAAE,KAAKA,KAFP;AAGLK,IAAAA,MAAM,EAAE,KAAKA,MAHR;AAILC,IAAAA,MAAM,EAAE,KAAKA,MAJR;AAKLC,IAAAA,QAAQ,EAAE,KAAKA;AALV,GAAP;AAOD,CARD","sourcesContent":["\n/*!\n * Stylus - QueryList\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node');\n\n/**\n * Initialize a new `QueryList`.\n *\n * @api public\n */\n\nvar QueryList = module.exports = function QueryList(){\n  Node.call(this);\n  this.nodes = [];\n};\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nQueryList.prototype.__proto__ = Node.prototype;\n\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nQueryList.prototype.clone = function(parent){\n  var clone = new QueryList;\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  for (var i = 0; i < this.nodes.length; ++i) {\n    clone.push(this.nodes[i].clone(parent, clone));\n  }\n  return clone;\n};\n\n/**\n * Push the given `node`.\n *\n * @param {Node} node\n * @api public\n */\n\nQueryList.prototype.push = function(node){\n  this.nodes.push(node);\n};\n\n/**\n * Merges this query list with the `other`.\n *\n * @param {QueryList} other\n * @return {QueryList}\n * @api private\n */\n\nQueryList.prototype.merge = function(other){\n  var list = new QueryList\n    , merged;\n  this.nodes.forEach(function(query){\n    for (var i = 0, len = other.nodes.length; i < len; ++i){\n      merged = query.merge(other.nodes[i]);\n      if (merged) list.push(merged);\n    }\n  });\n  return list;\n};\n\n/**\n * Return \"<a>, <b>, <c>\"\n *\n * @return {String}\n * @api public\n */\n\nQueryList.prototype.toString = function(){\n  return '(' + this.nodes.map(function(node){\n    return node.toString();\n  }).join(', ') + ')';\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nQueryList.prototype.toJSON = function(){\n  return {\n    __type: 'QueryList',\n    nodes: this.nodes,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n"]},"metadata":{},"sourceType":"script"}