{"ast":null,"code":"/*!\n * Stylus - stack - Scope\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Initialize a new `Scope`.\n *\n * @api private\n */\nvar Scope = module.exports = function Scope() {\n  this.locals = {};\n};\n/**\n * Add `ident` node to the current scope.\n *\n * @param {Ident} ident\n * @api private\n */\n\n\nScope.prototype.add = function (ident) {\n  this.locals[ident.name] = ident.val;\n};\n/**\n * Lookup the given local variable `name`.\n *\n * @param {String} name\n * @return {Node}\n * @api private\n */\n\n\nScope.prototype.lookup = function (name) {\n  return hasOwnProperty(this.locals, name) ? this.locals[name] : undefined;\n};\n/**\n * Custom inspect.\n *\n * @return {String}\n * @api public\n */\n\n\nScope.prototype.inspect = function () {\n  var keys = Object.keys(this.locals).map(function (key) {\n    return '@' + key;\n  });\n  return '[Scope' + (keys.length ? ' ' + keys.join(', ') : '') + ']';\n};\n/**\n * @param {Object} obj\n * @param {String} propName\n * @returns {Boolean}\n */\n\n\nfunction hasOwnProperty(obj, propName) {\n  return Object.prototype.hasOwnProperty.call(obj, propName);\n}","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/stack/scope.js"],"names":["Scope","module","exports","locals","prototype","add","ident","name","val","lookup","hasOwnProperty","undefined","inspect","keys","Object","map","key","length","join","obj","propName","call"],"mappings":"AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA,IAAIA,KAAK,GAAGC,MAAM,CAACC,OAAP,GAAiB,SAASF,KAAT,GAAiB;AAC5C,OAAKG,MAAL,GAAc,EAAd;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAEAH,KAAK,CAACI,SAAN,CAAgBC,GAAhB,GAAsB,UAASC,KAAT,EAAe;AACnC,OAAKH,MAAL,CAAYG,KAAK,CAACC,IAAlB,IAA0BD,KAAK,CAACE,GAAhC;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAR,KAAK,CAACI,SAAN,CAAgBK,MAAhB,GAAyB,UAASF,IAAT,EAAc;AACrC,SAAOG,cAAc,CAAC,KAAKP,MAAN,EAAcI,IAAd,CAAd,GAAoC,KAAKJ,MAAL,CAAYI,IAAZ,CAApC,GAAwDI,SAA/D;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAEAX,KAAK,CAACI,SAAN,CAAgBQ,OAAhB,GAA0B,YAAU;AAClC,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAY,KAAKV,MAAjB,EAAyBY,GAAzB,CAA6B,UAASC,GAAT,EAAa;AAAE,WAAO,MAAMA,GAAb;AAAmB,GAA/D,CAAX;AACA,SAAO,YACFH,IAAI,CAACI,MAAL,GAAc,MAAMJ,IAAI,CAACK,IAAL,CAAU,IAAV,CAApB,GAAsC,EADpC,IAEH,GAFJ;AAGD,CALD;AAOA;AACA;AACA;AACA;AACA;;;AACA,SAASR,cAAT,CAAwBS,GAAxB,EAA6BC,QAA7B,EAAuC;AACrC,SAAON,MAAM,CAACV,SAAP,CAAiBM,cAAjB,CAAgCW,IAAhC,CAAqCF,GAArC,EAA0CC,QAA1C,CAAP;AACD","sourcesContent":["\n/*!\n * Stylus - stack - Scope\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Initialize a new `Scope`.\n *\n * @api private\n */\n\nvar Scope = module.exports = function Scope() {\n  this.locals = {};\n};\n\n/**\n * Add `ident` node to the current scope.\n *\n * @param {Ident} ident\n * @api private\n */\n\nScope.prototype.add = function(ident){\n  this.locals[ident.name] = ident.val;\n};\n\n/**\n * Lookup the given local variable `name`.\n *\n * @param {String} name\n * @return {Node}\n * @api private\n */\n\nScope.prototype.lookup = function(name){\n  return hasOwnProperty(this.locals, name) ? this.locals[name] : undefined;\n};\n\n/**\n * Custom inspect.\n *\n * @return {String}\n * @api public\n */\n\nScope.prototype.inspect = function(){\n  var keys = Object.keys(this.locals).map(function(key){ return '@' + key; });\n  return '[Scope'\n    + (keys.length ? ' ' + keys.join(', ') : '')\n    + ']';\n};\n\n/**\n * @param {Object} obj\n * @param {String} propName\n * @returns {Boolean}\n */\nfunction hasOwnProperty(obj, propName) {\n  return Object.prototype.hasOwnProperty.call(obj, propName);\n}\n"]},"metadata":{},"sourceType":"script"}