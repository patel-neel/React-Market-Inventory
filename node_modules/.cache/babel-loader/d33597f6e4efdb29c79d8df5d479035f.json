{"ast":null,"code":"/*!\n * Stylus - RGBA\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nvar Node = require('./node'),\n    HSLA = require('./hsla'),\n    functions = require('../functions'),\n    adjust = functions.adjust,\n    nodes = require('./');\n/**\n * Initialize a new `RGBA` with the given r,g,b,a component values.\n *\n * @param {Number} r\n * @param {Number} g\n * @param {Number} b\n * @param {Number} a\n * @api public\n */\n\n\nvar RGBA = exports = module.exports = function RGBA(r, g, b, a) {\n  Node.call(this);\n  this.r = clamp(r);\n  this.g = clamp(g);\n  this.b = clamp(b);\n  this.a = clampAlpha(a);\n  this.name = '';\n  this.rgba = this;\n};\n/**\n * Inherit from `Node.prototype`.\n */\n\n\nRGBA.prototype.__proto__ = Node.prototype;\n/**\n * Return an `RGBA` without clamping values.\n * \n * @param {Number} r\n * @param {Number} g\n * @param {Number} b\n * @param {Number} a\n * @return {RGBA}\n * @api public\n */\n\nRGBA.withoutClamping = function (r, g, b, a) {\n  var rgba = new RGBA(0, 0, 0, 0);\n  rgba.r = r;\n  rgba.g = g;\n  rgba.b = b;\n  rgba.a = a;\n  return rgba;\n};\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\n\nRGBA.prototype.clone = function () {\n  var clone = new RGBA(this.r, this.g, this.b, this.a);\n  clone.raw = this.raw;\n  clone.name = this.name;\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  return clone;\n};\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\n\nRGBA.prototype.toJSON = function () {\n  return {\n    __type: 'RGBA',\n    r: this.r,\n    g: this.g,\n    b: this.b,\n    a: this.a,\n    raw: this.raw,\n    name: this.name,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n/**\n * Return true.\n *\n * @return {Boolean}\n * @api public\n */\n\n\nRGBA.prototype.toBoolean = function () {\n  return nodes.true;\n};\n/**\n * Return `HSLA` representation.\n *\n * @return {HSLA}\n * @api public\n */\n\n\nRGBA.prototype.__defineGetter__('hsla', function () {\n  return HSLA.fromRGBA(this);\n});\n/**\n * Return hash.\n *\n * @return {String}\n * @api public\n */\n\n\nRGBA.prototype.__defineGetter__('hash', function () {\n  return this.toString();\n});\n/**\n * Add r,g,b,a to the current component values.\n *\n * @param {Number} r\n * @param {Number} g\n * @param {Number} b\n * @param {Number} a\n * @return {RGBA} new node\n * @api public\n */\n\n\nRGBA.prototype.add = function (r, g, b, a) {\n  return new RGBA(this.r + r, this.g + g, this.b + b, this.a + a);\n};\n/**\n * Subtract r,g,b,a from the current component values.\n *\n * @param {Number} r\n * @param {Number} g\n * @param {Number} b\n * @param {Number} a\n * @return {RGBA} new node\n * @api public\n */\n\n\nRGBA.prototype.sub = function (r, g, b, a) {\n  return new RGBA(this.r - r, this.g - g, this.b - b, a == 1 ? this.a : this.a - a);\n};\n/**\n * Multiply rgb components by `n`.\n *\n * @param {String} n\n * @return {RGBA} new node\n * @api public\n */\n\n\nRGBA.prototype.multiply = function (n) {\n  return new RGBA(this.r * n, this.g * n, this.b * n, this.a);\n};\n/**\n * Divide rgb components by `n`.\n *\n * @param {String} n\n * @return {RGBA} new node\n * @api public\n */\n\n\nRGBA.prototype.divide = function (n) {\n  return new RGBA(this.r / n, this.g / n, this.b / n, this.a);\n};\n/**\n * Operate on `right` with the given `op`.\n *\n * @param {String} op\n * @param {Node} right\n * @return {Node}\n * @api public\n */\n\n\nRGBA.prototype.operate = function (op, right) {\n  if ('in' != op) right = right.first;\n\n  switch (op) {\n    case 'is a':\n      if ('string' == right.nodeName && 'color' == right.string) {\n        return nodes.true;\n      }\n\n      break;\n\n    case '+':\n      switch (right.nodeName) {\n        case 'unit':\n          var n = right.val;\n\n          switch (right.type) {\n            case '%':\n              return adjust(this, new nodes.String('lightness'), right);\n\n            case 'deg':\n              return this.hsla.adjustHue(n).rgba;\n\n            default:\n              return this.add(n, n, n, 0);\n          }\n\n        case 'rgba':\n          return this.add(right.r, right.g, right.b, right.a);\n\n        case 'hsla':\n          return this.hsla.add(right.h, right.s, right.l);\n      }\n\n      break;\n\n    case '-':\n      switch (right.nodeName) {\n        case 'unit':\n          var n = right.val;\n\n          switch (right.type) {\n            case '%':\n              return adjust(this, new nodes.String('lightness'), new nodes.Unit(-n, '%'));\n\n            case 'deg':\n              return this.hsla.adjustHue(-n).rgba;\n\n            default:\n              return this.sub(n, n, n, 0);\n          }\n\n        case 'rgba':\n          return this.sub(right.r, right.g, right.b, right.a);\n\n        case 'hsla':\n          return this.hsla.sub(right.h, right.s, right.l);\n      }\n\n      break;\n\n    case '*':\n      switch (right.nodeName) {\n        case 'unit':\n          return this.multiply(right.val);\n      }\n\n      break;\n\n    case '/':\n      switch (right.nodeName) {\n        case 'unit':\n          return this.divide(right.val);\n      }\n\n      break;\n  }\n\n  return Node.prototype.operate.call(this, op, right);\n};\n/**\n * Return #nnnnnn, #nnn, or rgba(n,n,n,n) string representation of the color.\n *\n * @return {String}\n * @api public\n */\n\n\nRGBA.prototype.toString = function () {\n  function pad(n) {\n    return n < 16 ? '0' + n.toString(16) : n.toString(16);\n  } // special case for transparent named color\n\n\n  if ('transparent' == this.name) return this.name;\n\n  if (1 == this.a) {\n    var r = pad(this.r),\n        g = pad(this.g),\n        b = pad(this.b); // Compress\n\n    if (r[0] == r[1] && g[0] == g[1] && b[0] == b[1]) {\n      return '#' + r[0] + g[0] + b[0];\n    } else {\n      return '#' + r + g + b;\n    }\n  } else {\n    return 'rgba(' + this.r + ',' + this.g + ',' + this.b + ',' + +this.a.toFixed(3) + ')';\n  }\n};\n/**\n * Return a `RGBA` from the given `hsla`.\n *\n * @param {HSLA} hsla\n * @return {RGBA}\n * @api public\n */\n\n\nexports.fromHSLA = function (hsla) {\n  var h = hsla.h / 360,\n      s = hsla.s / 100,\n      l = hsla.l / 100,\n      a = hsla.a;\n  var m2 = l <= .5 ? l * (s + 1) : l + s - l * s,\n      m1 = l * 2 - m2;\n  var r = hue(h + 1 / 3) * 0xff,\n      g = hue(h) * 0xff,\n      b = hue(h - 1 / 3) * 0xff;\n\n  function hue(h) {\n    if (h < 0) ++h;\n    if (h > 1) --h;\n    if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n    if (h * 2 < 1) return m2;\n    if (h * 3 < 2) return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n    return m1;\n  }\n\n  return new RGBA(r, g, b, a);\n};\n/**\n * Clamp `n` >= 0 and <= 255.\n *\n * @param {Number} n\n * @return {Number}\n * @api private\n */\n\n\nfunction clamp(n) {\n  return Math.max(0, Math.min(n.toFixed(0), 255));\n}\n/**\n * Clamp alpha `n` >= 0 and <= 1.\n *\n * @param {Number} n\n * @return {Number}\n * @api private\n */\n\n\nfunction clampAlpha(n) {\n  return Math.max(0, Math.min(n, 1));\n}","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/nodes/rgba.js"],"names":["Node","require","HSLA","functions","adjust","nodes","RGBA","exports","module","r","g","b","a","call","clamp","clampAlpha","name","rgba","prototype","__proto__","withoutClamping","clone","raw","lineno","column","filename","toJSON","__type","toBoolean","true","__defineGetter__","fromRGBA","toString","add","sub","multiply","n","divide","operate","op","right","first","nodeName","string","val","type","String","hsla","adjustHue","h","s","l","Unit","pad","toFixed","fromHSLA","m2","m1","hue","Math","max","min"],"mappings":"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","sourcesContent":["\n/*!\n * Stylus - RGBA\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node')\n  , HSLA = require('./hsla')\n  , functions = require('../functions')\n  , adjust = functions.adjust\n  , nodes = require('./');\n\n/**\n * Initialize a new `RGBA` with the given r,g,b,a component values.\n *\n * @param {Number} r\n * @param {Number} g\n * @param {Number} b\n * @param {Number} a\n * @api public\n */\n\nvar RGBA = exports = module.exports = function RGBA(r,g,b,a){\n  Node.call(this);\n  this.r = clamp(r);\n  this.g = clamp(g);\n  this.b = clamp(b);\n  this.a = clampAlpha(a);\n  this.name = '';\n  this.rgba = this;\n};\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nRGBA.prototype.__proto__ = Node.prototype;\n\n/**\n * Return an `RGBA` without clamping values.\n * \n * @param {Number} r\n * @param {Number} g\n * @param {Number} b\n * @param {Number} a\n * @return {RGBA}\n * @api public\n */\n\nRGBA.withoutClamping = function(r,g,b,a){\n  var rgba = new RGBA(0,0,0,0);\n  rgba.r = r;\n  rgba.g = g;\n  rgba.b = b;\n  rgba.a = a;\n  return rgba;\n};\n\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nRGBA.prototype.clone = function(){\n  var clone = new RGBA(\n      this.r\n    , this.g\n    , this.b\n    , this.a);\n  clone.raw = this.raw;\n  clone.name = this.name;\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  return clone;\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nRGBA.prototype.toJSON = function(){\n  return {\n    __type: 'RGBA',\n    r: this.r,\n    g: this.g,\n    b: this.b,\n    a: this.a,\n    raw: this.raw,\n    name: this.name,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n\n/**\n * Return true.\n *\n * @return {Boolean}\n * @api public\n */\n\nRGBA.prototype.toBoolean = function(){\n  return nodes.true;\n};\n\n/**\n * Return `HSLA` representation.\n *\n * @return {HSLA}\n * @api public\n */\n\nRGBA.prototype.__defineGetter__('hsla', function(){\n  return HSLA.fromRGBA(this);\n});\n\n/**\n * Return hash.\n *\n * @return {String}\n * @api public\n */\n\nRGBA.prototype.__defineGetter__('hash', function(){\n  return this.toString();\n});\n\n/**\n * Add r,g,b,a to the current component values.\n *\n * @param {Number} r\n * @param {Number} g\n * @param {Number} b\n * @param {Number} a\n * @return {RGBA} new node\n * @api public\n */\n\nRGBA.prototype.add = function(r,g,b,a){\n  return new RGBA(\n      this.r + r\n    , this.g + g\n    , this.b + b\n    , this.a + a);\n};\n\n/**\n * Subtract r,g,b,a from the current component values.\n *\n * @param {Number} r\n * @param {Number} g\n * @param {Number} b\n * @param {Number} a\n * @return {RGBA} new node\n * @api public\n */\n\nRGBA.prototype.sub = function(r,g,b,a){\n  return new RGBA(\n      this.r - r\n    , this.g - g\n    , this.b - b\n    , a == 1 ? this.a : this.a - a);\n};\n\n/**\n * Multiply rgb components by `n`.\n *\n * @param {String} n\n * @return {RGBA} new node\n * @api public\n */\n\nRGBA.prototype.multiply = function(n){\n  return new RGBA(\n      this.r * n\n    , this.g * n\n    , this.b * n\n    , this.a); \n};\n\n/**\n * Divide rgb components by `n`.\n *\n * @param {String} n\n * @return {RGBA} new node\n * @api public\n */\n\nRGBA.prototype.divide = function(n){\n  return new RGBA(\n      this.r / n\n    , this.g / n\n    , this.b / n\n    , this.a); \n};\n\n/**\n * Operate on `right` with the given `op`.\n *\n * @param {String} op\n * @param {Node} right\n * @return {Node}\n * @api public\n */\n\nRGBA.prototype.operate = function(op, right){\n  if ('in' != op) right = right.first\n\n  switch (op) {\n    case 'is a':\n      if ('string' == right.nodeName && 'color' == right.string) {\n        return nodes.true;\n      }\n      break;\n    case '+':\n      switch (right.nodeName) {\n        case 'unit':\n          var n = right.val;\n          switch (right.type) {\n            case '%': return adjust(this, new nodes.String('lightness'), right);\n            case 'deg': return this.hsla.adjustHue(n).rgba;\n            default: return this.add(n,n,n,0);\n          }\n        case 'rgba':\n          return this.add(right.r, right.g, right.b, right.a);\n        case 'hsla':\n          return this.hsla.add(right.h, right.s, right.l);\n      }\n      break;\n    case '-':\n      switch (right.nodeName) {\n        case 'unit':\n          var n = right.val;\n          switch (right.type) {\n            case '%': return adjust(this, new nodes.String('lightness'), new nodes.Unit(-n, '%'));\n            case 'deg': return this.hsla.adjustHue(-n).rgba;\n            default: return this.sub(n,n,n,0);\n          }\n        case 'rgba':\n          return this.sub(right.r, right.g, right.b, right.a);\n        case 'hsla':\n          return this.hsla.sub(right.h, right.s, right.l);\n      }\n      break;\n    case '*':\n      switch (right.nodeName) {\n        case 'unit':\n          return this.multiply(right.val);\n      }\n      break;\n    case '/':\n      switch (right.nodeName) {\n        case 'unit':\n          return this.divide(right.val);\n      }\n      break;\n  }\n  return Node.prototype.operate.call(this, op, right);\n};\n\n/**\n * Return #nnnnnn, #nnn, or rgba(n,n,n,n) string representation of the color.\n *\n * @return {String}\n * @api public\n */\n\nRGBA.prototype.toString = function(){\n  function pad(n) {\n    return n < 16\n      ? '0' + n.toString(16)\n      : n.toString(16);\n  }\n\n  // special case for transparent named color\n  if ('transparent' == this.name)\n    return this.name;\n\n  if (1 == this.a) {\n    var r = pad(this.r)\n      , g = pad(this.g)\n      , b = pad(this.b);\n\n    // Compress\n    if (r[0] == r[1] && g[0] == g[1] && b[0] == b[1]) {\n      return '#' + r[0] + g[0] + b[0];\n    } else {\n      return '#' + r + g + b;\n    }\n  } else {\n    return 'rgba('\n      + this.r + ','\n      + this.g + ','\n      + this.b + ','\n      + (+this.a.toFixed(3)) + ')';\n  }\n};\n\n/**\n * Return a `RGBA` from the given `hsla`.\n *\n * @param {HSLA} hsla\n * @return {RGBA}\n * @api public\n */\n\nexports.fromHSLA = function(hsla){\n  var h = hsla.h / 360\n    , s = hsla.s / 100\n    , l = hsla.l / 100\n    , a = hsla.a;\n\n  var m2 = l <= .5 ? l * (s + 1) : l + s - l * s\n    , m1 = l * 2 - m2;\n\n  var r = hue(h + 1/3) * 0xff\n    , g = hue(h) * 0xff\n    , b = hue(h - 1/3) * 0xff;\n\n  function hue(h) {\n    if (h < 0) ++h;\n    if (h > 1) --h;\n    if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n    if (h * 2 < 1) return m2;\n    if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n    return m1;\n  }\n  \n  return new RGBA(r,g,b,a);\n};\n\n/**\n * Clamp `n` >= 0 and <= 255.\n *\n * @param {Number} n\n * @return {Number}\n * @api private\n */\n\nfunction clamp(n) {\n  return Math.max(0, Math.min(n.toFixed(0), 255));\n}\n\n/**\n * Clamp alpha `n` >= 0 and <= 1.\n *\n * @param {Number} n\n * @return {Number}\n * @api private\n */\n\nfunction clampAlpha(n) {\n  return Math.max(0, Math.min(n, 1));\n}\n"]},"metadata":{},"sourceType":"script"}