{"ast":null,"code":"/*!\n * Stylus - Feature\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nvar Node = require('./node');\n/**\n * Initialize a new `Feature` with the given `segs`.\n *\n * @param {Array} segs\n * @api public\n */\n\n\nvar Feature = module.exports = function Feature(segs) {\n  Node.call(this);\n  this.segments = segs;\n  this.expr = null;\n};\n/**\n * Inherit from `Node.prototype`.\n */\n\n\nFeature.prototype.__proto__ = Node.prototype;\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nFeature.prototype.clone = function (parent) {\n  var clone = new Feature();\n  clone.segments = this.segments.map(function (node) {\n    return node.clone(parent, clone);\n  });\n  if (this.expr) clone.expr = this.expr.clone(parent, clone);\n  if (this.name) clone.name = this.name;\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  return clone;\n};\n/**\n * Return \"<ident>\" or \"(<ident>: <expr>)\"\n *\n * @return {String}\n * @api public\n */\n\n\nFeature.prototype.toString = function () {\n  if (this.expr) {\n    return '(' + this.segments.join('') + ': ' + this.expr.toString() + ')';\n  } else {\n    return this.segments.join('');\n  }\n};\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\n\nFeature.prototype.toJSON = function () {\n  var json = {\n    __type: 'Feature',\n    segments: this.segments,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n  if (this.expr) json.expr = this.expr;\n  if (this.name) json.name = this.name;\n  return json;\n};","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/nodes/feature.js"],"names":["Node","require","Feature","module","exports","segs","call","segments","expr","prototype","__proto__","clone","parent","map","node","name","lineno","column","filename","toString","join","toJSON","json","__type"],"mappings":"AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIC,OAAO,GAAGC,MAAM,CAACC,OAAP,GAAiB,SAASF,OAAT,CAAiBG,IAAjB,EAAsB;AACnDL,EAAAA,IAAI,CAACM,IAAL,CAAU,IAAV;AACA,OAAKC,QAAL,GAAgBF,IAAhB;AACA,OAAKG,IAAL,GAAY,IAAZ;AACD,CAJD;AAMA;AACA;AACA;;;AAEAN,OAAO,CAACO,SAAR,CAAkBC,SAAlB,GAA8BV,IAAI,CAACS,SAAnC;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAP,OAAO,CAACO,SAAR,CAAkBE,KAAlB,GAA0B,UAASC,MAAT,EAAgB;AACxC,MAAID,KAAK,GAAG,IAAIT,OAAJ,EAAZ;AACAS,EAAAA,KAAK,CAACJ,QAAN,GAAiB,KAAKA,QAAL,CAAcM,GAAd,CAAkB,UAASC,IAAT,EAAc;AAAE,WAAOA,IAAI,CAACH,KAAL,CAAWC,MAAX,EAAmBD,KAAnB,CAAP;AAAmC,GAArE,CAAjB;AACA,MAAI,KAAKH,IAAT,EAAeG,KAAK,CAACH,IAAN,GAAa,KAAKA,IAAL,CAAUG,KAAV,CAAgBC,MAAhB,EAAwBD,KAAxB,CAAb;AACf,MAAI,KAAKI,IAAT,EAAeJ,KAAK,CAACI,IAAN,GAAa,KAAKA,IAAlB;AACfJ,EAAAA,KAAK,CAACK,MAAN,GAAe,KAAKA,MAApB;AACAL,EAAAA,KAAK,CAACM,MAAN,GAAe,KAAKA,MAApB;AACAN,EAAAA,KAAK,CAACO,QAAN,GAAiB,KAAKA,QAAtB;AACA,SAAOP,KAAP;AACD,CATD;AAWA;AACA;AACA;AACA;AACA;AACA;;;AAEAT,OAAO,CAACO,SAAR,CAAkBU,QAAlB,GAA6B,YAAU;AACrC,MAAI,KAAKX,IAAT,EAAe;AACb,WAAO,MAAM,KAAKD,QAAL,CAAca,IAAd,CAAmB,EAAnB,CAAN,GAA+B,IAA/B,GAAsC,KAAKZ,IAAL,CAAUW,QAAV,EAAtC,GAA6D,GAApE;AACD,GAFD,MAEO;AACL,WAAO,KAAKZ,QAAL,CAAca,IAAd,CAAmB,EAAnB,CAAP;AACD;AACF,CAND;AAQA;AACA;AACA;AACA;AACA;AACA;;;AAEAlB,OAAO,CAACO,SAAR,CAAkBY,MAAlB,GAA2B,YAAU;AACnC,MAAIC,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,SADC;AAEThB,IAAAA,QAAQ,EAAE,KAAKA,QAFN;AAGTS,IAAAA,MAAM,EAAE,KAAKA,MAHJ;AAITC,IAAAA,MAAM,EAAE,KAAKA,MAJJ;AAKTC,IAAAA,QAAQ,EAAE,KAAKA;AALN,GAAX;AAOA,MAAI,KAAKV,IAAT,EAAec,IAAI,CAACd,IAAL,GAAY,KAAKA,IAAjB;AACf,MAAI,KAAKO,IAAT,EAAeO,IAAI,CAACP,IAAL,GAAY,KAAKA,IAAjB;AACf,SAAOO,IAAP;AACD,CAXD","sourcesContent":["\n/*!\n * Stylus - Feature\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node');\n\n/**\n * Initialize a new `Feature` with the given `segs`.\n *\n * @param {Array} segs\n * @api public\n */\n\nvar Feature = module.exports = function Feature(segs){\n  Node.call(this);\n  this.segments = segs;\n  this.expr = null;\n};\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nFeature.prototype.__proto__ = Node.prototype;\n\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nFeature.prototype.clone = function(parent){\n  var clone = new Feature;\n  clone.segments = this.segments.map(function(node){ return node.clone(parent, clone); });\n  if (this.expr) clone.expr = this.expr.clone(parent, clone);\n  if (this.name) clone.name = this.name;\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  return clone;\n};\n\n/**\n * Return \"<ident>\" or \"(<ident>: <expr>)\"\n *\n * @return {String}\n * @api public\n */\n\nFeature.prototype.toString = function(){\n  if (this.expr) {\n    return '(' + this.segments.join('') + ': ' + this.expr.toString() + ')';\n  } else {\n    return this.segments.join('');\n  }\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nFeature.prototype.toJSON = function(){\n  var json = {\n    __type: 'Feature',\n    segments: this.segments,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n  if (this.expr) json.expr = this.expr;\n  if (this.name) json.name = this.name;\n  return json;\n};\n"]},"metadata":{},"sourceType":"script"}