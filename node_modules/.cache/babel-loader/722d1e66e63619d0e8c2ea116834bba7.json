{"ast":null,"code":"/*!\n * Stylus - supports\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nvar Atrule = require('./atrule');\n/**\n * Initialize a new supports node.\n *\n * @param {Expression} condition\n * @api public\n */\n\n\nvar Supports = module.exports = function Supports(condition) {\n  Atrule.call(this, 'supports');\n  this.condition = condition;\n};\n/**\n * Inherit from `Atrule.prototype`.\n */\n\n\nSupports.prototype.__proto__ = Atrule.prototype;\n/**\n * Return a clone of this node.\n *\n * @return {Node}\n * @api public\n */\n\nSupports.prototype.clone = function (parent) {\n  var clone = new Supports();\n  clone.condition = this.condition.clone(parent, clone);\n  clone.block = this.block.clone(parent, clone);\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  return clone;\n};\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\n\nSupports.prototype.toJSON = function () {\n  return {\n    __type: 'Supports',\n    condition: this.condition,\n    block: this.block,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n/**\n * Return @supports\n *\n * @return {String}\n * @api public\n */\n\n\nSupports.prototype.toString = function () {\n  return '@supports ' + this.condition;\n};","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/nodes/supports.js"],"names":["Atrule","require","Supports","module","exports","condition","call","prototype","__proto__","clone","parent","block","lineno","column","filename","toJSON","__type","toString"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIC,QAAQ,GAAGC,MAAM,CAACC,OAAP,GAAiB,SAASF,QAAT,CAAkBG,SAAlB,EAA4B;AAC1DL,EAAAA,MAAM,CAACM,IAAP,CAAY,IAAZ,EAAkB,UAAlB;AACA,OAAKD,SAAL,GAAiBA,SAAjB;AACD,CAHD;AAKA;AACA;AACA;;;AAEAH,QAAQ,CAACK,SAAT,CAAmBC,SAAnB,GAA+BR,MAAM,CAACO,SAAtC;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAL,QAAQ,CAACK,SAAT,CAAmBE,KAAnB,GAA2B,UAASC,MAAT,EAAgB;AACzC,MAAID,KAAK,GAAG,IAAIP,QAAJ,EAAZ;AACAO,EAAAA,KAAK,CAACJ,SAAN,GAAkB,KAAKA,SAAL,CAAeI,KAAf,CAAqBC,MAArB,EAA6BD,KAA7B,CAAlB;AACAA,EAAAA,KAAK,CAACE,KAAN,GAAc,KAAKA,KAAL,CAAWF,KAAX,CAAiBC,MAAjB,EAAyBD,KAAzB,CAAd;AACAA,EAAAA,KAAK,CAACG,MAAN,GAAe,KAAKA,MAApB;AACAH,EAAAA,KAAK,CAACI,MAAN,GAAe,KAAKA,MAApB;AACAJ,EAAAA,KAAK,CAACK,QAAN,GAAiB,KAAKA,QAAtB;AACA,SAAOL,KAAP;AACD,CARD;AAUA;AACA;AACA;AACA;AACA;AACA;;;AAEAP,QAAQ,CAACK,SAAT,CAAmBQ,MAAnB,GAA4B,YAAU;AACpC,SAAO;AACLC,IAAAA,MAAM,EAAE,UADH;AAELX,IAAAA,SAAS,EAAE,KAAKA,SAFX;AAGLM,IAAAA,KAAK,EAAE,KAAKA,KAHP;AAILC,IAAAA,MAAM,EAAE,KAAKA,MAJR;AAKLC,IAAAA,MAAM,EAAE,KAAKA,MALR;AAMLC,IAAAA,QAAQ,EAAE,KAAKA;AANV,GAAP;AAQD,CATD;AAWA;AACA;AACA;AACA;AACA;AACA;;;AAEAZ,QAAQ,CAACK,SAAT,CAAmBU,QAAnB,GAA8B,YAAU;AACtC,SAAO,eAAe,KAAKZ,SAA3B;AACD,CAFD","sourcesContent":["/*!\n * Stylus - supports\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Atrule = require('./atrule');\n\n/**\n * Initialize a new supports node.\n *\n * @param {Expression} condition\n * @api public\n */\n\nvar Supports = module.exports = function Supports(condition){\n  Atrule.call(this, 'supports');\n  this.condition = condition;\n};\n\n/**\n * Inherit from `Atrule.prototype`.\n */\n\nSupports.prototype.__proto__ = Atrule.prototype;\n\n/**\n * Return a clone of this node.\n *\n * @return {Node}\n * @api public\n */\n\nSupports.prototype.clone = function(parent){\n  var clone = new Supports;\n  clone.condition = this.condition.clone(parent, clone);\n  clone.block = this.block.clone(parent, clone);\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  return clone;\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nSupports.prototype.toJSON = function(){\n  return {\n    __type: 'Supports',\n    condition: this.condition,\n    block: this.block,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n\n/**\n * Return @supports\n *\n * @return {String}\n * @api public\n */\n\nSupports.prototype.toString = function(){\n  return '@supports ' + this.condition;\n};\n"]},"metadata":{},"sourceType":"script"}