{"ast":null,"code":"var nodes = require('../nodes'),\n    Parser = require('../selector-parser');\n/**\n * Return a list with raw selectors parts\n * of the current group.\n *\n * For example:\n *\n *    .a, .b\n *      .c\n *        .d\n *          test: selectors() // => '.a,.b', '& .c', '& .d'\n *\n * @return {Expression}\n * @api public\n */\n\n\nmodule.exports = function selectors() {\n  var stack = this.selectorStack,\n      expr = new nodes.Expression(true);\n\n  if (stack.length) {\n    for (var i = 0; i < stack.length; i++) {\n      var group = stack[i],\n          nested;\n\n      if (group.length > 1) {\n        expr.push(new nodes.String(group.map(function (selector) {\n          nested = new Parser(selector.val).parse().nested;\n          return (nested && i ? '& ' : '') + selector.val;\n        }).join(',')));\n      } else {\n        var selector = group[0].val;\n        nested = new Parser(selector).parse().nested;\n        expr.push(new nodes.String((nested && i ? '& ' : '') + selector));\n      }\n    }\n  } else {\n    expr.push(new nodes.String('&'));\n  }\n\n  return expr;\n};","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/functions/selectors.js"],"names":["nodes","require","Parser","module","exports","selectors","stack","selectorStack","expr","Expression","length","i","group","nested","push","String","map","selector","val","parse","join"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAAnB;AAAA,IACIC,MAAM,GAAGD,OAAO,CAAC,oBAAD,CADpB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiB,SAASC,SAAT,GAAoB;AACnC,MAAIC,KAAK,GAAG,KAAKC,aAAjB;AAAA,MACIC,IAAI,GAAG,IAAIR,KAAK,CAACS,UAAV,CAAqB,IAArB,CADX;;AAGA,MAAIH,KAAK,CAACI,MAAV,EAAkB;AAChB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACI,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;AACrC,UAAIC,KAAK,GAAGN,KAAK,CAACK,CAAD,CAAjB;AAAA,UACIE,MADJ;;AAGA,UAAID,KAAK,CAACF,MAAN,GAAe,CAAnB,EAAsB;AACpBF,QAAAA,IAAI,CAACM,IAAL,CAAU,IAAId,KAAK,CAACe,MAAV,CAAiBH,KAAK,CAACI,GAAN,CAAU,UAASC,QAAT,EAAmB;AACtDJ,UAAAA,MAAM,GAAG,IAAIX,MAAJ,CAAWe,QAAQ,CAACC,GAApB,EAAyBC,KAAzB,GAAiCN,MAA1C;AACA,iBAAO,CAACA,MAAM,IAAIF,CAAV,GAAc,IAAd,GAAqB,EAAtB,IAA4BM,QAAQ,CAACC,GAA5C;AACD,SAH0B,EAGxBE,IAHwB,CAGnB,GAHmB,CAAjB,CAAV;AAID,OALD,MAKO;AACL,YAAIH,QAAQ,GAAGL,KAAK,CAAC,CAAD,CAAL,CAASM,GAAxB;AACAL,QAAAA,MAAM,GAAG,IAAIX,MAAJ,CAAWe,QAAX,EAAqBE,KAArB,GAA6BN,MAAtC;AACAL,QAAAA,IAAI,CAACM,IAAL,CAAU,IAAId,KAAK,CAACe,MAAV,CAAiB,CAACF,MAAM,IAAIF,CAAV,GAAc,IAAd,GAAqB,EAAtB,IAA4BM,QAA7C,CAAV;AACD;AACF;AACF,GAhBD,MAgBO;AACLT,IAAAA,IAAI,CAACM,IAAL,CAAU,IAAId,KAAK,CAACe,MAAV,CAAiB,GAAjB,CAAV;AACD;;AACD,SAAOP,IAAP;AACD,CAxBD","sourcesContent":["var nodes = require('../nodes')\n  , Parser = require('../selector-parser');\n\n/**\n * Return a list with raw selectors parts\n * of the current group.\n *\n * For example:\n *\n *    .a, .b\n *      .c\n *        .d\n *          test: selectors() // => '.a,.b', '& .c', '& .d'\n *\n * @return {Expression}\n * @api public\n */\n\nmodule.exports = function selectors(){\n  var stack = this.selectorStack\n    , expr = new nodes.Expression(true);\n\n  if (stack.length) {\n    for (var i = 0; i < stack.length; i++) {\n      var group = stack[i]\n        , nested;\n\n      if (group.length > 1) {\n        expr.push(new nodes.String(group.map(function(selector) {\n          nested = new Parser(selector.val).parse().nested;\n          return (nested && i ? '& ' : '') + selector.val;\n        }).join(',')))\n      } else {\n        var selector = group[0].val\n        nested = new Parser(selector).parse().nested;\n        expr.push(new nodes.String((nested && i ? '& ' : '') + selector));\n      }\n    }\n  } else {\n    expr.push(new nodes.String('&'));\n  }\n  return expr;\n};\n"]},"metadata":{},"sourceType":"script"}