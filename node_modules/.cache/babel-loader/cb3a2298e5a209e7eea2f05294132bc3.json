{"ast":null,"code":"var utils = require('../utils'),\n    path = require('path');\n/**\n*  Use the given `plugin`\n*  \n*  Examples:\n*\n*     use(\"plugins/add.js\")\n*\n*     width add(10, 100)\n*     // => width: 110\n*/\n\n\nfunction use(plugin, options) {\n  utils.assertString(plugin, 'plugin');\n\n  if (options) {\n    utils.assertType(options, 'object', 'options');\n    options = parseObject(options);\n  } // lookup\n\n\n  plugin = plugin.string;\n  var found = utils.lookup(plugin, this.options.paths, this.options.filename);\n  if (!found) throw new Error('failed to locate plugin file \"' + plugin + '\"'); // use\n\n  var fn = require(path.resolve(found));\n\n  if ('function' != typeof fn) {\n    throw new Error('plugin \"' + plugin + '\" does not export a function');\n  }\n\n  this.renderer.use(fn(options || this.options));\n}\n\nuse.params = ['plugin', 'options'];\nmodule.exports = use;\n/**\n * Attempt to parse object node to the javascript object.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction parseObject(obj) {\n  obj = obj.vals;\n\n  for (var key in obj) {\n    var nodes = obj[key].nodes[0].nodes;\n\n    if (nodes && nodes.length) {\n      obj[key] = [];\n\n      for (var i = 0, len = nodes.length; i < len; ++i) {\n        obj[key].push(convert(nodes[i]));\n      }\n    } else {\n      obj[key] = convert(obj[key].first);\n    }\n  }\n\n  return obj;\n\n  function convert(node) {\n    switch (node.nodeName) {\n      case 'object':\n        return parseObject(node);\n\n      case 'boolean':\n        return node.isTrue;\n\n      case 'unit':\n        return node.type ? node.toString() : +node.val;\n\n      case 'string':\n      case 'literal':\n        return node.val;\n\n      default:\n        return node.toString();\n    }\n  }\n}","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/functions/use.js"],"names":["utils","require","path","use","plugin","options","assertString","assertType","parseObject","string","found","lookup","paths","filename","Error","fn","resolve","renderer","params","module","exports","obj","vals","key","nodes","length","i","len","push","convert","first","node","nodeName","isTrue","type","toString","val"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAAnB;AAAA,IACIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CADlB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASE,GAAT,CAAaC,MAAb,EAAqBC,OAArB,EAA6B;AAC3BL,EAAAA,KAAK,CAACM,YAAN,CAAmBF,MAAnB,EAA2B,QAA3B;;AAEA,MAAIC,OAAJ,EAAa;AACXL,IAAAA,KAAK,CAACO,UAAN,CAAiBF,OAAjB,EAA0B,QAA1B,EAAoC,SAApC;AACAA,IAAAA,OAAO,GAAGG,WAAW,CAACH,OAAD,CAArB;AACD,GAN0B,CAQ3B;;;AACAD,EAAAA,MAAM,GAAGA,MAAM,CAACK,MAAhB;AACA,MAAIC,KAAK,GAAGV,KAAK,CAACW,MAAN,CAAaP,MAAb,EAAqB,KAAKC,OAAL,CAAaO,KAAlC,EAAyC,KAAKP,OAAL,CAAaQ,QAAtD,CAAZ;AACA,MAAI,CAACH,KAAL,EAAY,MAAM,IAAII,KAAJ,CAAU,mCAAmCV,MAAnC,GAA4C,GAAtD,CAAN,CAXe,CAa3B;;AACA,MAAIW,EAAE,GAAGd,OAAO,CAACC,IAAI,CAACc,OAAL,CAAaN,KAAb,CAAD,CAAhB;;AACA,MAAI,cAAc,OAAOK,EAAzB,EAA6B;AAC3B,UAAM,IAAID,KAAJ,CAAU,aAAaV,MAAb,GAAsB,8BAAhC,CAAN;AACD;;AACD,OAAKa,QAAL,CAAcd,GAAd,CAAkBY,EAAE,CAACV,OAAO,IAAI,KAAKA,OAAjB,CAApB;AACD;;AACDF,GAAG,CAACe,MAAJ,GAAa,CAAC,QAAD,EAAW,SAAX,CAAb;AACAC,MAAM,CAACC,OAAP,GAAiBjB,GAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASK,WAAT,CAAqBa,GAArB,EAAyB;AACvBA,EAAAA,GAAG,GAAGA,GAAG,CAACC,IAAV;;AACA,OAAK,IAAIC,GAAT,IAAgBF,GAAhB,EAAqB;AACnB,QAAIG,KAAK,GAAGH,GAAG,CAACE,GAAD,CAAH,CAASC,KAAT,CAAe,CAAf,EAAkBA,KAA9B;;AACA,QAAIA,KAAK,IAAIA,KAAK,CAACC,MAAnB,EAA2B;AACzBJ,MAAAA,GAAG,CAACE,GAAD,CAAH,GAAW,EAAX;;AACA,WAAK,IAAIG,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGH,KAAK,CAACC,MAA5B,EAAoCC,CAAC,GAAGC,GAAxC,EAA6C,EAAED,CAA/C,EAAkD;AAChDL,QAAAA,GAAG,CAACE,GAAD,CAAH,CAASK,IAAT,CAAcC,OAAO,CAACL,KAAK,CAACE,CAAD,CAAN,CAArB;AACD;AACF,KALD,MAKO;AACLL,MAAAA,GAAG,CAACE,GAAD,CAAH,GAAWM,OAAO,CAACR,GAAG,CAACE,GAAD,CAAH,CAASO,KAAV,CAAlB;AACD;AACF;;AACD,SAAOT,GAAP;;AAEA,WAASQ,OAAT,CAAiBE,IAAjB,EAAsB;AACpB,YAAQA,IAAI,CAACC,QAAb;AACE,WAAK,QAAL;AACE,eAAOxB,WAAW,CAACuB,IAAD,CAAlB;;AACF,WAAK,SAAL;AACE,eAAOA,IAAI,CAACE,MAAZ;;AACF,WAAK,MAAL;AACE,eAAOF,IAAI,CAACG,IAAL,GAAYH,IAAI,CAACI,QAAL,EAAZ,GAA8B,CAACJ,IAAI,CAACK,GAA3C;;AACF,WAAK,QAAL;AACA,WAAK,SAAL;AACE,eAAOL,IAAI,CAACK,GAAZ;;AACF;AACE,eAAOL,IAAI,CAACI,QAAL,EAAP;AAXJ;AAaD;AACF","sourcesContent":["var utils = require('../utils')\n  , path = require('path');\n\n/**\n*  Use the given `plugin`\n*  \n*  Examples:\n*\n*     use(\"plugins/add.js\")\n*\n*     width add(10, 100)\n*     // => width: 110\n*/\n\nfunction use(plugin, options){\n  utils.assertString(plugin, 'plugin');\n\n  if (options) {\n    utils.assertType(options, 'object', 'options');\n    options = parseObject(options);\n  }\n\n  // lookup\n  plugin = plugin.string;\n  var found = utils.lookup(plugin, this.options.paths, this.options.filename);\n  if (!found) throw new Error('failed to locate plugin file \"' + plugin + '\"');\n\n  // use\n  var fn = require(path.resolve(found));\n  if ('function' != typeof fn) {\n    throw new Error('plugin \"' + plugin + '\" does not export a function');\n  }\n  this.renderer.use(fn(options || this.options));\n}\nuse.params = ['plugin', 'options'];\nmodule.exports = use;\n\n/**\n * Attempt to parse object node to the javascript object.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction parseObject(obj){\n  obj = obj.vals;\n  for (var key in obj) {\n    var nodes = obj[key].nodes[0].nodes;\n    if (nodes && nodes.length) {\n      obj[key] = [];\n      for (var i = 0, len = nodes.length; i < len; ++i) {\n        obj[key].push(convert(nodes[i]));\n      }\n    } else {\n      obj[key] = convert(obj[key].first);\n    }\n  }\n  return obj;\n\n  function convert(node){\n    switch (node.nodeName) {\n      case 'object':\n        return parseObject(node);\n      case 'boolean':\n        return node.isTrue;\n      case 'unit':\n        return node.type ? node.toString() : +node.val;\n      case 'string':\n      case 'literal':\n        return node.val;\n      default:\n        return node.toString();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}