{"ast":null,"code":"/*!\n * Stylus - Root\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nvar Node = require('./node');\n/**\n * Initialize a new `Root` node.\n *\n * @api public\n */\n\n\nvar Root = module.exports = function Root() {\n  this.nodes = [];\n};\n/**\n * Inherit from `Node.prototype`.\n */\n\n\nRoot.prototype.__proto__ = Node.prototype;\n/**\n * Push a `node` to this block.\n *\n * @param {Node} node\n * @api public\n */\n\nRoot.prototype.push = function (node) {\n  this.nodes.push(node);\n};\n/**\n * Unshift a `node` to this block.\n *\n * @param {Node} node\n * @api public\n */\n\n\nRoot.prototype.unshift = function (node) {\n  this.nodes.unshift(node);\n};\n/**\n * Return a clone of this node.\n *\n * @return {Node}\n * @api public\n */\n\n\nRoot.prototype.clone = function () {\n  var clone = new Root();\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  this.nodes.forEach(function (node) {\n    clone.push(node.clone(clone, clone));\n  });\n  return clone;\n};\n/**\n * Return \"root\".\n *\n * @return {String}\n * @api public\n */\n\n\nRoot.prototype.toString = function () {\n  return '[Root]';\n};\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\n\nRoot.prototype.toJSON = function () {\n  return {\n    __type: 'Root',\n    nodes: this.nodes,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/nodes/root.js"],"names":["Node","require","Root","module","exports","nodes","prototype","__proto__","push","node","unshift","clone","lineno","column","filename","forEach","toString","toJSON","__type"],"mappings":"AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;;;AAEA,IAAIC,IAAI,GAAGC,MAAM,CAACC,OAAP,GAAiB,SAASF,IAAT,GAAe;AACzC,OAAKG,KAAL,GAAa,EAAb;AACD,CAFD;AAIA;AACA;AACA;;;AAEAH,IAAI,CAACI,SAAL,CAAeC,SAAf,GAA2BP,IAAI,CAACM,SAAhC;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAJ,IAAI,CAACI,SAAL,CAAeE,IAAf,GAAsB,UAASC,IAAT,EAAc;AAClC,OAAKJ,KAAL,CAAWG,IAAX,CAAgBC,IAAhB;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAEAP,IAAI,CAACI,SAAL,CAAeI,OAAf,GAAyB,UAASD,IAAT,EAAc;AACrC,OAAKJ,KAAL,CAAWK,OAAX,CAAmBD,IAAnB;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAEAP,IAAI,CAACI,SAAL,CAAeK,KAAf,GAAuB,YAAU;AAC/B,MAAIA,KAAK,GAAG,IAAIT,IAAJ,EAAZ;AACAS,EAAAA,KAAK,CAACC,MAAN,GAAe,KAAKA,MAApB;AACAD,EAAAA,KAAK,CAACE,MAAN,GAAe,KAAKA,MAApB;AACAF,EAAAA,KAAK,CAACG,QAAN,GAAiB,KAAKA,QAAtB;AACA,OAAKT,KAAL,CAAWU,OAAX,CAAmB,UAASN,IAAT,EAAc;AAC/BE,IAAAA,KAAK,CAACH,IAAN,CAAWC,IAAI,CAACE,KAAL,CAAWA,KAAX,EAAkBA,KAAlB,CAAX;AACD,GAFD;AAGA,SAAOA,KAAP;AACD,CATD;AAWA;AACA;AACA;AACA;AACA;AACA;;;AAEAT,IAAI,CAACI,SAAL,CAAeU,QAAf,GAA0B,YAAU;AAClC,SAAO,QAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAEAd,IAAI,CAACI,SAAL,CAAeW,MAAf,GAAwB,YAAU;AAChC,SAAO;AACLC,IAAAA,MAAM,EAAE,MADH;AAELb,IAAAA,KAAK,EAAE,KAAKA,KAFP;AAGLO,IAAAA,MAAM,EAAE,KAAKA,MAHR;AAILC,IAAAA,MAAM,EAAE,KAAKA,MAJR;AAKLC,IAAAA,QAAQ,EAAE,KAAKA;AALV,GAAP;AAOD,CARD","sourcesContent":["\n/*!\n * Stylus - Root\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node');\n\n/**\n * Initialize a new `Root` node.\n *\n * @api public\n */\n\nvar Root = module.exports = function Root(){\n  this.nodes = [];\n};\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nRoot.prototype.__proto__ = Node.prototype;\n\n/**\n * Push a `node` to this block.\n *\n * @param {Node} node\n * @api public\n */\n\nRoot.prototype.push = function(node){\n  this.nodes.push(node);\n};\n\n/**\n * Unshift a `node` to this block.\n *\n * @param {Node} node\n * @api public\n */\n\nRoot.prototype.unshift = function(node){\n  this.nodes.unshift(node);\n};\n\n/**\n * Return a clone of this node.\n *\n * @return {Node}\n * @api public\n */\n\nRoot.prototype.clone = function(){\n  var clone = new Root();\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  this.nodes.forEach(function(node){\n    clone.push(node.clone(clone, clone));\n  });\n  return clone;\n};\n\n/**\n * Return \"root\".\n *\n * @return {String}\n * @api public\n */\n\nRoot.prototype.toString = function(){\n  return '[Root]';\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nRoot.prototype.toJSON = function(){\n  return {\n    __type: 'Root',\n    nodes: this.nodes,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n"]},"metadata":{},"sourceType":"script"}