{"ast":null,"code":"var utils = require('../utils'),\n    nodes = require('../nodes');\n/**\n * Blend the `top` color over the `bottom`\n *\n * Examples:\n *\n *     blend(rgba(#FFF, 0.5), #000)\n *     // => #808080\n * \n *     blend(rgba(#FFDE00,.42), #19C261)\n *     // => #7ace38\n * \n *     blend(rgba(lime, 0.5), rgba(red, 0.25))\n *     // => rgba(128,128,0,0.625)\n *\n * @param {RGBA|HSLA} top\n * @param {RGBA|HSLA} [bottom=#fff]\n * @return {RGBA}\n * @api public\n */\n\n\nfunction blend(top, bottom) {\n  // TODO: different blend modes like overlay etc.\n  utils.assertColor(top);\n  top = top.rgba;\n  bottom = bottom || new nodes.RGBA(255, 255, 255, 1);\n  utils.assertColor(bottom);\n  bottom = bottom.rgba;\n  return new nodes.RGBA(top.r * top.a + bottom.r * (1 - top.a), top.g * top.a + bottom.g * (1 - top.a), top.b * top.a + bottom.b * (1 - top.a), top.a + bottom.a - top.a * bottom.a);\n}\n\n;\nblend.params = ['top', 'bottom'];\nmodule.exports = blend;","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/functions/blend.js"],"names":["utils","require","nodes","blend","top","bottom","assertColor","rgba","RGBA","r","a","g","b","params","module","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAAnB;AAAA,IACIC,KAAK,GAAGD,OAAO,CAAC,UAAD,CADnB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASE,KAAT,CAAeC,GAAf,EAAoBC,MAApB,EAA2B;AACzB;AACAL,EAAAA,KAAK,CAACM,WAAN,CAAkBF,GAAlB;AACAA,EAAAA,GAAG,GAAGA,GAAG,CAACG,IAAV;AACAF,EAAAA,MAAM,GAAGA,MAAM,IAAI,IAAIH,KAAK,CAACM,IAAV,CAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB,EAA8B,CAA9B,CAAnB;AACAR,EAAAA,KAAK,CAACM,WAAN,CAAkBD,MAAlB;AACAA,EAAAA,MAAM,GAAGA,MAAM,CAACE,IAAhB;AAEA,SAAO,IAAIL,KAAK,CAACM,IAAV,CACLJ,GAAG,CAACK,CAAJ,GAAQL,GAAG,CAACM,CAAZ,GAAgBL,MAAM,CAACI,CAAP,IAAY,IAAIL,GAAG,CAACM,CAApB,CADX,EAELN,GAAG,CAACO,CAAJ,GAAQP,GAAG,CAACM,CAAZ,GAAgBL,MAAM,CAACM,CAAP,IAAY,IAAIP,GAAG,CAACM,CAApB,CAFX,EAGLN,GAAG,CAACQ,CAAJ,GAAQR,GAAG,CAACM,CAAZ,GAAgBL,MAAM,CAACO,CAAP,IAAY,IAAIR,GAAG,CAACM,CAApB,CAHX,EAILN,GAAG,CAACM,CAAJ,GAAQL,MAAM,CAACK,CAAf,GAAmBN,GAAG,CAACM,CAAJ,GAAQL,MAAM,CAACK,CAJ7B,CAAP;AAKD;;AAAA;AACDP,KAAK,CAACU,MAAN,GAAe,CAAC,KAAD,EAAQ,QAAR,CAAf;AACAC,MAAM,CAACC,OAAP,GAAiBZ,KAAjB","sourcesContent":["var utils = require('../utils')\n  , nodes = require('../nodes');\n\n/**\n * Blend the `top` color over the `bottom`\n *\n * Examples:\n *\n *     blend(rgba(#FFF, 0.5), #000)\n *     // => #808080\n * \n *     blend(rgba(#FFDE00,.42), #19C261)\n *     // => #7ace38\n * \n *     blend(rgba(lime, 0.5), rgba(red, 0.25))\n *     // => rgba(128,128,0,0.625)\n *\n * @param {RGBA|HSLA} top\n * @param {RGBA|HSLA} [bottom=#fff]\n * @return {RGBA}\n * @api public\n */\n\nfunction blend(top, bottom){\n  // TODO: different blend modes like overlay etc.\n  utils.assertColor(top);\n  top = top.rgba;\n  bottom = bottom || new nodes.RGBA(255, 255, 255, 1);\n  utils.assertColor(bottom);\n  bottom = bottom.rgba;\n\n  return new nodes.RGBA(\n    top.r * top.a + bottom.r * (1 - top.a),\n    top.g * top.a + bottom.g * (1 - top.a),\n    top.b * top.a + bottom.b * (1 - top.a),\n    top.a + bottom.a - top.a * bottom.a);\n};\nblend.params = ['top', 'bottom'];\nmodule.exports = blend;\n"]},"metadata":{},"sourceType":"script"}