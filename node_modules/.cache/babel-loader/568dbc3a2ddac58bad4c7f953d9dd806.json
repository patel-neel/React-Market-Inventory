{"ast":null,"code":"var nodes = require('../nodes'),\n    hsla = require('./hsla'),\n    component = require('./component');\n/**\n * Return the lightness component of the given `color`,\n * or set the lightness component to the optional second `value` argument.\n *\n * Examples:\n *\n *    lightness(#00c)\n *    // => 100%\n *\n *    lightness(#00c, 80%)\n *    // => #99f\n *\n * @param {RGBA|HSLA} color\n * @param {Unit} [value]\n * @return {Unit|RGBA}\n * @api public\n */\n\n\nfunction lightness(color, value) {\n  if (value) {\n    var hslaColor = color.hsla;\n    return hsla(new nodes.Unit(hslaColor.h), new nodes.Unit(hslaColor.s), value, new nodes.Unit(hslaColor.a));\n  }\n\n  return component(color, new nodes.String('lightness'));\n}\n\n;\nlightness.params = ['color', 'value'];\nmodule.exports = lightness;","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/functions/lightness.js"],"names":["nodes","require","hsla","component","lightness","color","value","hslaColor","Unit","h","s","a","String","params","module","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAAnB;AAAA,IACIC,IAAI,GAAGD,OAAO,CAAC,QAAD,CADlB;AAAA,IAEIE,SAAS,GAAGF,OAAO,CAAC,aAAD,CAFvB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASG,SAAT,CAAmBC,KAAnB,EAA0BC,KAA1B,EAAgC;AAC9B,MAAIA,KAAJ,EAAW;AACT,QAAIC,SAAS,GAAGF,KAAK,CAACH,IAAtB;AACA,WAAOA,IAAI,CACT,IAAIF,KAAK,CAACQ,IAAV,CAAeD,SAAS,CAACE,CAAzB,CADS,EAET,IAAIT,KAAK,CAACQ,IAAV,CAAeD,SAAS,CAACG,CAAzB,CAFS,EAGTJ,KAHS,EAIT,IAAIN,KAAK,CAACQ,IAAV,CAAeD,SAAS,CAACI,CAAzB,CAJS,CAAX;AAMD;;AACD,SAAOR,SAAS,CAACE,KAAD,EAAQ,IAAIL,KAAK,CAACY,MAAV,CAAiB,WAAjB,CAAR,CAAhB;AACD;;AAAA;AACDR,SAAS,CAACS,MAAV,GAAmB,CAAC,OAAD,EAAU,OAAV,CAAnB;AACAC,MAAM,CAACC,OAAP,GAAiBX,SAAjB","sourcesContent":["var nodes = require('../nodes')\n  , hsla = require('./hsla')\n  , component = require('./component');\n\n/**\n * Return the lightness component of the given `color`,\n * or set the lightness component to the optional second `value` argument.\n *\n * Examples:\n *\n *    lightness(#00c)\n *    // => 100%\n *\n *    lightness(#00c, 80%)\n *    // => #99f\n *\n * @param {RGBA|HSLA} color\n * @param {Unit} [value]\n * @return {Unit|RGBA}\n * @api public\n */\n\nfunction lightness(color, value){\n  if (value) {\n    var hslaColor = color.hsla;\n    return hsla(\n      new nodes.Unit(hslaColor.h),\n      new nodes.Unit(hslaColor.s),\n      value,\n      new nodes.Unit(hslaColor.a)\n    )\n  }\n  return component(color, new nodes.String('lightness'));\n};\nlightness.params = ['color', 'value'];\nmodule.exports = lightness;\n"]},"metadata":{},"sourceType":"script"}