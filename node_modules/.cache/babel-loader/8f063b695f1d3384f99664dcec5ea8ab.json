{"ast":null,"code":"/*!\n * Stylus - HSLA\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nvar Node = require('./node'),\n    nodes = require('./');\n/**\n * Initialize a new `HSLA` with the given h,s,l,a component values.\n *\n * @param {Number} h\n * @param {Number} s\n * @param {Number} l\n * @param {Number} a\n * @api public\n */\n\n\nvar HSLA = exports = module.exports = function HSLA(h, s, l, a) {\n  Node.call(this);\n  this.h = clampDegrees(h);\n  this.s = clampPercentage(s);\n  this.l = clampPercentage(l);\n  this.a = clampAlpha(a);\n  this.hsla = this;\n};\n/**\n * Inherit from `Node.prototype`.\n */\n\n\nHSLA.prototype.__proto__ = Node.prototype;\n/**\n * Return hsla(n,n,n,n).\n *\n * @return {String}\n * @api public\n */\n\nHSLA.prototype.toString = function () {\n  return 'hsla(' + this.h + ',' + this.s.toFixed(0) + '%,' + this.l.toFixed(0) + '%,' + this.a + ')';\n};\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\n\nHSLA.prototype.clone = function (parent) {\n  var clone = new HSLA(this.h, this.s, this.l, this.a);\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  return clone;\n};\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\n\nHSLA.prototype.toJSON = function () {\n  return {\n    __type: 'HSLA',\n    h: this.h,\n    s: this.s,\n    l: this.l,\n    a: this.a,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n/**\n * Return rgba `RGBA` representation.\n *\n * @return {RGBA}\n * @api public\n */\n\n\nHSLA.prototype.__defineGetter__('rgba', function () {\n  return nodes.RGBA.fromHSLA(this);\n});\n/**\n * Return hash.\n *\n * @return {String}\n * @api public\n */\n\n\nHSLA.prototype.__defineGetter__('hash', function () {\n  return this.rgba.toString();\n});\n/**\n * Add h,s,l to the current component values.\n *\n * @param {Number} h\n * @param {Number} s\n * @param {Number} l\n * @return {HSLA} new node\n * @api public\n */\n\n\nHSLA.prototype.add = function (h, s, l) {\n  return new HSLA(this.h + h, this.s + s, this.l + l, this.a);\n};\n/**\n * Subtract h,s,l from the current component values.\n *\n * @param {Number} h\n * @param {Number} s\n * @param {Number} l\n * @return {HSLA} new node\n * @api public\n */\n\n\nHSLA.prototype.sub = function (h, s, l) {\n  return this.add(-h, -s, -l);\n};\n/**\n * Operate on `right` with the given `op`.\n *\n * @param {String} op\n * @param {Node} right\n * @return {Node}\n * @api public\n */\n\n\nHSLA.prototype.operate = function (op, right) {\n  switch (op) {\n    case '==':\n    case '!=':\n    case '<=':\n    case '>=':\n    case '<':\n    case '>':\n    case 'is a':\n    case '||':\n    case '&&':\n      return this.rgba.operate(op, right);\n\n    default:\n      return this.rgba.operate(op, right).hsla;\n  }\n};\n/**\n * Return `HSLA` representation of the given `color`.\n *\n * @param {RGBA} color\n * @return {HSLA}\n * @api public\n */\n\n\nexports.fromRGBA = function (rgba) {\n  var r = rgba.r / 255,\n      g = rgba.g / 255,\n      b = rgba.b / 255,\n      a = rgba.a;\n  var min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      l = (max + min) / 2,\n      d = max - min,\n      h,\n      s;\n\n  switch (max) {\n    case min:\n      h = 0;\n      break;\n\n    case r:\n      h = 60 * (g - b) / d;\n      break;\n\n    case g:\n      h = 60 * (b - r) / d + 120;\n      break;\n\n    case b:\n      h = 60 * (r - g) / d + 240;\n      break;\n  }\n\n  if (max == min) {\n    s = 0;\n  } else if (l < .5) {\n    s = d / (2 * l);\n  } else {\n    s = d / (2 - 2 * l);\n  }\n\n  h %= 360;\n  s *= 100;\n  l *= 100;\n  return new HSLA(h, s, l, a);\n};\n/**\n * Adjust lightness by `percent`.\n *\n * @param {Number} percent\n * @return {HSLA} for chaining\n * @api public\n */\n\n\nHSLA.prototype.adjustLightness = function (percent) {\n  this.l = clampPercentage(this.l + this.l * (percent / 100));\n  return this;\n};\n/**\n * Adjust hue by `deg`.\n *\n * @param {Number} deg\n * @return {HSLA} for chaining\n * @api public\n */\n\n\nHSLA.prototype.adjustHue = function (deg) {\n  this.h = clampDegrees(this.h + deg);\n  return this;\n};\n/**\n * Clamp degree `n` >= 0 and <= 360.\n *\n * @param {Number} n\n * @return {Number}\n * @api private\n */\n\n\nfunction clampDegrees(n) {\n  n = n % 360;\n  return n >= 0 ? n : 360 + n;\n}\n/**\n * Clamp percentage `n` >= 0 and <= 100.\n *\n * @param {Number} n\n * @return {Number}\n * @api private\n */\n\n\nfunction clampPercentage(n) {\n  return Math.max(0, Math.min(n, 100));\n}\n/**\n * Clamp alpha `n` >= 0 and <= 1.\n *\n * @param {Number} n\n * @return {Number}\n * @api private\n */\n\n\nfunction clampAlpha(n) {\n  return Math.max(0, Math.min(n, 1));\n}","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/nodes/hsla.js"],"names":["Node","require","nodes","HSLA","exports","module","h","s","l","a","call","clampDegrees","clampPercentage","clampAlpha","hsla","prototype","__proto__","toString","toFixed","clone","parent","lineno","column","filename","toJSON","__type","__defineGetter__","RGBA","fromHSLA","rgba","add","sub","operate","op","right","fromRGBA","r","g","b","min","Math","max","d","adjustLightness","percent","adjustHue","deg","n"],"mappings":"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","sourcesContent":["\n/*!\n * Stylus - HSLA\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node')\n  , nodes = require('./');\n\n/**\n * Initialize a new `HSLA` with the given h,s,l,a component values.\n *\n * @param {Number} h\n * @param {Number} s\n * @param {Number} l\n * @param {Number} a\n * @api public\n */\n\nvar HSLA = exports = module.exports = function HSLA(h,s,l,a){\n  Node.call(this);\n  this.h = clampDegrees(h);\n  this.s = clampPercentage(s);\n  this.l = clampPercentage(l);\n  this.a = clampAlpha(a);\n  this.hsla = this;\n};\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nHSLA.prototype.__proto__ = Node.prototype;\n\n/**\n * Return hsla(n,n,n,n).\n *\n * @return {String}\n * @api public\n */\n\nHSLA.prototype.toString = function(){\n  return 'hsla('\n    + this.h + ','\n    + this.s.toFixed(0) + '%,'\n    + this.l.toFixed(0) + '%,'\n    + this.a + ')';\n};\n\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nHSLA.prototype.clone = function(parent){\n  var clone = new HSLA(\n      this.h\n    , this.s\n    , this.l\n    , this.a);\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  return clone;\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nHSLA.prototype.toJSON = function(){\n  return {\n    __type: 'HSLA',\n    h: this.h,\n    s: this.s,\n    l: this.l,\n    a: this.a,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n\n/**\n * Return rgba `RGBA` representation.\n *\n * @return {RGBA}\n * @api public\n */\n\nHSLA.prototype.__defineGetter__('rgba', function(){\n  return nodes.RGBA.fromHSLA(this);\n});\n\n/**\n * Return hash.\n *\n * @return {String}\n * @api public\n */\n\nHSLA.prototype.__defineGetter__('hash', function(){\n  return this.rgba.toString();\n});\n\n/**\n * Add h,s,l to the current component values.\n *\n * @param {Number} h\n * @param {Number} s\n * @param {Number} l\n * @return {HSLA} new node\n * @api public\n */\n\nHSLA.prototype.add = function(h,s,l){\n  return new HSLA(\n      this.h + h\n    , this.s + s\n    , this.l + l\n    , this.a);\n};\n\n/**\n * Subtract h,s,l from the current component values.\n *\n * @param {Number} h\n * @param {Number} s\n * @param {Number} l\n * @return {HSLA} new node\n * @api public\n */\n\nHSLA.prototype.sub = function(h,s,l){\n  return this.add(-h, -s, -l);\n};\n\n/**\n * Operate on `right` with the given `op`.\n *\n * @param {String} op\n * @param {Node} right\n * @return {Node}\n * @api public\n */\n\nHSLA.prototype.operate = function(op, right){\n  switch (op) {\n    case '==':\n    case '!=':\n    case '<=':\n    case '>=':\n    case '<':\n    case '>':\n    case 'is a':\n    case '||':\n    case '&&':\n      return this.rgba.operate(op, right);\n    default:\n      return this.rgba.operate(op, right).hsla;\n  }\n};\n\n/**\n * Return `HSLA` representation of the given `color`.\n *\n * @param {RGBA} color\n * @return {HSLA}\n * @api public\n */\n\nexports.fromRGBA = function(rgba){\n  var r = rgba.r / 255\n    , g = rgba.g / 255\n    , b = rgba.b / 255\n    , a = rgba.a;\n\n  var min = Math.min(r,g,b)\n    , max = Math.max(r,g,b)\n    , l = (max + min) / 2\n    , d = max - min\n    , h, s;\n\n  switch (max) {\n    case min: h = 0; break;\n    case r: h = 60 * (g-b) / d; break;\n    case g: h = 60 * (b-r) / d + 120; break;\n    case b: h = 60 * (r-g) / d + 240; break;\n  }\n\n  if (max == min) {\n    s = 0;\n  } else if (l < .5) {\n    s = d / (2 * l);\n  } else {\n    s = d / (2 - 2 * l);\n  }\n\n  h %= 360;\n  s *= 100;\n  l *= 100;\n\n  return new HSLA(h,s,l,a);\n};\n\n/**\n * Adjust lightness by `percent`.\n *\n * @param {Number} percent\n * @return {HSLA} for chaining\n * @api public\n */\n\nHSLA.prototype.adjustLightness = function(percent){\n  this.l = clampPercentage(this.l + this.l * (percent / 100));\n  return this;\n};\n\n/**\n * Adjust hue by `deg`.\n *\n * @param {Number} deg\n * @return {HSLA} for chaining\n * @api public\n */\n\nHSLA.prototype.adjustHue = function(deg){\n  this.h = clampDegrees(this.h + deg);\n  return this;\n};\n\n/**\n * Clamp degree `n` >= 0 and <= 360.\n *\n * @param {Number} n\n * @return {Number}\n * @api private\n */\n\nfunction clampDegrees(n) {\n  n = n % 360;\n  return n >= 0 ? n : 360 + n;\n}\n\n/**\n * Clamp percentage `n` >= 0 and <= 100.\n *\n * @param {Number} n\n * @return {Number}\n * @api private\n */\n\nfunction clampPercentage(n) {\n  return Math.max(0, Math.min(n, 100));\n}\n\n/**\n * Clamp alpha `n` >= 0 and <= 1.\n *\n * @param {Number} n\n * @return {Number}\n * @api private\n */\n\nfunction clampAlpha(n) {\n  return Math.max(0, Math.min(n, 1));\n}\n"]},"metadata":{},"sourceType":"script"}