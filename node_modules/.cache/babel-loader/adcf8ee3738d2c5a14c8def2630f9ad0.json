{"ast":null,"code":"/*!\n * Stylus - Normalizer\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nvar Visitor = require('./'),\n    nodes = require('../nodes'),\n    utils = require('../utils');\n/**\n * Initialize a new `Normalizer` with the given `root` Node.\n *\n * This visitor implements the first stage of the duel-stage\n * compiler, tasked with stripping the \"garbage\" from\n * the evaluated nodes, ditching null rules, resolving\n * ruleset selectors etc. This step performs the logic\n * necessary to facilitate the \"@extend\" functionality,\n * as these must be resolved _before_ buffering output.\n *\n * @param {Node} root\n * @api public\n */\n\n\nvar Normalizer = module.exports = function Normalizer(root, options) {\n  options = options || {};\n  Visitor.call(this, root);\n  this.hoist = options['hoist atrules'];\n  this.stack = [];\n  this.map = {};\n  this.imports = [];\n};\n/**\n * Inherit from `Visitor.prototype`.\n */\n\n\nNormalizer.prototype.__proto__ = Visitor.prototype;\n/**\n * Normalize the node tree.\n *\n * @return {Node}\n * @api private\n */\n\nNormalizer.prototype.normalize = function () {\n  var ret = this.visit(this.root);\n\n  if (this.hoist) {\n    // hoist @import\n    if (this.imports.length) ret.nodes = this.imports.concat(ret.nodes); // hoist @charset\n\n    if (this.charset) ret.nodes = [this.charset].concat(ret.nodes);\n  }\n\n  return ret;\n};\n/**\n * Bubble up the given `node`.\n *\n * @param {Node} node\n * @api private\n */\n\n\nNormalizer.prototype.bubble = function (node) {\n  var props = [],\n      other = [],\n      self = this;\n\n  function filterProps(block) {\n    block.nodes.forEach(function (node) {\n      node = self.visit(node);\n\n      switch (node.nodeName) {\n        case 'property':\n          props.push(node);\n          break;\n\n        case 'block':\n          filterProps(node);\n          break;\n\n        default:\n          other.push(node);\n      }\n    });\n  }\n\n  filterProps(node.block);\n\n  if (props.length) {\n    var selector = new nodes.Selector([new nodes.Literal('&')]);\n    selector.lineno = node.lineno;\n    selector.column = node.column;\n    selector.filename = node.filename;\n    selector.val = '&';\n    var group = new nodes.Group();\n    group.lineno = node.lineno;\n    group.column = node.column;\n    group.filename = node.filename;\n    var block = new nodes.Block(node.block, group);\n    block.lineno = node.lineno;\n    block.column = node.column;\n    block.filename = node.filename;\n    props.forEach(function (prop) {\n      block.push(prop);\n    });\n    group.push(selector);\n    group.block = block;\n    node.block.nodes = [];\n    node.block.push(group);\n    other.forEach(function (n) {\n      node.block.push(n);\n    });\n    var group = this.closestGroup(node.block);\n    if (group) node.group = group.clone();\n    node.bubbled = true;\n  }\n};\n/**\n * Return group closest to the given `block`.\n *\n * @param {Block} block\n * @return {Group}\n * @api private\n */\n\n\nNormalizer.prototype.closestGroup = function (block) {\n  var parent = block.parent,\n      node;\n\n  while (parent && (node = parent.node)) {\n    if ('group' == node.nodeName) return node;\n    parent = node.block && node.block.parent;\n  }\n};\n/**\n * Visit Root.\n */\n\n\nNormalizer.prototype.visitRoot = function (block) {\n  var ret = new nodes.Root(),\n      node;\n\n  for (var i = 0; i < block.nodes.length; ++i) {\n    node = block.nodes[i];\n\n    switch (node.nodeName) {\n      case 'null':\n      case 'expression':\n      case 'function':\n      case 'unit':\n      case 'atblock':\n        continue;\n\n      default:\n        this.rootIndex = i;\n        ret.push(this.visit(node));\n    }\n  }\n\n  return ret;\n};\n/**\n * Visit Property.\n */\n\n\nNormalizer.prototype.visitProperty = function (prop) {\n  this.visit(prop.expr);\n  return prop;\n};\n/**\n * Visit Expression.\n */\n\n\nNormalizer.prototype.visitExpression = function (expr) {\n  expr.nodes = expr.nodes.map(function (node) {\n    // returns `block` literal if mixin's block\n    // is used as part of a property value\n    if ('block' == node.nodeName) {\n      var literal = new nodes.Literal('block');\n      literal.lineno = expr.lineno;\n      literal.column = expr.column;\n      return literal;\n    }\n\n    return node;\n  });\n  return expr;\n};\n/**\n * Visit Block.\n */\n\n\nNormalizer.prototype.visitBlock = function (block) {\n  var node;\n\n  if (block.hasProperties) {\n    for (var i = 0, len = block.nodes.length; i < len; ++i) {\n      node = block.nodes[i];\n\n      switch (node.nodeName) {\n        case 'null':\n        case 'expression':\n        case 'function':\n        case 'group':\n        case 'unit':\n        case 'atblock':\n          continue;\n\n        default:\n          block.nodes[i] = this.visit(node);\n      }\n    }\n  } // nesting\n\n\n  for (var i = 0, len = block.nodes.length; i < len; ++i) {\n    node = block.nodes[i];\n    block.nodes[i] = this.visit(node);\n  }\n\n  return block;\n};\n/**\n * Visit Group.\n */\n\n\nNormalizer.prototype.visitGroup = function (group) {\n  var stack = this.stack,\n      map = this.map,\n      parts; // normalize interpolated selectors with comma\n\n  group.nodes.forEach(function (selector, i) {\n    if (!~selector.val.indexOf(',')) return;\n\n    if (~selector.val.indexOf('\\\\,')) {\n      selector.val = selector.val.replace(/\\\\,/g, ',');\n      return;\n    }\n\n    parts = selector.val.split(',');\n    var root = '/' == selector.val.charAt(0),\n        part,\n        s;\n\n    for (var k = 0, len = parts.length; k < len; ++k) {\n      part = parts[k].trim();\n\n      if (root && k > 0 && !~part.indexOf('&')) {\n        part = '/' + part;\n      }\n\n      s = new nodes.Selector([new nodes.Literal(part)]);\n      s.val = part;\n      s.block = group.block;\n      group.nodes[i++] = s;\n    }\n  });\n  stack.push(group.nodes);\n  var selectors = utils.compileSelectors(stack, true); // map for extension lookup\n\n  selectors.forEach(function (selector) {\n    map[selector] = map[selector] || [];\n    map[selector].push(group);\n  }); // extensions\n\n  this.extend(group, selectors);\n  stack.pop();\n  return group;\n};\n/**\n * Visit Function.\n */\n\n\nNormalizer.prototype.visitFunction = function () {\n  return nodes.null;\n};\n/**\n * Visit Media.\n */\n\n\nNormalizer.prototype.visitMedia = function (media) {\n  var medias = [],\n      group = this.closestGroup(media.block),\n      parent;\n\n  function mergeQueries(block) {\n    block.nodes.forEach(function (node, i) {\n      switch (node.nodeName) {\n        case 'media':\n          node.val = media.val.merge(node.val);\n          medias.push(node);\n          block.nodes[i] = nodes.null;\n          break;\n\n        case 'block':\n          mergeQueries(node);\n          break;\n\n        default:\n          if (node.block && node.block.nodes) mergeQueries(node.block);\n      }\n    });\n  }\n\n  mergeQueries(media.block);\n  this.bubble(media);\n\n  if (medias.length) {\n    medias.forEach(function (node) {\n      if (group) {\n        group.block.push(node);\n      } else {\n        this.root.nodes.splice(++this.rootIndex, 0, node);\n      }\n\n      node = this.visit(node);\n      parent = node.block.parent;\n\n      if (node.bubbled && (!group || 'group' == parent.node.nodeName)) {\n        node.group.block = node.block.nodes[0].block;\n        node.block.nodes[0] = node.group;\n      }\n    }, this);\n  }\n\n  return media;\n};\n/**\n * Visit Supports.\n */\n\n\nNormalizer.prototype.visitSupports = function (node) {\n  this.bubble(node);\n  return node;\n};\n/**\n * Visit Atrule.\n */\n\n\nNormalizer.prototype.visitAtrule = function (node) {\n  if (node.block) node.block = this.visit(node.block);\n  return node;\n};\n/**\n * Visit Keyframes.\n */\n\n\nNormalizer.prototype.visitKeyframes = function (node) {\n  var frames = node.block.nodes.filter(function (frame) {\n    return frame.block && frame.block.hasProperties;\n  });\n  node.frames = frames.length;\n  return node;\n};\n/**\n * Visit Import.\n */\n\n\nNormalizer.prototype.visitImport = function (node) {\n  this.imports.push(node);\n  return this.hoist ? nodes.null : node;\n};\n/**\n * Visit Charset.\n */\n\n\nNormalizer.prototype.visitCharset = function (node) {\n  this.charset = node;\n  return this.hoist ? nodes.null : node;\n};\n/**\n * Apply `group` extensions.\n *\n * @param {Group} group\n * @param {Array} selectors\n * @api private\n */\n\n\nNormalizer.prototype.extend = function (group, selectors) {\n  var map = this.map,\n      self = this,\n      parent = this.closestGroup(group.block);\n  group.extends.forEach(function (extend) {\n    var groups = map[extend.selector];\n\n    if (!groups) {\n      if (extend.optional) return;\n      groups = self._checkForPrefixedGroups(extend.selector);\n\n      if (!groups) {\n        var err = new Error('Failed to @extend \"' + extend.selector + '\"');\n        err.lineno = extend.lineno;\n        err.column = extend.column;\n        throw err;\n      }\n    }\n\n    selectors.forEach(function (selector) {\n      var node = new nodes.Selector();\n      node.val = selector;\n      node.inherits = false;\n      groups.forEach(function (group) {\n        // prevent recursive extend\n        if (!parent || parent != group) self.extend(group, selectors);\n        group.push(node);\n      });\n    });\n  });\n  group.block = this.visit(group.block);\n};\n\nNormalizer.prototype._checkForPrefixedGroups = function (selector) {\n  var prefix = [];\n  var map = this.map;\n  var result = null;\n\n  for (var i = 0; i < this.stack.length; i++) {\n    var stackElementArray = this.stack[i];\n    var stackElement = stackElementArray[0];\n    prefix.push(stackElement.val);\n    var fullSelector = prefix.join(\" \") + \" \" + selector;\n    result = map[fullSelector];\n    if (result) break;\n  }\n\n  return result;\n};","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/visitor/normalizer.js"],"names":["Visitor","require","nodes","utils","Normalizer","module","exports","root","options","call","hoist","stack","map","imports","prototype","__proto__","normalize","ret","visit","length","concat","charset","bubble","node","props","other","self","filterProps","block","forEach","nodeName","push","selector","Selector","Literal","lineno","column","filename","val","group","Group","Block","prop","n","closestGroup","clone","bubbled","parent","visitRoot","Root","i","rootIndex","visitProperty","expr","visitExpression","literal","visitBlock","hasProperties","len","visitGroup","parts","indexOf","replace","split","charAt","part","s","k","trim","selectors","compileSelectors","extend","pop","visitFunction","null","visitMedia","media","medias","mergeQueries","merge","splice","visitSupports","visitAtrule","visitKeyframes","frames","filter","frame","visitImport","visitCharset","extends","groups","optional","_checkForPrefixedGroups","err","Error","inherits","prefix","result","stackElementArray","stackElement","fullSelector","join"],"mappings":"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","sourcesContent":["\n/*!\n * Stylus - Normalizer\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Visitor = require('./')\n  , nodes = require('../nodes')\n  , utils = require('../utils');\n\n/**\n * Initialize a new `Normalizer` with the given `root` Node.\n *\n * This visitor implements the first stage of the duel-stage\n * compiler, tasked with stripping the \"garbage\" from\n * the evaluated nodes, ditching null rules, resolving\n * ruleset selectors etc. This step performs the logic\n * necessary to facilitate the \"@extend\" functionality,\n * as these must be resolved _before_ buffering output.\n *\n * @param {Node} root\n * @api public\n */\n\nvar Normalizer = module.exports = function Normalizer(root, options) {\n  options = options || {};\n  Visitor.call(this, root);\n  this.hoist = options['hoist atrules'];\n  this.stack = [];\n  this.map = {};\n  this.imports = [];\n};\n\n/**\n * Inherit from `Visitor.prototype`.\n */\n\nNormalizer.prototype.__proto__ = Visitor.prototype;\n\n/**\n * Normalize the node tree.\n *\n * @return {Node}\n * @api private\n */\n\nNormalizer.prototype.normalize = function(){\n  var ret = this.visit(this.root);\n\n  if (this.hoist) {\n    // hoist @import\n    if (this.imports.length) ret.nodes = this.imports.concat(ret.nodes);\n\n    // hoist @charset\n    if (this.charset) ret.nodes = [this.charset].concat(ret.nodes);\n  }\n\n  return ret;\n};\n\n/**\n * Bubble up the given `node`.\n *\n * @param {Node} node\n * @api private\n */\n\nNormalizer.prototype.bubble = function(node){\n  var props = []\n    , other = []\n    , self = this;\n\n  function filterProps(block) {\n    block.nodes.forEach(function(node) {\n      node = self.visit(node);\n\n      switch (node.nodeName) {\n        case 'property':\n          props.push(node);\n          break;\n        case 'block':\n          filterProps(node);\n          break;\n        default:\n          other.push(node);\n      }\n    });\n  }\n\n  filterProps(node.block);\n\n  if (props.length) {\n    var selector = new nodes.Selector([new nodes.Literal('&')]);\n    selector.lineno = node.lineno;\n    selector.column = node.column;\n    selector.filename = node.filename;\n    selector.val = '&';\n\n    var group = new nodes.Group;\n    group.lineno = node.lineno;\n    group.column = node.column;\n    group.filename = node.filename;\n\n    var block = new nodes.Block(node.block, group);\n    block.lineno = node.lineno;\n    block.column = node.column;\n    block.filename = node.filename;\n\n    props.forEach(function(prop){\n      block.push(prop);\n    });\n\n    group.push(selector);\n    group.block = block;\n\n    node.block.nodes = [];\n    node.block.push(group);\n    other.forEach(function(n){\n      node.block.push(n);\n    });\n\n    var group = this.closestGroup(node.block);\n    if (group) node.group = group.clone();\n\n    node.bubbled = true;\n  }\n};\n\n/**\n * Return group closest to the given `block`.\n *\n * @param {Block} block\n * @return {Group}\n * @api private\n */\n\nNormalizer.prototype.closestGroup = function(block){\n  var parent = block.parent\n    , node;\n  while (parent && (node = parent.node)) {\n    if ('group' == node.nodeName) return node;\n    parent = node.block && node.block.parent;\n  }\n};\n\n/**\n * Visit Root.\n */\n\nNormalizer.prototype.visitRoot = function(block){\n  var ret = new nodes.Root\n    , node;\n\n  for (var i = 0; i < block.nodes.length; ++i) {\n    node = block.nodes[i];\n    switch (node.nodeName) {\n      case 'null':\n      case 'expression':\n      case 'function':\n      case 'unit':\n      case 'atblock':\n        continue;\n      default:\n        this.rootIndex = i;\n        ret.push(this.visit(node));\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Visit Property.\n */\n\nNormalizer.prototype.visitProperty = function(prop){\n  this.visit(prop.expr);\n  return prop;\n};\n\n/**\n * Visit Expression.\n */\n\nNormalizer.prototype.visitExpression = function(expr){\n  expr.nodes = expr.nodes.map(function(node){\n    // returns `block` literal if mixin's block\n    // is used as part of a property value\n    if ('block' == node.nodeName) {\n      var literal = new nodes.Literal('block');\n      literal.lineno = expr.lineno;\n      literal.column = expr.column;\n      return literal;\n    }\n    return node;\n  });\n  return expr;\n};\n\n/**\n * Visit Block.\n */\n\nNormalizer.prototype.visitBlock = function(block){\n  var node;\n\n  if (block.hasProperties) {\n    for (var i = 0, len = block.nodes.length; i < len; ++i) {\n      node = block.nodes[i];\n      switch (node.nodeName) {\n        case 'null':\n        case 'expression':\n        case 'function':\n        case 'group':\n        case 'unit':\n        case 'atblock':\n          continue;\n        default:\n          block.nodes[i] = this.visit(node);\n      }\n    }\n  }\n\n  // nesting\n  for (var i = 0, len = block.nodes.length; i < len; ++i) {\n    node = block.nodes[i];\n    block.nodes[i] = this.visit(node);\n  }\n\n  return block;\n};\n\n/**\n * Visit Group.\n */\n\nNormalizer.prototype.visitGroup = function(group){\n  var stack = this.stack\n    , map = this.map\n    , parts;\n\n  // normalize interpolated selectors with comma\n  group.nodes.forEach(function(selector, i){\n    if (!~selector.val.indexOf(',')) return;\n    if (~selector.val.indexOf('\\\\,')) {\n      selector.val = selector.val.replace(/\\\\,/g, ',');\n      return;\n    }\n    parts = selector.val.split(',');\n    var root = '/' == selector.val.charAt(0)\n      , part, s;\n    for (var k = 0, len = parts.length; k < len; ++k){\n      part = parts[k].trim();\n      if (root && k > 0 && !~part.indexOf('&')) {\n        part = '/' + part;\n      }\n      s = new nodes.Selector([new nodes.Literal(part)]);\n      s.val = part;\n      s.block = group.block;\n      group.nodes[i++] = s;\n    }\n  });\n  stack.push(group.nodes);\n\n  var selectors = utils.compileSelectors(stack, true);\n\n  // map for extension lookup\n  selectors.forEach(function(selector){\n    map[selector] = map[selector] || [];\n    map[selector].push(group);\n  });\n\n  // extensions\n  this.extend(group, selectors);\n\n  stack.pop();\n  return group;\n};\n\n/**\n * Visit Function.\n */\n\nNormalizer.prototype.visitFunction = function(){\n  return nodes.null;\n};\n\n/**\n * Visit Media.\n */\n\nNormalizer.prototype.visitMedia = function(media){\n  var medias = []\n    , group = this.closestGroup(media.block)\n    , parent;\n\n  function mergeQueries(block) {\n    block.nodes.forEach(function(node, i){\n      switch (node.nodeName) {\n        case 'media':\n          node.val = media.val.merge(node.val);\n          medias.push(node);\n          block.nodes[i] = nodes.null;\n          break;\n        case 'block':\n          mergeQueries(node);\n          break;\n        default:\n          if (node.block && node.block.nodes)\n            mergeQueries(node.block);\n      }\n    });\n  }\n\n  mergeQueries(media.block);\n  this.bubble(media);\n\n  if (medias.length) {\n    medias.forEach(function(node){\n      if (group) {\n        group.block.push(node);\n      } else {\n        this.root.nodes.splice(++this.rootIndex, 0, node);\n      }\n      node = this.visit(node);\n      parent = node.block.parent;\n      if (node.bubbled && (!group || 'group' == parent.node.nodeName)) {\n        node.group.block = node.block.nodes[0].block;\n        node.block.nodes[0] = node.group;\n      }\n    }, this);\n  }\n  return media;\n};\n\n/**\n * Visit Supports.\n */\n\nNormalizer.prototype.visitSupports = function(node){\n  this.bubble(node);\n  return node;\n};\n\n/**\n * Visit Atrule.\n */\n\nNormalizer.prototype.visitAtrule = function(node){\n  if (node.block) node.block = this.visit(node.block);\n  return node;\n};\n\n/**\n * Visit Keyframes.\n */\n\nNormalizer.prototype.visitKeyframes = function(node){\n  var frames = node.block.nodes.filter(function(frame){\n    return frame.block && frame.block.hasProperties;\n  });\n  node.frames = frames.length;\n  return node;\n};\n\n/**\n * Visit Import.\n */\n\nNormalizer.prototype.visitImport = function(node){\n  this.imports.push(node);\n  return this.hoist ? nodes.null : node;\n};\n\n/**\n * Visit Charset.\n */\n\nNormalizer.prototype.visitCharset = function(node){\n  this.charset = node;\n  return this.hoist ? nodes.null : node;\n};\n\n/**\n * Apply `group` extensions.\n *\n * @param {Group} group\n * @param {Array} selectors\n * @api private\n */\n\nNormalizer.prototype.extend = function(group, selectors){\n  var map = this.map\n    , self = this\n    , parent = this.closestGroup(group.block);\n\n  group.extends.forEach(function(extend){\n    var groups = map[extend.selector];\n    if (!groups) {\n      if (extend.optional) return;\n      groups = self._checkForPrefixedGroups(extend.selector);\n      if(!groups) {\n        var err = new Error('Failed to @extend \"' + extend.selector + '\"');\n        err.lineno = extend.lineno;\n        err.column = extend.column;\n        throw err;\n      }\n    }\n    selectors.forEach(function(selector){\n      var node = new nodes.Selector;\n      node.val = selector;\n      node.inherits = false;\n      groups.forEach(function(group){\n        // prevent recursive extend\n        if (!parent || (parent != group)) self.extend(group, selectors);\n        group.push(node);\n      });\n    });\n  });\n\n  group.block = this.visit(group.block);\n};\n\nNormalizer.prototype._checkForPrefixedGroups = function (selector) {\n  var prefix = [];\n  var map = this.map;\n  var result = null;\n  for (var i = 0; i < this.stack.length; i++) {\n    var stackElementArray=this.stack[i];\n    var stackElement = stackElementArray[0];\n    prefix.push(stackElement.val);\n    var fullSelector = prefix.join(\" \") + \" \" + selector;\n    result = map[fullSelector];\n    if (result)\n      break;\n  }\n  return result;\n};"]},"metadata":{},"sourceType":"script"}