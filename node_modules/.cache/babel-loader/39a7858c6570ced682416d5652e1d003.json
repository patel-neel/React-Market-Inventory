{"ast":null,"code":"/*!\n * Stylus - at-rule\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nvar Node = require('./node');\n/**\n * Initialize a new at-rule node.\n *\n * @param {String} type\n * @api public\n */\n\n\nvar Atrule = module.exports = function Atrule(type) {\n  Node.call(this);\n  this.type = type;\n};\n/**\n * Inherit from `Node.prototype`.\n */\n\n\nAtrule.prototype.__proto__ = Node.prototype;\n/**\n * Check if at-rule's block has only properties.\n *\n * @return {Boolean}\n * @api public\n */\n\nAtrule.prototype.__defineGetter__('hasOnlyProperties', function () {\n  if (!this.block) return false;\n  var nodes = this.block.nodes;\n\n  for (var i = 0, len = nodes.length; i < len; ++i) {\n    var nodeName = nodes[i].nodeName;\n\n    switch (nodes[i].nodeName) {\n      case 'property':\n      case 'expression':\n      case 'comment':\n        continue;\n\n      default:\n        return false;\n    }\n  }\n\n  return true;\n});\n/**\n * Return a clone of this node.\n *\n * @return {Node}\n * @api public\n */\n\n\nAtrule.prototype.clone = function (parent) {\n  var clone = new Atrule(this.type);\n  if (this.block) clone.block = this.block.clone(parent, clone);\n  clone.segments = this.segments.map(function (node) {\n    return node.clone(parent, clone);\n  });\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  return clone;\n};\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\n\nAtrule.prototype.toJSON = function () {\n  var json = {\n    __type: 'Atrule',\n    type: this.type,\n    segments: this.segments,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n  if (this.block) json.block = this.block;\n  return json;\n};\n/**\n * Return @<type>.\n *\n * @return {String}\n * @api public\n */\n\n\nAtrule.prototype.toString = function () {\n  return '@' + this.type;\n};\n/**\n * Check if the at-rule's block has output nodes.\n *\n * @return {Boolean}\n * @api public\n */\n\n\nAtrule.prototype.__defineGetter__('hasOutput', function () {\n  return !!this.block && hasOutput(this.block);\n});\n\nfunction hasOutput(block) {\n  var nodes = block.nodes; // only placeholder selectors\n\n  if (nodes.every(function (node) {\n    return 'group' == node.nodeName && node.hasOnlyPlaceholders;\n  })) return false; // something visible\n\n  return nodes.some(function (node) {\n    switch (node.nodeName) {\n      case 'property':\n      case 'literal':\n      case 'import':\n        return true;\n\n      case 'block':\n        return hasOutput(node);\n\n      default:\n        if (node.block) return hasOutput(node.block);\n    }\n  });\n}","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/nodes/atrule.js"],"names":["Node","require","Atrule","module","exports","type","call","prototype","__proto__","__defineGetter__","block","nodes","i","len","length","nodeName","clone","parent","segments","map","node","lineno","column","filename","toJSON","json","__type","toString","hasOutput","every","hasOnlyPlaceholders","some"],"mappings":"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","sourcesContent":["/*!\n * Stylus - at-rule\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node');\n\n/**\n * Initialize a new at-rule node.\n *\n * @param {String} type\n * @api public\n */\n\nvar Atrule = module.exports = function Atrule(type){\n  Node.call(this);\n  this.type = type;\n};\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nAtrule.prototype.__proto__ = Node.prototype;\n\n/**\n * Check if at-rule's block has only properties.\n *\n * @return {Boolean}\n * @api public\n */\n\nAtrule.prototype.__defineGetter__('hasOnlyProperties', function(){\n  if (!this.block) return false;\n\n  var nodes = this.block.nodes;\n  for (var i = 0, len = nodes.length; i < len; ++i) {\n    var nodeName = nodes[i].nodeName;\n    switch(nodes[i].nodeName) {\n      case 'property':\n      case 'expression':\n      case 'comment':\n        continue;\n      default:\n        return false;\n    }\n  }\n  return true;\n});\n\n/**\n * Return a clone of this node.\n *\n * @return {Node}\n * @api public\n */\n\nAtrule.prototype.clone = function(parent){\n  var clone = new Atrule(this.type);\n  if (this.block) clone.block = this.block.clone(parent, clone);\n  clone.segments = this.segments.map(function(node){ return node.clone(parent, clone); });\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  return clone;\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nAtrule.prototype.toJSON = function(){\n  var json = {\n    __type: 'Atrule',\n    type: this.type,\n    segments: this.segments,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n  if (this.block) json.block = this.block;\n  return json;\n};\n\n/**\n * Return @<type>.\n *\n * @return {String}\n * @api public\n */\n\nAtrule.prototype.toString = function(){\n  return '@' + this.type;\n};\n\n/**\n * Check if the at-rule's block has output nodes.\n *\n * @return {Boolean}\n * @api public\n */\n\nAtrule.prototype.__defineGetter__('hasOutput', function(){\n  return !!this.block && hasOutput(this.block);\n});\n\nfunction hasOutput(block) {\n  var nodes = block.nodes;\n\n  // only placeholder selectors\n  if (nodes.every(function(node){\n    return 'group' == node.nodeName && node.hasOnlyPlaceholders;\n  })) return false;\n\n  // something visible\n  return nodes.some(function(node) {\n    switch (node.nodeName) {\n      case 'property':\n      case 'literal':\n      case 'import':\n        return true;\n      case 'block':\n        return hasOutput(node);\n      default:\n        if (node.block) return hasOutput(node.block);\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}