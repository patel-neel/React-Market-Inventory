{"ast":null,"code":"/*!\n * Stylus - Ident\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nvar Node = require('./node'),\n    nodes = require('./');\n/**\n * Initialize a new `Ident` by `name` with the given `val` node.\n *\n * @param {String} name\n * @param {Node} val\n * @api public\n */\n\n\nvar Ident = module.exports = function Ident(name, val, mixin) {\n  Node.call(this);\n  this.name = name;\n  this.string = name;\n  this.val = val || nodes.null;\n  this.mixin = !!mixin;\n};\n/**\n * Check if the variable has a value.\n *\n * @return {Boolean}\n * @api public\n */\n\n\nIdent.prototype.__defineGetter__('isEmpty', function () {\n  return undefined == this.val;\n});\n/**\n * Return hash.\n *\n * @return {String}\n * @api public\n */\n\n\nIdent.prototype.__defineGetter__('hash', function () {\n  return this.name;\n});\n/**\n * Inherit from `Node.prototype`.\n */\n\n\nIdent.prototype.__proto__ = Node.prototype;\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nIdent.prototype.clone = function (parent) {\n  var clone = new Ident(this.name);\n  clone.val = this.val.clone(parent, clone);\n  clone.mixin = this.mixin;\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  clone.property = this.property;\n  clone.rest = this.rest;\n  return clone;\n};\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\n\nIdent.prototype.toJSON = function () {\n  return {\n    __type: 'Ident',\n    name: this.name,\n    val: this.val,\n    mixin: this.mixin,\n    property: this.property,\n    rest: this.rest,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n/**\n * Return <name>.\n *\n * @return {String}\n * @api public\n */\n\n\nIdent.prototype.toString = function () {\n  return this.name;\n};\n/**\n * Coerce `other` to an ident.\n *\n * @param {Node} other\n * @return {String}\n * @api public\n */\n\n\nIdent.prototype.coerce = function (other) {\n  switch (other.nodeName) {\n    case 'ident':\n    case 'string':\n    case 'literal':\n      return new Ident(other.string);\n\n    case 'unit':\n      return new Ident(other.toString());\n\n    default:\n      return Node.prototype.coerce.call(this, other);\n  }\n};\n/**\n * Operate on `right` with the given `op`.\n *\n * @param {String} op\n * @param {Node} right\n * @return {Node}\n * @api public\n */\n\n\nIdent.prototype.operate = function (op, right) {\n  var val = right.first;\n\n  switch (op) {\n    case '-':\n      if ('unit' == val.nodeName) {\n        var expr = new nodes.Expression();\n        val = val.clone();\n        val.val = -val.val;\n        expr.push(this);\n        expr.push(val);\n        return expr;\n      }\n\n    case '+':\n      return new nodes.Ident(this.string + this.coerce(val).string);\n  }\n\n  return Node.prototype.operate.call(this, op, right);\n};","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/nodes/ident.js"],"names":["Node","require","nodes","Ident","module","exports","name","val","mixin","call","string","null","prototype","__defineGetter__","undefined","__proto__","clone","parent","lineno","column","filename","property","rest","toJSON","__type","toString","coerce","other","nodeName","operate","op","right","first","expr","Expression","push"],"mappings":"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","sourcesContent":["\n/*!\n * Stylus - Ident\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node')\n  , nodes = require('./');\n\n/**\n * Initialize a new `Ident` by `name` with the given `val` node.\n *\n * @param {String} name\n * @param {Node} val\n * @api public\n */\n\nvar Ident = module.exports = function Ident(name, val, mixin){\n  Node.call(this);\n  this.name = name;\n  this.string = name;\n  this.val = val || nodes.null;\n  this.mixin = !!mixin;\n};\n\n/**\n * Check if the variable has a value.\n *\n * @return {Boolean}\n * @api public\n */\n\nIdent.prototype.__defineGetter__('isEmpty', function(){\n  return undefined == this.val;\n});\n\n/**\n * Return hash.\n *\n * @return {String}\n * @api public\n */\n\nIdent.prototype.__defineGetter__('hash', function(){\n  return this.name;\n});\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nIdent.prototype.__proto__ = Node.prototype;\n\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nIdent.prototype.clone = function(parent){\n  var clone = new Ident(this.name);\n  clone.val = this.val.clone(parent, clone);\n  clone.mixin = this.mixin;\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  clone.property = this.property;\n  clone.rest = this.rest;\n  return clone;\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nIdent.prototype.toJSON = function(){\n  return {\n    __type: 'Ident',\n    name: this.name,\n    val: this.val,\n    mixin: this.mixin,\n    property: this.property,\n    rest: this.rest,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n\n/**\n * Return <name>.\n *\n * @return {String}\n * @api public\n */\n\nIdent.prototype.toString = function(){\n  return this.name;\n};\n\n/**\n * Coerce `other` to an ident.\n *\n * @param {Node} other\n * @return {String}\n * @api public\n */\n\nIdent.prototype.coerce = function(other){\n  switch (other.nodeName) {\n    case 'ident':\n    case 'string':\n    case 'literal':\n      return new Ident(other.string);\n    case 'unit':\n      return new Ident(other.toString());\n    default:\n      return Node.prototype.coerce.call(this, other);\n  }\n};\n\n/**\n * Operate on `right` with the given `op`.\n *\n * @param {String} op\n * @param {Node} right\n * @return {Node}\n * @api public\n */\n\nIdent.prototype.operate = function(op, right){\n  var val = right.first;\n  switch (op) {\n    case '-':\n      if ('unit' == val.nodeName) {\n        var expr = new nodes.Expression;\n        val = val.clone();\n        val.val = -val.val;\n        expr.push(this);\n        expr.push(val);\n        return expr;\n      }\n    case '+':\n      return new nodes.Ident(this.string + this.coerce(val).string);\n  }\n  return Node.prototype.operate.call(this, op, right);\n};\n"]},"metadata":{},"sourceType":"script"}