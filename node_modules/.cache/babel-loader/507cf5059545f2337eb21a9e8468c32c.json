{"ast":null,"code":"/*!\n * Stylus - stack - Frame\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nvar Scope = require('./scope');\n/**\n * Initialize a new `Frame` with the given `block`.\n *\n * @param {Block} block\n * @api private\n */\n\n\nvar Frame = module.exports = function Frame(block) {\n  this._scope = false === block.scope ? null : new Scope();\n  this.block = block;\n};\n/**\n * Return this frame's scope or the parent scope\n * for scope-less blocks.\n *\n * @return {Scope}\n * @api public\n */\n\n\nFrame.prototype.__defineGetter__('scope', function () {\n  return this._scope || this.parent.scope;\n});\n/**\n * Lookup the given local variable `name`.\n *\n * @param {String} name\n * @return {Node}\n * @api private\n */\n\n\nFrame.prototype.lookup = function (name) {\n  return this.scope.lookup(name);\n};\n/**\n * Custom inspect.\n *\n * @return {String}\n * @api public\n */\n\n\nFrame.prototype.inspect = function () {\n  return '[Frame ' + (false === this.block.scope ? 'scope-less' : this.scope.inspect()) + ']';\n};","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/stack/frame.js"],"names":["Scope","require","Frame","module","exports","block","_scope","scope","prototype","__defineGetter__","parent","lookup","name","inspect"],"mappings":"AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIC,KAAK,GAAGC,MAAM,CAACC,OAAP,GAAiB,SAASF,KAAT,CAAeG,KAAf,EAAsB;AACjD,OAAKC,MAAL,GAAc,UAAUD,KAAK,CAACE,KAAhB,GACV,IADU,GAEV,IAAIP,KAAJ,EAFJ;AAGA,OAAKK,KAAL,GAAaA,KAAb;AACD,CALD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAH,KAAK,CAACM,SAAN,CAAgBC,gBAAhB,CAAiC,OAAjC,EAA0C,YAAU;AAClD,SAAO,KAAKH,MAAL,IAAe,KAAKI,MAAL,CAAYH,KAAlC;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAL,KAAK,CAACM,SAAN,CAAgBG,MAAhB,GAAyB,UAASC,IAAT,EAAc;AACrC,SAAO,KAAKL,KAAL,CAAWI,MAAX,CAAkBC,IAAlB,CAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAEAV,KAAK,CAACM,SAAN,CAAgBK,OAAhB,GAA0B,YAAU;AAClC,SAAO,aACF,UAAU,KAAKR,KAAL,CAAWE,KAArB,GACG,YADH,GAEG,KAAKA,KAAL,CAAWM,OAAX,EAHD,IAIH,GAJJ;AAKD,CAND","sourcesContent":["\n/*!\n * Stylus - stack - Frame\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Scope = require('./scope');\n\n/**\n * Initialize a new `Frame` with the given `block`.\n *\n * @param {Block} block\n * @api private\n */\n\nvar Frame = module.exports = function Frame(block) {\n  this._scope = false === block.scope\n    ? null\n    : new Scope;\n  this.block = block;\n};\n\n/**\n * Return this frame's scope or the parent scope\n * for scope-less blocks.\n *\n * @return {Scope}\n * @api public\n */\n\nFrame.prototype.__defineGetter__('scope', function(){\n  return this._scope || this.parent.scope;\n});\n\n/**\n * Lookup the given local variable `name`.\n *\n * @param {String} name\n * @return {Node}\n * @api private\n */\n\nFrame.prototype.lookup = function(name){\n  return this.scope.lookup(name)\n};\n\n/**\n * Custom inspect.\n *\n * @return {String}\n * @api public\n */\n\nFrame.prototype.inspect = function(){\n  return '[Frame '\n    + (false === this.block.scope\n        ? 'scope-less'\n        : this.scope.inspect())\n    + ']';\n};\n"]},"metadata":{},"sourceType":"script"}