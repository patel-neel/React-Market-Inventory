{"ast":null,"code":"var utils = require('../utils'),\n    nodes = require('../nodes');\n/**\n * Splits the given `val` by `delim`\n *\n * @param {String} delim\n * @param {String|Ident} val\n * @return {Expression}\n * @api public\n */\n\n\nfunction split(delim, val) {\n  utils.assertString(delim, 'delimiter');\n  utils.assertString(val, 'val');\n  var splitted = val.string.split(delim.string);\n  var expr = new nodes.Expression();\n  var ItemNode = val instanceof nodes.Ident ? nodes.Ident : nodes.String;\n\n  for (var i = 0, len = splitted.length; i < len; ++i) {\n    expr.nodes.push(new ItemNode(splitted[i]));\n  }\n\n  return expr;\n}\n\nsplit.params = ['delim', 'val'];\nmodule.exports = split;","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/functions/split.js"],"names":["utils","require","nodes","split","delim","val","assertString","splitted","string","expr","Expression","ItemNode","Ident","String","i","len","length","push","params","module","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAAnB;AAAA,IACIC,KAAK,GAAGD,OAAO,CAAC,UAAD,CADnB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASE,KAAT,CAAeC,KAAf,EAAsBC,GAAtB,EAA0B;AACxBL,EAAAA,KAAK,CAACM,YAAN,CAAmBF,KAAnB,EAA0B,WAA1B;AACAJ,EAAAA,KAAK,CAACM,YAAN,CAAmBD,GAAnB,EAAwB,KAAxB;AACA,MAAIE,QAAQ,GAAGF,GAAG,CAACG,MAAJ,CAAWL,KAAX,CAAiBC,KAAK,CAACI,MAAvB,CAAf;AACA,MAAIC,IAAI,GAAG,IAAIP,KAAK,CAACQ,UAAV,EAAX;AACA,MAAIC,QAAQ,GAAGN,GAAG,YAAYH,KAAK,CAACU,KAArB,GACXV,KAAK,CAACU,KADK,GAEXV,KAAK,CAACW,MAFV;;AAGA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGR,QAAQ,CAACS,MAA/B,EAAuCF,CAAC,GAAGC,GAA3C,EAAgD,EAAED,CAAlD,EAAqD;AACnDL,IAAAA,IAAI,CAACP,KAAL,CAAWe,IAAX,CAAgB,IAAIN,QAAJ,CAAaJ,QAAQ,CAACO,CAAD,CAArB,CAAhB;AACD;;AACD,SAAOL,IAAP;AACD;;AACDN,KAAK,CAACe,MAAN,GAAe,CAAC,OAAD,EAAU,KAAV,CAAf;AACAC,MAAM,CAACC,OAAP,GAAiBjB,KAAjB","sourcesContent":["var utils = require('../utils')\n  , nodes = require('../nodes');\n\n/**\n * Splits the given `val` by `delim`\n *\n * @param {String} delim\n * @param {String|Ident} val\n * @return {Expression}\n * @api public\n */\n\nfunction split(delim, val){\n  utils.assertString(delim, 'delimiter');\n  utils.assertString(val, 'val');\n  var splitted = val.string.split(delim.string);\n  var expr = new nodes.Expression();\n  var ItemNode = val instanceof nodes.Ident\n    ? nodes.Ident\n    : nodes.String;\n  for (var i = 0, len = splitted.length; i < len; ++i) {\n    expr.nodes.push(new ItemNode(splitted[i]));\n  }\n  return expr;\n}\nsplit.params = ['delim', 'val'];\nmodule.exports = split;\n"]},"metadata":{},"sourceType":"script"}