{"ast":null,"code":"var utils = require('../utils'),\n    nodes = require('../nodes'),\n    Compiler = require('../visitor/compiler');\n/**\n * Return a `Literal` with the given `fmt`, and\n * variable number of arguments.\n *\n * @param {String} fmt\n * @param {Node} ...\n * @return {Literal}\n * @api public\n */\n\n\n(module.exports = function s(fmt) {\n  fmt = utils.unwrap(fmt).nodes[0];\n  utils.assertString(fmt);\n  var self = this,\n      str = fmt.string,\n      args = arguments,\n      i = 1; // format\n\n  str = str.replace(/%(s|d)/g, function (_, specifier) {\n    var arg = args[i++] || nodes.null;\n\n    switch (specifier) {\n      case 's':\n        return new Compiler(arg, self.options).compile();\n\n      case 'd':\n        arg = utils.unwrap(arg).first;\n        if ('unit' != arg.nodeName) throw new Error('%d requires a unit');\n        return arg.val;\n    }\n  });\n  return new nodes.Literal(str);\n}).raw = true;","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/functions/s.js"],"names":["utils","require","nodes","Compiler","module","exports","s","fmt","unwrap","assertString","self","str","string","args","arguments","i","replace","_","specifier","arg","null","options","compile","first","nodeName","Error","val","Literal","raw"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAAnB;AAAA,IACIC,KAAK,GAAGD,OAAO,CAAC,UAAD,CADnB;AAAA,IAEIE,QAAQ,GAAGF,OAAO,CAAC,qBAAD,CAFtB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,CAACG,MAAM,CAACC,OAAP,GAAiB,SAASC,CAAT,CAAWC,GAAX,EAAe;AAC/BA,EAAAA,GAAG,GAAGP,KAAK,CAACQ,MAAN,CAAaD,GAAb,EAAkBL,KAAlB,CAAwB,CAAxB,CAAN;AACAF,EAAAA,KAAK,CAACS,YAAN,CAAmBF,GAAnB;AACA,MAAIG,IAAI,GAAG,IAAX;AAAA,MACIC,GAAG,GAAGJ,GAAG,CAACK,MADd;AAAA,MAEIC,IAAI,GAAGC,SAFX;AAAA,MAGIC,CAAC,GAAG,CAHR,CAH+B,CAQ/B;;AACAJ,EAAAA,GAAG,GAAGA,GAAG,CAACK,OAAJ,CAAY,SAAZ,EAAuB,UAASC,CAAT,EAAYC,SAAZ,EAAsB;AACjD,QAAIC,GAAG,GAAGN,IAAI,CAACE,CAAC,EAAF,CAAJ,IAAab,KAAK,CAACkB,IAA7B;;AACA,YAAQF,SAAR;AACE,WAAK,GAAL;AACE,eAAO,IAAIf,QAAJ,CAAagB,GAAb,EAAkBT,IAAI,CAACW,OAAvB,EAAgCC,OAAhC,EAAP;;AACF,WAAK,GAAL;AACEH,QAAAA,GAAG,GAAGnB,KAAK,CAACQ,MAAN,CAAaW,GAAb,EAAkBI,KAAxB;AACA,YAAI,UAAUJ,GAAG,CAACK,QAAlB,EAA4B,MAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;AAC5B,eAAON,GAAG,CAACO,GAAX;AANJ;AAQD,GAVK,CAAN;AAYA,SAAO,IAAIxB,KAAK,CAACyB,OAAV,CAAkBhB,GAAlB,CAAP;AACD,CAtBD,EAsBGiB,GAtBH,GAsBS,IAtBT","sourcesContent":["var utils = require('../utils')\n  , nodes = require('../nodes')\n  , Compiler = require('../visitor/compiler');\n\n/**\n * Return a `Literal` with the given `fmt`, and\n * variable number of arguments.\n *\n * @param {String} fmt\n * @param {Node} ...\n * @return {Literal}\n * @api public\n */\n\n(module.exports = function s(fmt){\n  fmt = utils.unwrap(fmt).nodes[0];\n  utils.assertString(fmt);\n  var self = this\n    , str = fmt.string\n    , args = arguments\n    , i = 1;\n\n  // format\n  str = str.replace(/%(s|d)/g, function(_, specifier){\n    var arg = args[i++] || nodes.null;\n    switch (specifier) {\n      case 's':\n        return new Compiler(arg, self.options).compile();\n      case 'd':\n        arg = utils.unwrap(arg).first;\n        if ('unit' != arg.nodeName) throw new Error('%d requires a unit');\n        return arg.val;\n    }\n  });\n\n  return new nodes.Literal(str);\n}).raw = true;\n"]},"metadata":{},"sourceType":"script"}