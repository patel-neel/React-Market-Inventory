{"ast":null,"code":"var utils = require('../utils');\n/**\n * Adjust HSL `color` `prop` by `amount`.\n *\n * @param {RGBA|HSLA} color\n * @param {String} prop\n * @param {Unit} amount\n * @return {RGBA}\n * @api private\n */\n\n\nfunction adjust(color, prop, amount) {\n  utils.assertColor(color, 'color');\n  utils.assertString(prop, 'prop');\n  utils.assertType(amount, 'unit', 'amount');\n  var hsl = color.hsla.clone();\n  prop = {\n    hue: 'h',\n    saturation: 's',\n    lightness: 'l'\n  }[prop.string];\n  if (!prop) throw new Error('invalid adjustment property');\n  var val = amount.val;\n\n  if ('%' == amount.type) {\n    val = 'l' == prop && val > 0 ? (100 - hsl[prop]) * val / 100 : hsl[prop] * (val / 100);\n  }\n\n  hsl[prop] += val;\n  return hsl.rgba;\n}\n\n;\nadjust.params = ['color', 'prop', 'amount'];\nmodule.exports = adjust;","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/functions/adjust.js"],"names":["utils","require","adjust","color","prop","amount","assertColor","assertString","assertType","hsl","hsla","clone","hue","saturation","lightness","string","Error","val","type","rgba","params","module","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAoC;AAClCL,EAAAA,KAAK,CAACM,WAAN,CAAkBH,KAAlB,EAAyB,OAAzB;AACAH,EAAAA,KAAK,CAACO,YAAN,CAAmBH,IAAnB,EAAyB,MAAzB;AACAJ,EAAAA,KAAK,CAACQ,UAAN,CAAiBH,MAAjB,EAAyB,MAAzB,EAAiC,QAAjC;AACA,MAAII,GAAG,GAAGN,KAAK,CAACO,IAAN,CAAWC,KAAX,EAAV;AACAP,EAAAA,IAAI,GAAG;AAAEQ,IAAAA,GAAG,EAAE,GAAP;AAAYC,IAAAA,UAAU,EAAE,GAAxB;AAA6BC,IAAAA,SAAS,EAAE;AAAxC,IAA8CV,IAAI,CAACW,MAAnD,CAAP;AACA,MAAI,CAACX,IAAL,EAAW,MAAM,IAAIY,KAAJ,CAAU,6BAAV,CAAN;AACX,MAAIC,GAAG,GAAGZ,MAAM,CAACY,GAAjB;;AACA,MAAI,OAAOZ,MAAM,CAACa,IAAlB,EAAuB;AACrBD,IAAAA,GAAG,GAAG,OAAOb,IAAP,IAAea,GAAG,GAAG,CAArB,GACF,CAAC,MAAMR,GAAG,CAACL,IAAD,CAAV,IAAoBa,GAApB,GAA0B,GADxB,GAEFR,GAAG,CAACL,IAAD,CAAH,IAAaa,GAAG,GAAG,GAAnB,CAFJ;AAGD;;AACDR,EAAAA,GAAG,CAACL,IAAD,CAAH,IAAaa,GAAb;AACA,SAAOR,GAAG,CAACU,IAAX;AACD;;AAAA;AACDjB,MAAM,CAACkB,MAAP,GAAgB,CAAC,OAAD,EAAU,MAAV,EAAkB,QAAlB,CAAhB;AACAC,MAAM,CAACC,OAAP,GAAiBpB,MAAjB","sourcesContent":["var utils = require('../utils');\n\n/**\n * Adjust HSL `color` `prop` by `amount`.\n *\n * @param {RGBA|HSLA} color\n * @param {String} prop\n * @param {Unit} amount\n * @return {RGBA}\n * @api private\n */\n\nfunction adjust(color, prop, amount){\n  utils.assertColor(color, 'color');\n  utils.assertString(prop, 'prop');\n  utils.assertType(amount, 'unit', 'amount');\n  var hsl = color.hsla.clone();\n  prop = { hue: 'h', saturation: 's', lightness: 'l' }[prop.string];\n  if (!prop) throw new Error('invalid adjustment property');\n  var val = amount.val;\n  if ('%' == amount.type){\n    val = 'l' == prop && val > 0\n      ? (100 - hsl[prop]) * val / 100\n      : hsl[prop] * (val / 100);\n  }\n  hsl[prop] += val;\n  return hsl.rgba;\n};\nadjust.params = ['color', 'prop', 'amount'];\nmodule.exports = adjust;\n"]},"metadata":{},"sourceType":"script"}