{"ast":null,"code":"/*!\n * Stylus - Selector\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nvar Block = require('./block'),\n    Node = require('./node');\n/**\n * Initialize a new `Selector` with the given `segs`.\n *\n * @param {Array} segs\n * @api public\n */\n\n\nvar Selector = module.exports = function Selector(segs) {\n  Node.call(this);\n  this.inherits = true;\n  this.segments = segs;\n  this.optional = false;\n};\n/**\n * Inherit from `Node.prototype`.\n */\n\n\nSelector.prototype.__proto__ = Node.prototype;\n/**\n * Return the selector string.\n *\n * @return {String}\n * @api public\n */\n\nSelector.prototype.toString = function () {\n  return this.segments.join('') + (this.optional ? ' !optional' : '');\n};\n/**\n * Check if this is placeholder selector.\n *\n * @return {Boolean}\n * @api public\n */\n\n\nSelector.prototype.__defineGetter__('isPlaceholder', function () {\n  return this.val && ~this.val.substr(0, 2).indexOf('$');\n});\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\n\nSelector.prototype.clone = function (parent) {\n  var clone = new Selector();\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  clone.inherits = this.inherits;\n  clone.val = this.val;\n  clone.segments = this.segments.map(function (node) {\n    return node.clone(parent, clone);\n  });\n  clone.optional = this.optional;\n  return clone;\n};\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\n\nSelector.prototype.toJSON = function () {\n  return {\n    __type: 'Selector',\n    inherits: this.inherits,\n    segments: this.segments,\n    optional: this.optional,\n    val: this.val,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/nodes/selector.js"],"names":["Block","require","Node","Selector","module","exports","segs","call","inherits","segments","optional","prototype","__proto__","toString","join","__defineGetter__","val","substr","indexOf","clone","parent","lineno","column","filename","map","node","toJSON","__type"],"mappings":"AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;AAAA,IACIC,IAAI,GAAGD,OAAO,CAAC,QAAD,CADlB;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIE,QAAQ,GAAGC,MAAM,CAACC,OAAP,GAAiB,SAASF,QAAT,CAAkBG,IAAlB,EAAuB;AACrDJ,EAAAA,IAAI,CAACK,IAAL,CAAU,IAAV;AACA,OAAKC,QAAL,GAAgB,IAAhB;AACA,OAAKC,QAAL,GAAgBH,IAAhB;AACA,OAAKI,QAAL,GAAgB,KAAhB;AACD,CALD;AAOA;AACA;AACA;;;AAEAP,QAAQ,CAACQ,SAAT,CAAmBC,SAAnB,GAA+BV,IAAI,CAACS,SAApC;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAR,QAAQ,CAACQ,SAAT,CAAmBE,QAAnB,GAA8B,YAAU;AACtC,SAAO,KAAKJ,QAAL,CAAcK,IAAd,CAAmB,EAAnB,KAA0B,KAAKJ,QAAL,GAAgB,YAAhB,GAA+B,EAAzD,CAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAEAP,QAAQ,CAACQ,SAAT,CAAmBI,gBAAnB,CAAoC,eAApC,EAAqD,YAAU;AAC7D,SAAO,KAAKC,GAAL,IAAY,CAAC,KAAKA,GAAL,CAASC,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,EAAsBC,OAAtB,CAA8B,GAA9B,CAApB;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAEAf,QAAQ,CAACQ,SAAT,CAAmBQ,KAAnB,GAA2B,UAASC,MAAT,EAAgB;AACzC,MAAID,KAAK,GAAG,IAAIhB,QAAJ,EAAZ;AACAgB,EAAAA,KAAK,CAACE,MAAN,GAAe,KAAKA,MAApB;AACAF,EAAAA,KAAK,CAACG,MAAN,GAAe,KAAKA,MAApB;AACAH,EAAAA,KAAK,CAACI,QAAN,GAAiB,KAAKA,QAAtB;AACAJ,EAAAA,KAAK,CAACX,QAAN,GAAiB,KAAKA,QAAtB;AACAW,EAAAA,KAAK,CAACH,GAAN,GAAY,KAAKA,GAAjB;AACAG,EAAAA,KAAK,CAACV,QAAN,GAAiB,KAAKA,QAAL,CAAce,GAAd,CAAkB,UAASC,IAAT,EAAc;AAAE,WAAOA,IAAI,CAACN,KAAL,CAAWC,MAAX,EAAmBD,KAAnB,CAAP;AAAmC,GAArE,CAAjB;AACAA,EAAAA,KAAK,CAACT,QAAN,GAAiB,KAAKA,QAAtB;AACA,SAAOS,KAAP;AACD,CAVD;AAYA;AACA;AACA;AACA;AACA;AACA;;;AAEAhB,QAAQ,CAACQ,SAAT,CAAmBe,MAAnB,GAA4B,YAAU;AACpC,SAAO;AACLC,IAAAA,MAAM,EAAE,UADH;AAELnB,IAAAA,QAAQ,EAAE,KAAKA,QAFV;AAGLC,IAAAA,QAAQ,EAAE,KAAKA,QAHV;AAILC,IAAAA,QAAQ,EAAE,KAAKA,QAJV;AAKLM,IAAAA,GAAG,EAAE,KAAKA,GALL;AAMLK,IAAAA,MAAM,EAAE,KAAKA,MANR;AAOLC,IAAAA,MAAM,EAAE,KAAKA,MAPR;AAQLC,IAAAA,QAAQ,EAAE,KAAKA;AARV,GAAP;AAUD,CAXD","sourcesContent":["\n/*!\n * Stylus - Selector\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Block = require('./block')\n  , Node = require('./node');\n\n/**\n * Initialize a new `Selector` with the given `segs`.\n *\n * @param {Array} segs\n * @api public\n */\n\nvar Selector = module.exports = function Selector(segs){\n  Node.call(this);\n  this.inherits = true;\n  this.segments = segs;\n  this.optional = false;\n};\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nSelector.prototype.__proto__ = Node.prototype;\n\n/**\n * Return the selector string.\n *\n * @return {String}\n * @api public\n */\n\nSelector.prototype.toString = function(){\n  return this.segments.join('') + (this.optional ? ' !optional' : '');\n};\n\n/**\n * Check if this is placeholder selector.\n *\n * @return {Boolean}\n * @api public\n */\n\nSelector.prototype.__defineGetter__('isPlaceholder', function(){\n  return this.val && ~this.val.substr(0, 2).indexOf('$');\n});\n\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nSelector.prototype.clone = function(parent){\n  var clone = new Selector;\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  clone.inherits = this.inherits;\n  clone.val = this.val;\n  clone.segments = this.segments.map(function(node){ return node.clone(parent, clone); });\n  clone.optional = this.optional;\n  return clone;\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nSelector.prototype.toJSON = function(){\n  return {\n    __type: 'Selector',\n    inherits: this.inherits,\n    segments: this.segments,\n    optional: this.optional,\n    val: this.val,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n"]},"metadata":{},"sourceType":"script"}