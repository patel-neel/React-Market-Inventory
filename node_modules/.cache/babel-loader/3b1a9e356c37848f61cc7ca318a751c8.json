{"ast":null,"code":"/*!\n * Stylus - Literal\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nvar Node = require('./node'),\n    nodes = require('./');\n/**\n * Initialize a new `Literal` with the given `str`.\n *\n * @param {String} str\n * @api public\n */\n\n\nvar Literal = module.exports = function Literal(str) {\n  Node.call(this);\n  this.val = str;\n  this.string = str;\n  this.prefixed = false;\n};\n/**\n * Inherit from `Node.prototype`.\n */\n\n\nLiteral.prototype.__proto__ = Node.prototype;\n/**\n * Return hash.\n *\n * @return {String}\n * @api public\n */\n\nLiteral.prototype.__defineGetter__('hash', function () {\n  return this.val;\n});\n/**\n * Return literal value.\n *\n * @return {String}\n * @api public\n */\n\n\nLiteral.prototype.toString = function () {\n  return this.val.toString();\n};\n/**\n * Coerce `other` to a literal.\n *\n * @param {Node} other\n * @return {String}\n * @api public\n */\n\n\nLiteral.prototype.coerce = function (other) {\n  switch (other.nodeName) {\n    case 'ident':\n    case 'string':\n    case 'literal':\n      return new Literal(other.string);\n\n    default:\n      return Node.prototype.coerce.call(this, other);\n  }\n};\n/**\n * Operate on `right` with the given `op`.\n *\n * @param {String} op\n * @param {Node} right\n * @return {Node}\n * @api public\n */\n\n\nLiteral.prototype.operate = function (op, right) {\n  var val = right.first;\n\n  switch (op) {\n    case '+':\n      return new nodes.Literal(this.string + this.coerce(val).string);\n\n    default:\n      return Node.prototype.operate.call(this, op, right);\n  }\n};\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\n\nLiteral.prototype.toJSON = function () {\n  return {\n    __type: 'Literal',\n    val: this.val,\n    string: this.string,\n    prefixed: this.prefixed,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/nodes/literal.js"],"names":["Node","require","nodes","Literal","module","exports","str","call","val","string","prefixed","prototype","__proto__","__defineGetter__","toString","coerce","other","nodeName","operate","op","right","first","toJSON","__type","lineno","column","filename"],"mappings":"AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;AAAA,IACIC,KAAK,GAAGD,OAAO,CAAC,IAAD,CADnB;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIE,OAAO,GAAGC,MAAM,CAACC,OAAP,GAAiB,SAASF,OAAT,CAAiBG,GAAjB,EAAqB;AAClDN,EAAAA,IAAI,CAACO,IAAL,CAAU,IAAV;AACA,OAAKC,GAAL,GAAWF,GAAX;AACA,OAAKG,MAAL,GAAcH,GAAd;AACA,OAAKI,QAAL,GAAgB,KAAhB;AACD,CALD;AAOA;AACA;AACA;;;AAEAP,OAAO,CAACQ,SAAR,CAAkBC,SAAlB,GAA8BZ,IAAI,CAACW,SAAnC;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAR,OAAO,CAACQ,SAAR,CAAkBE,gBAAlB,CAAmC,MAAnC,EAA2C,YAAU;AACnD,SAAO,KAAKL,GAAZ;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAEAL,OAAO,CAACQ,SAAR,CAAkBG,QAAlB,GAA6B,YAAU;AACrC,SAAO,KAAKN,GAAL,CAASM,QAAT,EAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAX,OAAO,CAACQ,SAAR,CAAkBI,MAAlB,GAA2B,UAASC,KAAT,EAAe;AACxC,UAAQA,KAAK,CAACC,QAAd;AACE,SAAK,OAAL;AACA,SAAK,QAAL;AACA,SAAK,SAAL;AACE,aAAO,IAAId,OAAJ,CAAYa,KAAK,CAACP,MAAlB,CAAP;;AACF;AACE,aAAOT,IAAI,CAACW,SAAL,CAAeI,MAAf,CAAsBR,IAAtB,CAA2B,IAA3B,EAAiCS,KAAjC,CAAP;AANJ;AAQD,CATD;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAb,OAAO,CAACQ,SAAR,CAAkBO,OAAlB,GAA4B,UAASC,EAAT,EAAaC,KAAb,EAAmB;AAC7C,MAAIZ,GAAG,GAAGY,KAAK,CAACC,KAAhB;;AACA,UAAQF,EAAR;AACE,SAAK,GAAL;AACE,aAAO,IAAIjB,KAAK,CAACC,OAAV,CAAkB,KAAKM,MAAL,GAAc,KAAKM,MAAL,CAAYP,GAAZ,EAAiBC,MAAjD,CAAP;;AACF;AACE,aAAOT,IAAI,CAACW,SAAL,CAAeO,OAAf,CAAuBX,IAAvB,CAA4B,IAA5B,EAAkCY,EAAlC,EAAsCC,KAAtC,CAAP;AAJJ;AAMD,CARD;AAUA;AACA;AACA;AACA;AACA;AACA;;;AAEAjB,OAAO,CAACQ,SAAR,CAAkBW,MAAlB,GAA2B,YAAU;AACnC,SAAO;AACLC,IAAAA,MAAM,EAAE,SADH;AAELf,IAAAA,GAAG,EAAE,KAAKA,GAFL;AAGLC,IAAAA,MAAM,EAAE,KAAKA,MAHR;AAILC,IAAAA,QAAQ,EAAE,KAAKA,QAJV;AAKLc,IAAAA,MAAM,EAAE,KAAKA,MALR;AAMLC,IAAAA,MAAM,EAAE,KAAKA,MANR;AAOLC,IAAAA,QAAQ,EAAE,KAAKA;AAPV,GAAP;AASD,CAVD","sourcesContent":["\n/*!\n * Stylus - Literal\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node')\n  , nodes = require('./');\n\n/**\n * Initialize a new `Literal` with the given `str`.\n *\n * @param {String} str\n * @api public\n */\n\nvar Literal = module.exports = function Literal(str){\n  Node.call(this);\n  this.val = str;\n  this.string = str;\n  this.prefixed = false;\n};\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nLiteral.prototype.__proto__ = Node.prototype;\n\n/**\n * Return hash.\n *\n * @return {String}\n * @api public\n */\n\nLiteral.prototype.__defineGetter__('hash', function(){\n  return this.val;\n});\n\n/**\n * Return literal value.\n *\n * @return {String}\n * @api public\n */\n\nLiteral.prototype.toString = function(){\n  return this.val.toString();\n};\n\n/**\n * Coerce `other` to a literal.\n *\n * @param {Node} other\n * @return {String}\n * @api public\n */\n\nLiteral.prototype.coerce = function(other){\n  switch (other.nodeName) {\n    case 'ident':\n    case 'string':\n    case 'literal':\n      return new Literal(other.string);\n    default:\n      return Node.prototype.coerce.call(this, other);\n  }\n};\n\n/**\n * Operate on `right` with the given `op`.\n *\n * @param {String} op\n * @param {Node} right\n * @return {Node}\n * @api public\n */\n\nLiteral.prototype.operate = function(op, right){\n  var val = right.first;\n  switch (op) {\n    case '+':\n      return new nodes.Literal(this.string + this.coerce(val).string);\n    default:\n      return Node.prototype.operate.call(this, op, right);\n  }\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nLiteral.prototype.toJSON = function(){\n  return {\n    __type: 'Literal',\n    val: this.val,\n    string: this.string,\n    prefixed: this.prefixed,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n"]},"metadata":{},"sourceType":"script"}