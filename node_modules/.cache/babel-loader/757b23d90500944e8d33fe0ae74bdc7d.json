{"ast":null,"code":"/*!\n * Stylus - Compiler\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nvar Visitor = require('./'),\n    utils = require('../utils'),\n    fs = require('fs');\n/**\n * Initialize a new `Compiler` with the given `root` Node\n * and the following `options`.\n *\n * Options:\n *\n *   - `compress`  Compress the CSS output (default: false)\n *\n * @param {Node} root\n * @api public\n */\n\n\nvar Compiler = module.exports = function Compiler(root, options) {\n  options = options || {};\n  this.compress = options.compress;\n  this.firebug = options.firebug;\n  this.linenos = options.linenos;\n  this.spaces = options['indent spaces'] || 2;\n  this.indents = 1;\n  Visitor.call(this, root);\n  this.stack = [];\n};\n/**\n * Inherit from `Visitor.prototype`.\n */\n\n\nCompiler.prototype.__proto__ = Visitor.prototype;\n/**\n * Compile to css, and return a string of CSS.\n *\n * @return {String}\n * @api private\n */\n\nCompiler.prototype.compile = function () {\n  return this.visit(this.root);\n};\n/**\n * Output `str`\n *\n * @param {String} str\n * @param {Node} node\n * @return {String}\n * @api private\n */\n\n\nCompiler.prototype.out = function (str, node) {\n  return str;\n};\n/**\n * Return indentation string.\n *\n * @return {String}\n * @api private\n */\n\n\nCompiler.prototype.__defineGetter__('indent', function () {\n  if (this.compress) return '';\n  return new Array(this.indents).join(Array(this.spaces + 1).join(' '));\n});\n/**\n * Check if given `node` needs brackets.\n *\n * @param {Node} node\n * @return {Boolean}\n * @api private\n */\n\n\nCompiler.prototype.needBrackets = function (node) {\n  return 1 == this.indents || 'atrule' != node.nodeName || node.hasOnlyProperties;\n};\n/**\n * Visit Root.\n */\n\n\nCompiler.prototype.visitRoot = function (block) {\n  this.buf = '';\n\n  for (var i = 0, len = block.nodes.length; i < len; ++i) {\n    var node = block.nodes[i];\n    if (this.linenos || this.firebug) this.debugInfo(node);\n    var ret = this.visit(node);\n    if (ret) this.buf += this.out(ret + '\\n', node);\n  }\n\n  return this.buf;\n};\n/**\n * Visit Block.\n */\n\n\nCompiler.prototype.visitBlock = function (block) {\n  var node,\n      separator = this.compress ? '' : '\\n',\n      needBrackets,\n      lastPropertyIndex;\n\n  if (block.hasProperties && !block.lacksRenderedSelectors) {\n    needBrackets = this.needBrackets(block.node);\n\n    if (this.compress) {\n      for (var i = block.nodes.length - 1; i >= 0; --i) {\n        if (block.nodes[i].nodeName === 'property') {\n          lastPropertyIndex = i;\n          break;\n        }\n      }\n    }\n\n    if (needBrackets) {\n      this.buf += this.out(this.compress ? '{' : ' {\\n');\n      ++this.indents;\n    }\n\n    for (var i = 0, len = block.nodes.length; i < len; ++i) {\n      this.last = lastPropertyIndex === i;\n      node = block.nodes[i];\n\n      switch (node.nodeName) {\n        case 'null':\n        case 'expression':\n        case 'function':\n        case 'group':\n        case 'block':\n        case 'unit':\n        case 'media':\n        case 'keyframes':\n        case 'atrule':\n        case 'supports':\n          continue;\n        // inline comments\n\n        case !this.compress && node.inline && 'comment':\n          this.buf = this.buf.slice(0, -1);\n          this.buf += this.out(' ' + this.visit(node) + '\\n', node);\n          break;\n\n        case 'property':\n          var ret = this.visit(node) + separator;\n          this.buf += this.compress ? ret : this.out(ret, node);\n          break;\n\n        default:\n          this.buf += this.out(this.visit(node) + separator, node);\n      }\n    }\n\n    if (needBrackets) {\n      --this.indents;\n      this.buf += this.out(this.indent + '}' + separator);\n    }\n  } // Nesting\n\n\n  for (var i = 0, len = block.nodes.length; i < len; ++i) {\n    node = block.nodes[i];\n\n    switch (node.nodeName) {\n      case 'group':\n      case 'block':\n      case 'keyframes':\n        if (this.linenos || this.firebug) this.debugInfo(node);\n        this.visit(node);\n        break;\n\n      case 'media':\n      case 'import':\n      case 'atrule':\n      case 'supports':\n        this.visit(node);\n        break;\n\n      case 'comment':\n        // only show unsuppressed comments\n        if (!node.suppress) {\n          this.buf += this.out(this.indent + this.visit(node) + '\\n', node);\n        }\n\n        break;\n\n      case 'charset':\n      case 'literal':\n      case 'namespace':\n        this.buf += this.out(this.visit(node) + '\\n', node);\n        break;\n    }\n  }\n};\n/**\n * Visit Keyframes.\n */\n\n\nCompiler.prototype.visitKeyframes = function (node) {\n  if (!node.frames) return;\n  var prefix = 'official' == node.prefix ? '' : '-' + node.prefix + '-';\n  this.buf += this.out('@' + prefix + 'keyframes ' + this.visit(node.val) + (this.compress ? '{' : ' {\\n'), node);\n  this.keyframe = true;\n  ++this.indents;\n  this.visit(node.block);\n  --this.indents;\n  this.keyframe = false;\n  this.buf += this.out('}' + (this.compress ? '' : '\\n'));\n};\n/**\n * Visit Media.\n */\n\n\nCompiler.prototype.visitMedia = function (media) {\n  var val = media.val;\n  if (!media.hasOutput || !val.nodes.length) return;\n  this.buf += this.out('@media ', media);\n  this.visit(val);\n  this.buf += this.out(this.compress ? '{' : ' {\\n');\n  ++this.indents;\n  this.visit(media.block);\n  --this.indents;\n  this.buf += this.out('}' + (this.compress ? '' : '\\n'));\n};\n/**\n * Visit QueryList.\n */\n\n\nCompiler.prototype.visitQueryList = function (queries) {\n  for (var i = 0, len = queries.nodes.length; i < len; ++i) {\n    this.visit(queries.nodes[i]);\n    if (len - 1 != i) this.buf += this.out(',' + (this.compress ? '' : ' '));\n  }\n};\n/**\n * Visit Query.\n */\n\n\nCompiler.prototype.visitQuery = function (node) {\n  var len = node.nodes.length;\n  if (node.predicate) this.buf += this.out(node.predicate + ' ');\n  if (node.type) this.buf += this.out(node.type + (len ? ' and ' : ''));\n\n  for (var i = 0; i < len; ++i) {\n    this.buf += this.out(this.visit(node.nodes[i]));\n    if (len - 1 != i) this.buf += this.out(' and ');\n  }\n};\n/**\n * Visit Feature.\n */\n\n\nCompiler.prototype.visitFeature = function (node) {\n  if (!node.expr) {\n    return node.name;\n  } else if (node.expr.isEmpty) {\n    return '(' + node.name + ')';\n  } else {\n    return '(' + node.name + ':' + (this.compress ? '' : ' ') + this.visit(node.expr) + ')';\n  }\n};\n/**\n * Visit Import.\n */\n\n\nCompiler.prototype.visitImport = function (imported) {\n  this.buf += this.out('@import ' + this.visit(imported.path) + ';\\n', imported);\n};\n/**\n * Visit Atrule.\n */\n\n\nCompiler.prototype.visitAtrule = function (atrule) {\n  var newline = this.compress ? '' : '\\n';\n  this.buf += this.out(this.indent + '@' + atrule.type, atrule);\n  if (atrule.val) this.buf += this.out(' ' + atrule.val.trim());\n\n  if (atrule.block) {\n    if (atrule.block.isEmpty) {\n      this.buf += this.out((this.compress ? '' : ' ') + '{}' + newline);\n    } else if (atrule.hasOnlyProperties) {\n      this.visit(atrule.block);\n    } else {\n      this.buf += this.out(this.compress ? '{' : ' {\\n');\n      ++this.indents;\n      this.visit(atrule.block);\n      --this.indents;\n      this.buf += this.out(this.indent + '}' + newline);\n    }\n  } else {\n    this.buf += this.out(';' + newline);\n  }\n};\n/**\n * Visit Supports.\n */\n\n\nCompiler.prototype.visitSupports = function (node) {\n  if (!node.hasOutput) return;\n  this.buf += this.out(this.indent + '@supports ', node);\n  this.isCondition = true;\n  this.buf += this.out(this.visit(node.condition));\n  this.isCondition = false;\n  this.buf += this.out(this.compress ? '{' : ' {\\n');\n  ++this.indents;\n  this.visit(node.block);\n  --this.indents;\n  this.buf += this.out(this.indent + '}' + (this.compress ? '' : '\\n'));\n},\n/**\n * Visit Comment.\n */\nCompiler.prototype.visitComment = function (comment) {\n  return this.compress ? comment.suppress ? '' : comment.str : comment.str;\n};\n/**\n * Visit Function.\n */\n\nCompiler.prototype.visitFunction = function (fn) {\n  return fn.name;\n};\n/**\n * Visit Charset.\n */\n\n\nCompiler.prototype.visitCharset = function (charset) {\n  return '@charset ' + this.visit(charset.val) + ';';\n};\n/**\n * Visit Namespace.\n */\n\n\nCompiler.prototype.visitNamespace = function (namespace) {\n  return '@namespace ' + (namespace.prefix ? this.visit(namespace.prefix) + ' ' : '') + this.visit(namespace.val) + ';';\n};\n/**\n * Visit Literal.\n */\n\n\nCompiler.prototype.visitLiteral = function (lit) {\n  var val = lit.val;\n  if (lit.css) val = val.replace(/^  /gm, '');\n  return val;\n};\n/**\n * Visit Boolean.\n */\n\n\nCompiler.prototype.visitBoolean = function (bool) {\n  return bool.toString();\n};\n/**\n * Visit RGBA.\n */\n\n\nCompiler.prototype.visitRGBA = function (rgba) {\n  return rgba.toString();\n};\n/**\n * Visit HSLA.\n */\n\n\nCompiler.prototype.visitHSLA = function (hsla) {\n  return hsla.rgba.toString();\n};\n/**\n * Visit Unit.\n */\n\n\nCompiler.prototype.visitUnit = function (unit) {\n  var type = unit.type || '',\n      n = unit.val,\n      float = n != (n | 0); // Compress\n\n  if (this.compress) {\n    // Always return '0' unless the unit is a percentage, time, degree or fraction\n    if (!['%', 's', 'ms', 'deg', 'fr'].includes(type) && 0 == n) return '0'; // Omit leading '0' on floats\n\n    if (float && n < 1 && n > -1) {\n      return n.toString().replace('0.', '.') + type;\n    }\n  }\n\n  return (float ? parseFloat(n.toFixed(15)) : n).toString() + type;\n};\n/**\n * Visit Group.\n */\n\n\nCompiler.prototype.visitGroup = function (group) {\n  var stack = this.keyframe ? [] : this.stack,\n      comma = this.compress ? ',' : ',\\n';\n  stack.push(group.nodes); // selectors\n\n  if (group.block.hasProperties) {\n    var selectors = utils.compileSelectors.call(this, stack),\n        len = selectors.length;\n\n    if (len) {\n      if (this.keyframe) comma = this.compress ? ',' : ', ';\n\n      for (var i = 0; i < len; ++i) {\n        var selector = selectors[i],\n            last = i == len - 1; // keyframe blocks (10%, 20% { ... })\n\n        if (this.keyframe) selector = i ? selector.trim() : selector;\n        this.buf += this.out(selector + (last ? '' : comma), group.nodes[i]);\n      }\n    } else {\n      group.block.lacksRenderedSelectors = true;\n    }\n  } // output block\n\n\n  this.visit(group.block);\n  stack.pop();\n};\n/**\n * Visit Ident.\n */\n\n\nCompiler.prototype.visitIdent = function (ident) {\n  return ident.name;\n};\n/**\n * Visit String.\n */\n\n\nCompiler.prototype.visitString = function (string) {\n  return this.isURL ? string.val : string.toString();\n};\n/**\n * Visit Null.\n */\n\n\nCompiler.prototype.visitNull = function (node) {\n  return '';\n};\n/**\n * Visit Call.\n */\n\n\nCompiler.prototype.visitCall = function (call) {\n  this.isURL = 'url' == call.name;\n  var args = call.args.nodes.map(function (arg) {\n    return this.visit(arg);\n  }, this).join(this.compress ? ',' : ', ');\n  if (this.isURL) args = '\"' + args + '\"';\n  this.isURL = false;\n  return call.name + '(' + args + ')';\n};\n/**\n * Visit Expression.\n */\n\n\nCompiler.prototype.visitExpression = function (expr) {\n  var buf = [],\n      self = this,\n      len = expr.nodes.length,\n      nodes = expr.nodes.map(function (node) {\n    return self.visit(node);\n  });\n  nodes.forEach(function (node, i) {\n    var last = i == len - 1;\n    buf.push(node);\n    if ('/' == nodes[i + 1] || '/' == node) return;\n    if (last) return;\n    var space = self.isURL || self.isCondition && (')' == nodes[i + 1] || '(' == node) ? '' : ' ';\n    buf.push(expr.isList ? self.compress ? ',' : ', ' : space);\n  });\n  return buf.join('');\n};\n/**\n * Visit Arguments.\n */\n\n\nCompiler.prototype.visitArguments = Compiler.prototype.visitExpression;\n/**\n * Visit Property.\n */\n\nCompiler.prototype.visitProperty = function (prop) {\n  var val = this.visit(prop.expr).trim(),\n      name = prop.name || prop.segments.join(''),\n      arr = [];\n\n  if (name === '@apply') {\n    arr.push(this.out(this.indent), this.out(name + ' ', prop), this.out(val, prop.expr), this.out(this.compress ? this.last ? '' : ';' : ';'));\n    return arr.join('');\n  }\n\n  arr.push(this.out(this.indent), this.out(name + (this.compress ? ':' : ': '), prop), this.out(val, prop.expr), this.out(this.compress ? this.last ? '' : ';' : ';'));\n  return arr.join('');\n};\n/**\n * Debug info.\n */\n\n\nCompiler.prototype.debugInfo = function (node) {\n  var path = node.filename == 'stdin' ? 'stdin' : fs.realpathSync(node.filename),\n      line = (node.nodes && node.nodes.length ? node.nodes[0].lineno : node.lineno) || 1;\n\n  if (this.linenos) {\n    this.buf += '\\n/* ' + 'line ' + line + ' : ' + path + ' */\\n';\n  }\n\n  if (this.firebug) {\n    // debug info for firebug, the crazy formatting is needed\n    path = 'file\\\\\\:\\\\\\/\\\\\\/' + path.replace(/([.:/\\\\])/g, function (m) {\n      return '\\\\' + (m === '\\\\' ? '\\/' : m);\n    });\n    line = '\\\\00003' + line;\n    this.buf += '\\n@media -stylus-debug-info' + '{filename{font-family:' + path + '}line{font-family:' + line + '}}\\n';\n  }\n};","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/visitor/compiler.js"],"names":["Visitor","require","utils","fs","Compiler","module","exports","root","options","compress","firebug","linenos","spaces","indents","call","stack","prototype","__proto__","compile","visit","out","str","node","__defineGetter__","Array","join","needBrackets","nodeName","hasOnlyProperties","visitRoot","block","buf","i","len","nodes","length","debugInfo","ret","visitBlock","separator","lastPropertyIndex","hasProperties","lacksRenderedSelectors","last","inline","slice","indent","suppress","visitKeyframes","frames","prefix","val","keyframe","visitMedia","media","hasOutput","visitQueryList","queries","visitQuery","predicate","type","visitFeature","expr","name","isEmpty","visitImport","imported","path","visitAtrule","atrule","newline","trim","visitSupports","isCondition","condition","visitComment","comment","visitFunction","fn","visitCharset","charset","visitNamespace","namespace","visitLiteral","lit","css","replace","visitBoolean","bool","toString","visitRGBA","rgba","visitHSLA","hsla","visitUnit","unit","n","float","includes","parseFloat","toFixed","visitGroup","group","comma","push","selectors","compileSelectors","selector","pop","visitIdent","ident","visitString","string","isURL","visitNull","visitCall","args","map","arg","visitExpression","self","forEach","space","isList","visitArguments","visitProperty","prop","segments","arr","filename","realpathSync","line","lineno","m"],"mappings":"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","sourcesContent":["/*!\n * Stylus - Compiler\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Visitor = require('./')\n  , utils = require('../utils')\n  , fs = require('fs');\n\n/**\n * Initialize a new `Compiler` with the given `root` Node\n * and the following `options`.\n *\n * Options:\n *\n *   - `compress`  Compress the CSS output (default: false)\n *\n * @param {Node} root\n * @api public\n */\n\nvar Compiler = module.exports = function Compiler(root, options) {\n  options = options || {};\n  this.compress = options.compress;\n  this.firebug = options.firebug;\n  this.linenos = options.linenos;\n  this.spaces = options['indent spaces'] || 2;\n  this.indents = 1;\n  Visitor.call(this, root);\n  this.stack = [];\n};\n\n/**\n * Inherit from `Visitor.prototype`.\n */\n\nCompiler.prototype.__proto__ = Visitor.prototype;\n\n/**\n * Compile to css, and return a string of CSS.\n *\n * @return {String}\n * @api private\n */\n\nCompiler.prototype.compile = function(){\n  return this.visit(this.root);\n};\n\n/**\n * Output `str`\n *\n * @param {String} str\n * @param {Node} node\n * @return {String}\n * @api private\n */\n\nCompiler.prototype.out = function(str, node){\n  return str;\n};\n\n/**\n * Return indentation string.\n *\n * @return {String}\n * @api private\n */\n\nCompiler.prototype.__defineGetter__('indent', function(){\n  if (this.compress) return '';\n  return new Array(this.indents).join(Array(this.spaces + 1).join(' '));\n});\n\n/**\n * Check if given `node` needs brackets.\n *\n * @param {Node} node\n * @return {Boolean}\n * @api private\n */\n\nCompiler.prototype.needBrackets = function(node){\n  return 1 == this.indents\n    || 'atrule' != node.nodeName\n    || node.hasOnlyProperties;\n};\n\n/**\n * Visit Root.\n */\n\nCompiler.prototype.visitRoot = function(block){\n  this.buf = '';\n  for (var i = 0, len = block.nodes.length; i < len; ++i) {\n    var node = block.nodes[i];\n    if (this.linenos || this.firebug) this.debugInfo(node);\n    var ret = this.visit(node);\n    if (ret) this.buf += this.out(ret + '\\n', node);\n  }\n  return this.buf;\n};\n\n/**\n * Visit Block.\n */\n\nCompiler.prototype.visitBlock = function(block){\n  var node\n    , separator = this.compress ? '' : '\\n'\n    , needBrackets\n    , lastPropertyIndex;\n\n  if (block.hasProperties && !block.lacksRenderedSelectors) {\n    needBrackets = this.needBrackets(block.node);\n\n    if (this.compress) {\n        for (var i = block.nodes.length - 1; i >= 0; --i) {\n            if (block.nodes[i].nodeName === 'property') {\n                lastPropertyIndex = i;\n                break;\n            }\n        }\n    }\n    if (needBrackets) {\n      this.buf += this.out(this.compress ? '{' : ' {\\n');\n      ++this.indents;\n    }\n    for (var i = 0, len = block.nodes.length; i < len; ++i) {\n      this.last = lastPropertyIndex === i;\n      node = block.nodes[i];\n      switch (node.nodeName) {\n        case 'null':\n        case 'expression':\n        case 'function':\n        case 'group':\n        case 'block':\n        case 'unit':\n        case 'media':\n        case 'keyframes':\n        case 'atrule':\n        case 'supports':\n          continue;\n        // inline comments\n        case !this.compress && node.inline && 'comment':\n          this.buf = this.buf.slice(0, -1);\n          this.buf += this.out(' ' + this.visit(node) + '\\n', node);\n          break;\n        case 'property':\n          var ret = this.visit(node) + separator;\n          this.buf += this.compress ? ret : this.out(ret, node);\n          break;\n        default:\n          this.buf += this.out(this.visit(node) + separator, node);\n      }\n    }\n    if (needBrackets) {\n      --this.indents;\n      this.buf += this.out(this.indent + '}' + separator);\n    }\n  }\n\n  // Nesting\n  for (var i = 0, len = block.nodes.length; i < len; ++i) {\n    node = block.nodes[i];\n    switch (node.nodeName) {\n      case 'group':\n      case 'block':\n      case 'keyframes':\n        if (this.linenos || this.firebug) this.debugInfo(node);\n        this.visit(node);\n        break;\n      case 'media':\n      case 'import':\n      case 'atrule':\n      case 'supports':\n        this.visit(node);\n        break;\n      case 'comment':\n        // only show unsuppressed comments\n        if (!node.suppress) {\n          this.buf += this.out(this.indent + this.visit(node) + '\\n', node);\n        }\n        break;\n      case 'charset':\n      case 'literal':\n      case 'namespace':\n        this.buf += this.out(this.visit(node) + '\\n', node);\n        break;\n    }\n  }\n};\n\n/**\n * Visit Keyframes.\n */\n\nCompiler.prototype.visitKeyframes = function(node){\n  if (!node.frames) return;\n\n  var prefix = 'official' == node.prefix\n    ? ''\n    : '-' + node.prefix + '-';\n\n  this.buf += this.out('@' + prefix + 'keyframes '\n    + this.visit(node.val)\n    + (this.compress ? '{' : ' {\\n'), node);\n\n  this.keyframe = true;\n  ++this.indents;\n  this.visit(node.block);\n  --this.indents;\n  this.keyframe = false;\n\n  this.buf += this.out('}' + (this.compress ? '' : '\\n'));\n};\n\n/**\n * Visit Media.\n */\n\nCompiler.prototype.visitMedia = function(media){\n  var val = media.val;\n  if (!media.hasOutput || !val.nodes.length) return;\n\n  this.buf += this.out('@media ', media);\n  this.visit(val);\n  this.buf += this.out(this.compress ? '{' : ' {\\n');\n  ++this.indents;\n  this.visit(media.block);\n  --this.indents;\n  this.buf += this.out('}' + (this.compress ? '' : '\\n'));\n};\n\n/**\n * Visit QueryList.\n */\n\nCompiler.prototype.visitQueryList = function(queries){\n  for (var i = 0, len = queries.nodes.length; i < len; ++i) {\n    this.visit(queries.nodes[i]);\n    if (len - 1 != i) this.buf += this.out(',' + (this.compress ? '' : ' '));\n  }\n};\n\n/**\n * Visit Query.\n */\n\nCompiler.prototype.visitQuery = function(node){\n  var len = node.nodes.length;\n  if (node.predicate) this.buf += this.out(node.predicate + ' ');\n  if (node.type) this.buf += this.out(node.type + (len ? ' and ' : ''));\n  for (var i = 0; i < len; ++i) {\n    this.buf += this.out(this.visit(node.nodes[i]));\n    if (len - 1 != i) this.buf += this.out(' and ');\n  }\n};\n\n/**\n * Visit Feature.\n */\n\nCompiler.prototype.visitFeature = function(node){\n  if (!node.expr) {\n    return node.name;\n  } else if (node.expr.isEmpty) {\n    return '(' + node.name + ')';\n  } else {\n    return '(' + node.name + ':' + (this.compress ? '' : ' ') + this.visit(node.expr) + ')';\n  }\n};\n\n/**\n * Visit Import.\n */\n\nCompiler.prototype.visitImport = function(imported){\n  this.buf += this.out('@import ' + this.visit(imported.path) + ';\\n', imported);\n};\n\n/**\n * Visit Atrule.\n */\n\nCompiler.prototype.visitAtrule = function(atrule){\n  var newline = this.compress ? '' : '\\n';\n\n  this.buf += this.out(this.indent + '@' + atrule.type, atrule);\n\n  if (atrule.val) this.buf += this.out(' ' + atrule.val.trim());\n\n  if (atrule.block) {\n    if (atrule.block.isEmpty) {\n      this.buf += this.out((this.compress ? '' : ' ') + '{}' + newline);\n    } else if (atrule.hasOnlyProperties) {\n      this.visit(atrule.block);\n    } else {\n      this.buf += this.out(this.compress ? '{' : ' {\\n');\n      ++this.indents;\n      this.visit(atrule.block);\n      --this.indents;\n      this.buf += this.out(this.indent + '}' + newline);\n    }\n  } else {\n    this.buf += this.out(';' + newline);\n  }\n};\n\n/**\n * Visit Supports.\n */\n\nCompiler.prototype.visitSupports = function(node){\n  if (!node.hasOutput) return;\n\n  this.buf += this.out(this.indent + '@supports ', node);\n  this.isCondition = true;\n  this.buf += this.out(this.visit(node.condition));\n  this.isCondition = false;\n  this.buf += this.out(this.compress ? '{' : ' {\\n');\n  ++this.indents;\n  this.visit(node.block);\n  --this.indents;\n  this.buf += this.out(this.indent + '}' + (this.compress ? '' : '\\n'));\n},\n\n/**\n * Visit Comment.\n */\n\nCompiler.prototype.visitComment = function(comment){\n  return this.compress\n    ? comment.suppress\n      ? ''\n      : comment.str\n    : comment.str;\n};\n\n/**\n * Visit Function.\n */\n\nCompiler.prototype.visitFunction = function(fn){\n  return fn.name;\n};\n\n/**\n * Visit Charset.\n */\n\nCompiler.prototype.visitCharset = function(charset){\n  return '@charset ' + this.visit(charset.val) + ';';\n};\n\n/**\n * Visit Namespace.\n */\n\nCompiler.prototype.visitNamespace = function(namespace){\n  return '@namespace '\n    + (namespace.prefix ? this.visit(namespace.prefix) + ' ' : '')\n    + this.visit(namespace.val) + ';';\n};\n\n/**\n * Visit Literal.\n */\n\nCompiler.prototype.visitLiteral = function(lit){\n  var val = lit.val;\n  if (lit.css) val = val.replace(/^  /gm, '');\n  return val;\n};\n\n/**\n * Visit Boolean.\n */\n\nCompiler.prototype.visitBoolean = function(bool){\n  return bool.toString();\n};\n\n/**\n * Visit RGBA.\n */\n\nCompiler.prototype.visitRGBA = function(rgba){\n  return rgba.toString();\n};\n\n/**\n * Visit HSLA.\n */\n\nCompiler.prototype.visitHSLA = function(hsla){\n  return hsla.rgba.toString();\n};\n\n/**\n * Visit Unit.\n */\n\nCompiler.prototype.visitUnit = function(unit){\n  var type = unit.type || ''\n    , n = unit.val\n    , float = n != (n | 0);\n\n  // Compress\n  if (this.compress) {\n    // Always return '0' unless the unit is a percentage, time, degree or fraction\n    if (!(['%', 's', 'ms', 'deg', 'fr'].includes(type)) && 0 == n) return '0';\n    // Omit leading '0' on floats\n    if (float && n < 1 && n > -1) {\n      return n.toString().replace('0.', '.') + type;\n    }\n  }\n\n  return (float ? parseFloat(n.toFixed(15)) : n).toString() + type;\n};\n\n/**\n * Visit Group.\n */\n\nCompiler.prototype.visitGroup = function(group){\n  var stack = this.keyframe ? [] : this.stack\n    , comma = this.compress ? ',' : ',\\n';\n\n  stack.push(group.nodes);\n\n  // selectors\n  if (group.block.hasProperties) {\n    var selectors = utils.compileSelectors.call(this, stack)\n      , len = selectors.length;\n\n    if (len) {\n      if (this.keyframe) comma = this.compress ? ',' : ', ';\n\n      for (var i = 0; i < len; ++i) {\n        var selector = selectors[i]\n          , last = (i == len - 1);\n\n        // keyframe blocks (10%, 20% { ... })\n        if (this.keyframe) selector = i ? selector.trim() : selector;\n\n        this.buf += this.out(selector + (last ? '' : comma), group.nodes[i]);\n      }\n    } else {\n      group.block.lacksRenderedSelectors = true;\n    }\n  }\n\n  // output block\n  this.visit(group.block);\n  stack.pop();\n};\n\n/**\n * Visit Ident.\n */\n\nCompiler.prototype.visitIdent = function(ident){\n  return ident.name;\n};\n\n/**\n * Visit String.\n */\n\nCompiler.prototype.visitString = function(string){\n  return this.isURL\n    ? string.val\n    : string.toString();\n};\n\n/**\n * Visit Null.\n */\n\nCompiler.prototype.visitNull = function(node){\n  return '';\n};\n\n/**\n * Visit Call.\n */\n\nCompiler.prototype.visitCall = function(call){\n  this.isURL = 'url' == call.name;\n  var args = call.args.nodes.map(function(arg){\n    return this.visit(arg);\n  }, this).join(this.compress ? ',' : ', ');\n  if (this.isURL) args = '\"' + args + '\"';\n  this.isURL = false;\n  return call.name + '(' + args + ')';\n};\n\n/**\n * Visit Expression.\n */\n\nCompiler.prototype.visitExpression = function(expr){\n  var buf = []\n    , self = this\n    , len = expr.nodes.length\n    , nodes = expr.nodes.map(function(node){ return self.visit(node); });\n\n  nodes.forEach(function(node, i){\n    var last = i == len - 1;\n    buf.push(node);\n    if ('/' == nodes[i + 1] || '/' == node) return;\n    if (last) return;\n\n    var space = self.isURL || (self.isCondition\n        && (')' == nodes[i + 1] || '(' == node))\n        ? '' : ' ';\n\n    buf.push(expr.isList\n      ? (self.compress ? ',' : ', ')\n      : space);\n  });\n\n  return buf.join('');\n};\n\n/**\n * Visit Arguments.\n */\n\nCompiler.prototype.visitArguments = Compiler.prototype.visitExpression;\n\n/**\n * Visit Property.\n */\n\nCompiler.prototype.visitProperty = function(prop){\n  var val = this.visit(prop.expr).trim()\n    , name = (prop.name || prop.segments.join(''))\n    , arr = [];\n\n  if (name === '@apply') {\n    arr.push(\n      this.out(this.indent),\n      this.out(name + ' ', prop),\n      this.out(val, prop.expr),\n      this.out(this.compress ? (this.last ? '' : ';') : ';')\n    );\n    return arr.join('');\n  }\n  arr.push(\n    this.out(this.indent),\n    this.out(name + (this.compress ? ':' : ': '), prop),\n    this.out(val, prop.expr),\n    this.out(this.compress ? (this.last ? '' : ';') : ';')\n  );\n  return arr.join('');\n};\n\n/**\n * Debug info.\n */\n\nCompiler.prototype.debugInfo = function(node){\n\n  var path = node.filename == 'stdin' ? 'stdin' : fs.realpathSync(node.filename)\n    , line = (node.nodes && node.nodes.length ? node.nodes[0].lineno : node.lineno) || 1;\n\n  if (this.linenos){\n    this.buf += '\\n/* ' + 'line ' + line + ' : ' + path + ' */\\n';\n  }\n\n  if (this.firebug){\n    // debug info for firebug, the crazy formatting is needed\n    path = 'file\\\\\\:\\\\\\/\\\\\\/' + path.replace(/([.:/\\\\])/g, function(m) {\n      return '\\\\' + (m === '\\\\' ? '\\/' : m)\n    });\n    line = '\\\\00003' + line;\n    this.buf += '\\n@media -stylus-debug-info'\n      + '{filename{font-family:' + path\n      + '}line{font-family:' + line + '}}\\n';\n  }\n}\n"]},"metadata":{},"sourceType":"script"}