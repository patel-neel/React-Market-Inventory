{"ast":null,"code":"var nodes = require('../nodes'),\n    hsla = require('./hsla'),\n    component = require('./component');\n/**\n * Return the hue component of the given `color`,\n * or set the hue component to the optional second `value` argument.\n *\n * Examples:\n *\n *    hue(#00c)\n *    // => 240deg\n *\n *    hue(#00c, 90deg)\n *    // => #6c0\n *\n * @param {RGBA|HSLA} color\n * @param {Unit} [value]\n * @return {Unit|RGBA}\n * @api public\n */\n\n\nfunction hue(color, value) {\n  if (value) {\n    var hslaColor = color.hsla;\n    return hsla(value, new nodes.Unit(hslaColor.s), new nodes.Unit(hslaColor.l), new nodes.Unit(hslaColor.a));\n  }\n\n  return component(color, new nodes.String('hue'));\n}\n\n;\nhue.params = ['color', 'value'];\nmodule.exports = hue;","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/functions/hue.js"],"names":["nodes","require","hsla","component","hue","color","value","hslaColor","Unit","s","l","a","String","params","module","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAAnB;AAAA,IACIC,IAAI,GAAGD,OAAO,CAAC,QAAD,CADlB;AAAA,IAEIE,SAAS,GAAGF,OAAO,CAAC,aAAD,CAFvB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASG,GAAT,CAAaC,KAAb,EAAoBC,KAApB,EAA0B;AACxB,MAAIA,KAAJ,EAAW;AACT,QAAIC,SAAS,GAAGF,KAAK,CAACH,IAAtB;AACA,WAAOA,IAAI,CACTI,KADS,EAET,IAAIN,KAAK,CAACQ,IAAV,CAAeD,SAAS,CAACE,CAAzB,CAFS,EAGT,IAAIT,KAAK,CAACQ,IAAV,CAAeD,SAAS,CAACG,CAAzB,CAHS,EAIT,IAAIV,KAAK,CAACQ,IAAV,CAAeD,SAAS,CAACI,CAAzB,CAJS,CAAX;AAMD;;AACD,SAAOR,SAAS,CAACE,KAAD,EAAQ,IAAIL,KAAK,CAACY,MAAV,CAAiB,KAAjB,CAAR,CAAhB;AACD;;AAAA;AACDR,GAAG,CAACS,MAAJ,GAAa,CAAC,OAAD,EAAU,OAAV,CAAb;AACAC,MAAM,CAACC,OAAP,GAAiBX,GAAjB","sourcesContent":["var nodes = require('../nodes')\n  , hsla = require('./hsla')\n  , component = require('./component');\n\n/**\n * Return the hue component of the given `color`,\n * or set the hue component to the optional second `value` argument.\n *\n * Examples:\n *\n *    hue(#00c)\n *    // => 240deg\n *\n *    hue(#00c, 90deg)\n *    // => #6c0\n *\n * @param {RGBA|HSLA} color\n * @param {Unit} [value]\n * @return {Unit|RGBA}\n * @api public\n */\n\nfunction hue(color, value){\n  if (value) {\n    var hslaColor = color.hsla;\n    return hsla(\n      value,\n      new nodes.Unit(hslaColor.s),\n      new nodes.Unit(hslaColor.l),\n      new nodes.Unit(hslaColor.a)\n    )\n  }\n  return component(color, new nodes.String('hue'));\n};\nhue.params = ['color', 'value'];\nmodule.exports = hue;\n"]},"metadata":{},"sourceType":"script"}