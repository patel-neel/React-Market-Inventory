{"ast":null,"code":"var utils = require('../utils'),\n    nodes = require('../nodes');\n/**\n * Add property `name` with the given `expr`\n * to the mixin-able block.\n *\n * @param {String|Ident|Literal} name\n * @param {Expression} expr\n * @return {Property}\n * @api public\n */\n\n\n(module.exports = function addProperty(name, expr) {\n  utils.assertType(name, 'expression', 'name');\n  name = utils.unwrap(name).first;\n  utils.assertString(name, 'name');\n  utils.assertType(expr, 'expression', 'expr');\n  var prop = new nodes.Property([name], expr);\n  var block = this.closestBlock;\n  var len = block.nodes.length,\n      head = block.nodes.slice(0, block.index),\n      tail = block.nodes.slice(block.index++, len);\n  head.push(prop);\n  block.nodes = head.concat(tail);\n  return prop;\n}).raw = true;","map":{"version":3,"sources":["/Users/neelpatel/Desktop/ReactForBeginnersStarterFilesmaster/catchOfTheDay/node_modules/stylus/lib/functions/add-property.js"],"names":["utils","require","nodes","module","exports","addProperty","name","expr","assertType","unwrap","first","assertString","prop","Property","block","closestBlock","len","length","head","slice","index","tail","push","concat","raw"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAAnB;AAAA,IACIC,KAAK,GAAGD,OAAO,CAAC,UAAD,CADnB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,CAACE,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,IAA3B,EAAgC;AAChDP,EAAAA,KAAK,CAACQ,UAAN,CAAiBF,IAAjB,EAAuB,YAAvB,EAAqC,MAArC;AACAA,EAAAA,IAAI,GAAGN,KAAK,CAACS,MAAN,CAAaH,IAAb,EAAmBI,KAA1B;AACAV,EAAAA,KAAK,CAACW,YAAN,CAAmBL,IAAnB,EAAyB,MAAzB;AACAN,EAAAA,KAAK,CAACQ,UAAN,CAAiBD,IAAjB,EAAuB,YAAvB,EAAqC,MAArC;AACA,MAAIK,IAAI,GAAG,IAAIV,KAAK,CAACW,QAAV,CAAmB,CAACP,IAAD,CAAnB,EAA2BC,IAA3B,CAAX;AACA,MAAIO,KAAK,GAAG,KAAKC,YAAjB;AAEA,MAAIC,GAAG,GAAGF,KAAK,CAACZ,KAAN,CAAYe,MAAtB;AAAA,MACIC,IAAI,GAAGJ,KAAK,CAACZ,KAAN,CAAYiB,KAAZ,CAAkB,CAAlB,EAAqBL,KAAK,CAACM,KAA3B,CADX;AAAA,MAEIC,IAAI,GAAGP,KAAK,CAACZ,KAAN,CAAYiB,KAAZ,CAAkBL,KAAK,CAACM,KAAN,EAAlB,EAAiCJ,GAAjC,CAFX;AAGAE,EAAAA,IAAI,CAACI,IAAL,CAAUV,IAAV;AACAE,EAAAA,KAAK,CAACZ,KAAN,GAAcgB,IAAI,CAACK,MAAL,CAAYF,IAAZ,CAAd;AAEA,SAAOT,IAAP;AACD,CAfD,EAeGY,GAfH,GAeS,IAfT","sourcesContent":["var utils = require('../utils')\n  , nodes = require('../nodes');\n\n/**\n * Add property `name` with the given `expr`\n * to the mixin-able block.\n *\n * @param {String|Ident|Literal} name\n * @param {Expression} expr\n * @return {Property}\n * @api public\n */\n\n(module.exports = function addProperty(name, expr){\n  utils.assertType(name, 'expression', 'name');\n  name = utils.unwrap(name).first;\n  utils.assertString(name, 'name');\n  utils.assertType(expr, 'expression', 'expr');\n  var prop = new nodes.Property([name], expr);\n  var block = this.closestBlock;\n\n  var len = block.nodes.length\n    , head = block.nodes.slice(0, block.index)\n    , tail = block.nodes.slice(block.index++, len);\n  head.push(prop);\n  block.nodes = head.concat(tail);\n\n  return prop;\n}).raw = true;\n"]},"metadata":{},"sourceType":"script"}